{"version":3,"file":"stellar-base.min.js","mappings":"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,GASlBomF,IADApmF,GADAgmF,IADAhmF,GADA4mF,IADA5mF,GADAwmF,IADAxmF,EAAIomF,EAAKJ,EAAK,IACL,EAAIhmF,IAAI,IACRomF,EAAK,IACJ,EAAIpmF,IAAI,IACRwmF,EAAK,IACN,GAAKxmF,IAAI,IACT4mF,EAAM,IACN,GAAK5mF,IAAI,GASlBymF,IADAzmF,GADAqmF,IADArmF,GADAimF,IADAjmF,GADA6mF,IADA7mF,EAAIymF,EAAMJ,EAAK,IACL,EAAIrmF,IAAI,IACRymF,EAAM,IACP,EAAIzmF,IAAI,IACR6mF,EAAM,IACN,GAAK7mF,IAAI,IACTimF,EAAK,IACJ,GAAKjmF,IAAI,GASnB8mF,IADA9mF,GADA0mF,IADA1mF,GADAsmF,IADAtmF,GADAkmF,IADAlmF,EAAI8mF,EAAMJ,EAAM,IACP,EAAI1mF,IAAI,IACR8mF,EAAM,IACN,EAAI9mF,IAAI,IACRkmF,EAAK,IACJ,GAAKlmF,IAAI,IACTsmF,EAAK,IACL,GAAKtmF,IAAI,GASnB+lF,IADA/lF,GADAkmF,IADAlmF,GADAimF,IADAjmF,GADAgmF,IADAhmF,EAAI+lF,EAAKG,EAAK,IACL,EAAIlmF,IAAI,IACR+lF,EAAK,IACL,EAAI/lF,IAAI,IACRgmF,EAAK,IACL,GAAKhmF,IAAI,IACTimF,EAAK,IACL,GAAKjmF,IAAI,GASlBomF,IADApmF,GADAmmF,IADAnmF,GADAsmF,IADAtmF,GADAqmF,IADArmF,EAAIomF,EAAKD,EAAK,IACL,EAAInmF,IAAI,IACRomF,EAAK,IACL,EAAIpmF,IAAI,IACRqmF,EAAK,IACL,GAAKrmF,IAAI,IACTsmF,EAAK,IACL,GAAKtmF,IAAI,GASlBymF,IADAzmF,GADAwmF,IADAxmF,GADAumF,IADAvmF,GADA0mF,IADA1mF,EAAIymF,EAAMD,EAAK,IACL,EAAIxmF,IAAI,IACRymF,EAAM,IACP,EAAIzmF,IAAI,IACR0mF,EAAM,IACN,GAAK1mF,IAAI,IACTumF,EAAK,IACJ,GAAKvmF,IAAI,GASnB8mF,IADA9mF,GADA6mF,IADA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","sources":["webpack://StellarBase/./node_modules/@stellar/js-xdr/dist/xdr.js","webpack://StellarBase/./node_modules/assert/build/assert.js","webpack://StellarBase/./node_modules/assert/build/internal/assert/assertion_error.js","webpack://StellarBase/./node_modules/assert/build/internal/errors.js","webpack://StellarBase/./node_modules/assert/build/internal/util/comparisons.js","webpack://StellarBase/./config/buffer.js","webpack://StellarBase/./src/account.js","webpack://StellarBase/./src/address.js","webpack://StellarBase/./src/asset.js","webpack://StellarBase/./src/auth.js","webpack://StellarBase/./src/claimant.js","webpack://StellarBase/./src/contract.js","webpack://StellarBase/./src/events.js","webpack://StellarBase/./src/fee_bump_transaction.js","webpack://StellarBase/./src/generated/curr_generated.js","webpack://StellarBase/./src/get_liquidity_pool_id.js","webpack://StellarBase/./src/hashing.js","webpack://StellarBase/./src/index.js","webpack://StellarBase/./src/invocation.js","webpack://StellarBase/./src/jsxdr.js","webpack://StellarBase/./src/keypair.js","webpack://StellarBase/./src/liquidity_pool_asset.js","webpack://StellarBase/./src/liquidity_pool_id.js","webpack://StellarBase/./src/memo.js","webpack://StellarBase/./src/muxed_account.js","webpack://StellarBase/./src/network.js","webpack://StellarBase/./src/numbers/index.js","webpack://StellarBase/./src/numbers/int128.js","webpack://StellarBase/./src/numbers/int256.js","webpack://StellarBase/./src/numbers/sc_int.js","webpack://StellarBase/./src/numbers/uint128.js","webpack://StellarBase/./src/numbers/uint256.js","webpack://StellarBase/./src/numbers/xdr_large_int.js","webpack://StellarBase/./src/operation.js","webpack://StellarBase/./src/operations/account_merge.js","webpack://StellarBase/./src/operations/allow_trust.js","webpack://StellarBase/./src/operations/begin_sponsoring_future_reserves.js","webpack://StellarBase/./src/operations/bump_sequence.js","webpack://StellarBase/./src/operations/change_trust.js","webpack://StellarBase/./src/operations/claim_claimable_balance.js","webpack://StellarBase/./src/operations/clawback.js","webpack://StellarBase/./src/operations/clawback_claimable_balance.js","webpack://StellarBase/./src/operations/create_account.js","webpack://StellarBase/./src/operations/create_claimable_balance.js","webpack://StellarBase/./src/operations/create_passive_sell_offer.js","webpack://StellarBase/./src/operations/end_sponsoring_future_reserves.js","webpack://StellarBase/./src/operations/extend_footprint_ttl.js","webpack://StellarBase/./src/operations/index.js","webpack://StellarBase/./src/operations/inflation.js","webpack://StellarBase/./src/operations/invoke_host_function.js","webpack://StellarBase/./src/operations/liquidity_pool_deposit.js","webpack://StellarBase/./src/operations/liquidity_pool_withdraw.js","webpack://StellarBase/./src/operations/manage_buy_offer.js","webpack://StellarBase/./src/operations/manage_data.js","webpack://StellarBase/./src/operations/manage_sell_offer.js","webpack://StellarBase/./src/operations/path_payment_strict_receive.js","webpack://StellarBase/./src/operations/path_payment_strict_send.js","webpack://StellarBase/./src/operations/payment.js","webpack://StellarBase/./src/operations/restore_footprint.js","webpack://StellarBase/./src/operations/revoke_sponsorship.js","webpack://StellarBase/./src/operations/set_options.js","webpack://StellarBase/./src/operations/set_trustline_flags.js","webpack://StellarBase/./src/scval.js","webpack://StellarBase/./src/signerkey.js","webpack://StellarBase/./src/signing.js","webpack://StellarBase/./src/soroban.js","webpack://StellarBase/./src/sorobandata_builder.js","webpack://StellarBase/./src/strkey.js","webpack://StellarBase/./src/transaction.js","webpack://StellarBase/./src/transaction_base.js","webpack://StellarBase/./src/transaction_builder.js","webpack://StellarBase/./src/util/bignumber.js","webpack://StellarBase/./src/util/checksum.js","webpack://StellarBase/./src/util/continued_fraction.js","webpack://StellarBase/./src/util/decode_encode_muxed_account.js","webpack://StellarBase/./src/util/util.js","webpack://StellarBase/./src/xdr.js","webpack://StellarBase/./node_modules/base32.js/base32.js","webpack://StellarBase/./node_modules/base64-js/index.js","webpack://StellarBase/./node_modules/buffer/index.js","webpack://StellarBase/./node_modules/call-bind/callBound.js","webpack://StellarBase/./node_modules/call-bind/index.js","webpack://StellarBase/./node_modules/console-browserify/index.js","webpack://StellarBase/./node_modules/define-data-property/index.js","webpack://StellarBase/./node_modules/define-properties/index.js","webpack://StellarBase/./node_modules/es-define-property/index.js","webpack://StellarBase/./node_modules/es-errors/eval.js","webpack://StellarBase/./node_modules/es-errors/index.js","webpack://StellarBase/./node_modules/es-errors/range.js","webpack://StellarBase/./node_modules/es-errors/ref.js","webpack://StellarBase/./node_modules/es-errors/syntax.js","webpack://StellarBase/./node_modules/es-errors/type.js","webpack://StellarBase/./node_modules/es-errors/uri.js","webpack://StellarBase/./node_modules/for-each/index.js","webpack://StellarBase/./node_modules/function-bind/implementation.js","webpack://StellarBase/./node_modules/function-bind/index.js","webpack://StellarBase/./node_modules/get-intrinsic/index.js","webpack://StellarBase/./node_modules/gopd/index.js","webpack://StellarBase/./node_modules/has-property-descriptors/index.js","webpack://StellarBase/./node_modules/has-proto/index.js","webpack://StellarBase/./node_modules/has-symbols/index.js","webpack://StellarBase/./node_modules/has-symbols/shams.js","webpack://StellarBase/./node_modules/has-tostringtag/shams.js","webpack://StellarBase/./node_modules/hasown/index.js","webpack://StellarBase/./node_modules/ieee754/index.js","webpack://StellarBase/./node_modules/inherits/inherits_browser.js","webpack://StellarBase/./node_modules/is-arguments/index.js","webpack://StellarBase/./node_modules/is-callable/index.js","webpack://StellarBase/./node_modules/is-generator-function/index.js","webpack://StellarBase/./node_modules/is-nan/implementation.js","webpack://StellarBase/./node_modules/is-nan/index.js","webpack://StellarBase/./node_modules/is-nan/polyfill.js","webpack://StellarBase/./node_modules/is-nan/shim.js","webpack://StellarBase/./node_modules/is-typed-array/index.js","webpack://StellarBase/./node_modules/object-is/implementation.js","webpack://StellarBase/./node_modules/object-is/index.js","webpack://StellarBase/./node_modules/object-is/polyfill.js","webpack://StellarBase/./node_modules/object-is/shim.js","webpack://StellarBase/./node_modules/object-keys/implementation.js","webpack://StellarBase/./node_modules/object-keys/index.js","webpack://StellarBase/./node_modules/object-keys/isArguments.js","webpack://StellarBase/./node_modules/object.assign/implementation.js","webpack://StellarBase/./node_modules/object.assign/polyfill.js","webpack://StellarBase/./node_modules/possible-typed-array-names/index.js","webpack://StellarBase/./node_modules/process/browser.js","webpack://StellarBase/./node_modules/safe-buffer/index.js","webpack://StellarBase/./node_modules/set-function-length/index.js","webpack://StellarBase/./node_modules/sha.js/hash.js","webpack://StellarBase/./node_modules/sha.js/index.js","webpack://StellarBase/./node_modules/sha.js/sha.js","webpack://StellarBase/./node_modules/sha.js/sha1.js","webpack://StellarBase/./node_modules/sha.js/sha224.js","webpack://StellarBase/./node_modules/sha.js/sha256.js","webpack://StellarBase/./node_modules/sha.js/sha384.js","webpack://StellarBase/./node_modules/sha.js/sha512.js","webpack://StellarBase/./node_modules/tweetnacl/nacl-fast.js","webpack://StellarBase/./node_modules/util/support/isBufferBrowser.js","webpack://StellarBase/./node_modules/util/support/types.js","webpack://StellarBase/./node_modules/util/util.js","webpack://StellarBase/./node_modules/which-typed-array/index.js","webpack://StellarBase/./node_modules/available-typed-arrays/index.js","webpack://StellarBase/./node_modules/@noble/hashes/esm/_assert.js","webpack://StellarBase/./node_modules/@noble/hashes/esm/_u64.js","webpack://StellarBase/./node_modules/@noble/hashes/esm/crypto.js","webpack://StellarBase/./node_modules/@noble/hashes/esm/sha3.js","webpack://StellarBase/./node_modules/@noble/hashes/esm/utils.js","webpack://StellarBase/./node_modules/@noble/post-quantum/esm/_crystals.js","webpack://StellarBase/./node_modules/@noble/post-quantum/esm/ml-dsa.js","webpack://StellarBase/./node_modules/@noble/post-quantum/esm/utils.js","webpack://StellarBase/./node_modules/bignumber.js/bignumber.mjs","webpack://StellarBase/webpack/bootstrap","webpack://StellarBase/webpack/runtime/compat get default export","webpack://StellarBase/webpack/runtime/define property getters","webpack://StellarBase/webpack/runtime/global","webpack://StellarBase/webpack/runtime/harmony module decorator","webpack://StellarBase/webpack/runtime/hasOwnProperty shorthand","webpack://StellarBase/webpack/runtime/make namespace object","webpack://StellarBase/webpack/startup"],"sourcesContent":["/*! For license information please see xdr.js.LICENSE.txt */\n!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.XDR=e():t.XDR=e()}(this,(()=>(()=>{var t={616:(t,e,r)=>{\"use strict\";r.d(e,{A:()=>i});var n=r(287);n.hp.alloc(1).subarray(0,1)instanceof n.hp||(n.hp.prototype.subarray=function(t,e){const r=Uint8Array.prototype.subarray.call(this,t,e);return Object.setPrototypeOf(r,n.hp.prototype),r});const i=n.hp},281:(t,e,r)=>{const n=r(164);t.exports=n},164:(t,e,r)=>{\"use strict\";r.r(e),r.d(e,{Array:()=>F,Bool:()=>S,Double:()=>L,Enum:()=>q,Float:()=>O,Hyper:()=>U,Int:()=>v,LargeInt:()=>x,Opaque:()=>D,Option:()=>X,Quadruple:()=>N,Reference:()=>G,String:()=>M,Struct:()=>Y,Union:()=>W,UnsignedHyper:()=>T,UnsignedInt:()=>R,VarArray:()=>P,VarOpaque:()=>z,Void:()=>k,XdrReader:()=>f,XdrWriter:()=>c,config:()=>it});class n extends TypeError{constructor(t){super(`XDR Write Error: ${t}`)}}class i extends TypeError{constructor(t){super(`XDR Read Error: ${t}`)}}class o extends TypeError{constructor(t){super(`XDR Type Definition Error: ${t}`)}}class s extends o{constructor(){super(\"method not implemented, it should be overloaded in the descendant class.\")}}var u=r(616).A;class f{constructor(t){if(!u.isBuffer(t)){if(!(t instanceof Array||Array.isArray(t)||ArrayBuffer.isView(t)))throw new i(`source invalid: ${t}`);t=u.from(t)}this._buffer=t,this._length=t.length,this._index=0}_buffer;_length;_index;get eof(){return this._index===this._length}advance(t){const e=this._index;if(this._index+=t,this._length<this._index)throw new i(\"attempt to read outside the boundary of the buffer\");const r=4-(t%4||4);if(r>0){for(let t=0;t<r;t++)if(0!==this._buffer[this._index+t])throw new i(\"invalid padding\");this._index+=r}return e}rewind(){this._index=0}read(t){const e=this.advance(t);return this._buffer.subarray(e,e+t)}readInt32BE(){return this._buffer.readInt32BE(this.advance(4))}readUInt32BE(){return this._buffer.readUInt32BE(this.advance(4))}readBigInt64BE(){return this._buffer.readBigInt64BE(this.advance(8))}readBigUInt64BE(){return this._buffer.readBigUInt64BE(this.advance(8))}readFloatBE(){return this._buffer.readFloatBE(this.advance(4))}readDoubleBE(){return this._buffer.readDoubleBE(this.advance(8))}ensureInputConsumed(){if(this._index!==this._length)throw new i(\"invalid XDR contract typecast - source buffer not entirely consumed\")}}var a=r(616).A;const h=8192;class c{constructor(t){\"number\"==typeof t?t=a.allocUnsafe(t):t instanceof a||(t=a.allocUnsafe(h)),this._buffer=t,this._length=t.length}_buffer;_length;_index=0;alloc(t){const e=this._index;return this._index+=t,this._length<this._index&&this.resize(this._index),e}resize(t){const e=Math.ceil(t/h)*h,r=a.allocUnsafe(e);this._buffer.copy(r,0,0,this._length),this._buffer=r,this._length=e}finalize(){return this._buffer.subarray(0,this._index)}toArray(){return[...this.finalize()]}write(t,e){if(\"string\"==typeof t){const r=this.alloc(e);this._buffer.write(t,r,\"utf8\")}else{t instanceof a||(t=a.from(t));const r=this.alloc(e);t.copy(this._buffer,r,0,e)}const r=4-(e%4||4);if(r>0){const t=this.alloc(r);this._buffer.fill(0,t,this._index)}}writeInt32BE(t){const e=this.alloc(4);this._buffer.writeInt32BE(t,e)}writeUInt32BE(t){const e=this.alloc(4);this._buffer.writeUInt32BE(t,e)}writeBigInt64BE(t){const e=this.alloc(8);this._buffer.writeBigInt64BE(t,e)}writeBigUInt64BE(t){const e=this.alloc(8);this._buffer.writeBigUInt64BE(t,e)}writeFloatBE(t){const e=this.alloc(4);this._buffer.writeFloatBE(t,e)}writeDoubleBE(t){const e=this.alloc(8);this._buffer.writeDoubleBE(t,e)}static bufferChunkSize=h}var l=r(616).A;class p{toXDR(t=\"raw\"){if(!this.write)return this.constructor.toXDR(this,t);const e=new c;return this.write(this,e),w(e.finalize(),t)}fromXDR(t,e=\"raw\"){if(!this.read)return this.constructor.fromXDR(t,e);const r=new f(m(t,e)),n=this.read(r);return r.ensureInputConsumed(),n}validateXDR(t,e=\"raw\"){try{return this.fromXDR(t,e),!0}catch(t){return!1}}static toXDR(t,e=\"raw\"){const r=new c;return this.write(t,r),w(r.finalize(),e)}static fromXDR(t,e=\"raw\"){const r=new f(m(t,e)),n=this.read(r);return r.ensureInputConsumed(),n}static validateXDR(t,e=\"raw\"){try{return this.fromXDR(t,e),!0}catch(t){return!1}}}class d extends p{static read(t){throw new s}static write(t,e){throw new s}static isValid(t){return!1}}class g extends p{isValid(t){return!1}}class y extends TypeError{constructor(t){super(`Invalid format ${t}, must be one of \"raw\", \"hex\", \"base64\"`)}}function w(t,e){switch(e){case\"raw\":return t;case\"hex\":return t.toString(\"hex\");case\"base64\":return t.toString(\"base64\");default:throw new y(e)}}function m(t,e){switch(e){case\"raw\":return t;case\"hex\":return l.from(t,\"hex\");case\"base64\":return l.from(t,\"base64\");default:throw new y(e)}}function b(t,e){return null!=t&&(t instanceof e||_(t,e)&&\"function\"==typeof t.constructor.read&&\"function\"==typeof t.constructor.write&&_(t,\"XdrType\"))}function _(t,e){do{if(t.constructor.name===e)return!0}while(t=Object.getPrototypeOf(t));return!1}const B=2147483647,E=-2147483648;class v extends d{static read(t){return t.readInt32BE()}static write(t,e){if(\"number\"!=typeof t)throw new n(\"not a number\");if((0|t)!==t)throw new n(\"invalid i32 value\");e.writeInt32BE(t)}static isValid(t){return\"number\"==typeof t&&(0|t)===t&&(t>=E&&t<=B)}}function A(t,e,r){if(\"bigint\"!=typeof t)throw new TypeError(\"Expected bigint 'value', got \"+typeof t);const n=e/r;if(1===n)return[t];if(r<32||r>128||2!==n&&4!==n&&8!==n)throw new TypeError(`invalid bigint (${t}) and slice size (${e} -> ${r}) combination`);const i=BigInt(r),o=new Array(n);for(let e=0;e<n;e++)o[e]=BigInt.asIntN(r,t),t>>=i;return o}function I(t,e){if(e)return[0n,(1n<<BigInt(t))-1n];const r=1n<<BigInt(t-1);return[0n-r,r-1n]}v.MAX_VALUE=B,v.MIN_VALUE=2147483648;class x extends d{constructor(t){super(),this._value=function(t,e,r){t instanceof Array?t.length&&t[0]instanceof Array&&(t=t[0]):t=[t];const n=e/t.length;switch(n){case 32:case 64:case 128:case 256:break;default:throw new RangeError(`expected slices to fit in 32/64/128/256 bits, got ${t}`)}try{for(let e=0;e<t.length;e++)\"bigint\"!=typeof t[e]&&(t[e]=BigInt(t[e].valueOf()))}catch(e){throw new TypeError(`expected bigint-like values, got: ${t} (${e})`)}if(r&&1===t.length&&t[0]<0n)throw new RangeError(`expected a positive value, got: ${t}`);let i=BigInt.asUintN(n,t[0]);for(let e=1;e<t.length;e++)i|=BigInt.asUintN(n,t[e])<<BigInt(e*n);r||(i=BigInt.asIntN(e,i));const[o,s]=I(e,r);if(i>=o&&i<=s)return i;throw new TypeError(`bigint values [${t}] for ${function(t,e){return`${e?\"u\":\"i\"}${t}`}(e,r)} out of range [${o}, ${s}]: ${i}`)}(t,this.size,this.unsigned)}get unsigned(){throw new s}get size(){throw new s}slice(t){return A(this._value,this.size,t)}toString(){return this._value.toString()}toJSON(){return{_value:this._value.toString()}}toBigInt(){return BigInt(this._value)}static read(t){const{size:e}=this.prototype;return 64===e?new this(t.readBigUInt64BE()):new this(...Array.from({length:e/64},(()=>t.readBigUInt64BE())).reverse())}static write(t,e){if(t instanceof this)t=t._value;else if(\"bigint\"!=typeof t||t>this.MAX_VALUE||t<this.MIN_VALUE)throw new n(`${t} is not a ${this.name}`);const{unsigned:r,size:i}=this.prototype;if(64===i)r?e.writeBigUInt64BE(t):e.writeBigInt64BE(t);else for(const n of A(t,i,64).reverse())r?e.writeBigUInt64BE(n):e.writeBigInt64BE(n)}static isValid(t){return\"bigint\"==typeof t||t instanceof this}static fromString(t){return new this(t)}static MAX_VALUE=0n;static MIN_VALUE=0n;static defineIntBoundaries(){const[t,e]=I(this.prototype.size,this.prototype.unsigned);this.MIN_VALUE=t,this.MAX_VALUE=e}}class U extends x{constructor(...t){super(t)}get low(){return Number(0xffffffffn&this._value)|0}get high(){return Number(this._value>>32n)|0}get size(){return 64}get unsigned(){return!1}static fromBits(t,e){return new this(t,e)}}U.defineIntBoundaries();const $=4294967295;class R extends d{static read(t){return t.readUInt32BE()}static write(t,e){if(\"number\"!=typeof t||!(t>=0&&t<=$)||t%1!=0)throw new n(\"invalid u32 value\");e.writeUInt32BE(t)}static isValid(t){return\"number\"==typeof t&&t%1==0&&(t>=0&&t<=$)}}R.MAX_VALUE=$,R.MIN_VALUE=0;class T extends x{constructor(...t){super(t)}get low(){return Number(0xffffffffn&this._value)|0}get high(){return Number(this._value>>32n)|0}get size(){return 64}get unsigned(){return!0}static fromBits(t,e){return new this(t,e)}}T.defineIntBoundaries();class O extends d{static read(t){return t.readFloatBE()}static write(t,e){if(\"number\"!=typeof t)throw new n(\"not a number\");e.writeFloatBE(t)}static isValid(t){return\"number\"==typeof t}}class L extends d{static read(t){return t.readDoubleBE()}static write(t,e){if(\"number\"!=typeof t)throw new n(\"not a number\");e.writeDoubleBE(t)}static isValid(t){return\"number\"==typeof t}}class N extends d{static read(){throw new o(\"quadruple not supported\")}static write(){throw new o(\"quadruple not supported\")}static isValid(){return!1}}class S extends d{static read(t){const e=v.read(t);switch(e){case 0:return!1;case 1:return!0;default:throw new i(`got ${e} when trying to read a bool`)}}static write(t,e){const r=t?1:0;v.write(r,e)}static isValid(t){return\"boolean\"==typeof t}}var V=r(616).A;class M extends g{constructor(t=R.MAX_VALUE){super(),this._maxLength=t}read(t){const e=R.read(t);if(e>this._maxLength)throw new i(`saw ${e} length String, max allowed is ${this._maxLength}`);return t.read(e)}readString(t){return this.read(t).toString(\"utf8\")}write(t,e){const r=\"string\"==typeof t?V.byteLength(t,\"utf8\"):t.length;if(r>this._maxLength)throw new n(`got ${t.length} bytes, max allowed is ${this._maxLength}`);R.write(r,e),e.write(t,r)}isValid(t){return\"string\"==typeof t?V.byteLength(t,\"utf8\")<=this._maxLength:!!(t instanceof Array||V.isBuffer(t))&&t.length<=this._maxLength}}var C=r(616).A;class D extends g{constructor(t){super(),this._length=t}read(t){return t.read(this._length)}write(t,e){const{length:r}=t;if(r!==this._length)throw new n(`got ${t.length} bytes, expected ${this._length}`);e.write(t,r)}isValid(t){return C.isBuffer(t)&&t.length===this._length}}var j=r(616).A;class z extends g{constructor(t=R.MAX_VALUE){super(),this._maxLength=t}read(t){const e=R.read(t);if(e>this._maxLength)throw new i(`saw ${e} length VarOpaque, max allowed is ${this._maxLength}`);return t.read(e)}write(t,e){const{length:r}=t;if(t.length>this._maxLength)throw new n(`got ${t.length} bytes, max allowed is ${this._maxLength}`);R.write(r,e),e.write(t,r)}isValid(t){return j.isBuffer(t)&&t.length<=this._maxLength}}class F extends g{constructor(t,e){super(),this._childType=t,this._length=e}read(t){const e=new r.g.Array(this._length);for(let r=0;r<this._length;r++)e[r]=this._childType.read(t);return e}write(t,e){if(!r.g.Array.isArray(t))throw new n(\"value is not array\");if(t.length!==this._length)throw new n(`got array of size ${t.length}, expected ${this._length}`);for(const r of t)this._childType.write(r,e)}isValid(t){if(!(t instanceof r.g.Array)||t.length!==this._length)return!1;for(const e of t)if(!this._childType.isValid(e))return!1;return!0}}class P extends g{constructor(t,e=R.MAX_VALUE){super(),this._childType=t,this._maxLength=e}read(t){const e=R.read(t);if(e>this._maxLength)throw new i(`saw ${e} length VarArray, max allowed is ${this._maxLength}`);const r=new Array(e);for(let n=0;n<e;n++)r[n]=this._childType.read(t);return r}write(t,e){if(!(t instanceof Array))throw new n(\"value is not array\");if(t.length>this._maxLength)throw new n(`got array of size ${t.length}, max allowed is ${this._maxLength}`);R.write(t.length,e);for(const r of t)this._childType.write(r,e)}isValid(t){if(!(t instanceof Array)||t.length>this._maxLength)return!1;for(const e of t)if(!this._childType.isValid(e))return!1;return!0}}class X extends d{constructor(t){super(),this._childType=t}read(t){if(S.read(t))return this._childType.read(t)}write(t,e){const r=null!=t;S.write(r,e),r&&this._childType.write(t,e)}isValid(t){return null==t||this._childType.isValid(t)}}class k extends d{static read(){}static write(t){if(void 0!==t)throw new n(\"trying to write value to a void slot\")}static isValid(t){return void 0===t}}class q extends d{constructor(t,e){super(),this.name=t,this.value=e}static read(t){const e=v.read(t),r=this._byValue[e];if(void 0===r)throw new i(`unknown ${this.enumName} member for value ${e}`);return r}static write(t,e){if(!this.isValid(t))throw new n(`${t} has enum name ${t?.enumName}, not ${this.enumName}: ${JSON.stringify(t)}`);v.write(t.value,e)}static isValid(t){return t?.constructor?.enumName===this.enumName||b(t,this)}static members(){return this._members}static values(){return Object.values(this._members)}static fromName(t){const e=this._members[t];if(!e)throw new TypeError(`${t} is not a member of ${this.enumName}`);return e}static fromValue(t){const e=this._byValue[t];if(void 0===e)throw new TypeError(`${t} is not a value of any member of ${this.enumName}`);return e}static create(t,e,r){const n=class extends q{};n.enumName=e,t.results[e]=n,n._members={},n._byValue={};for(const[t,e]of Object.entries(r)){const r=new n(t,e);n._members[t]=r,n._byValue[e]=r,n[t]=()=>r}return n}}class G extends d{resolve(){throw new o('\"resolve\" method should be implemented in the descendant class')}}class Y extends g{constructor(t){super(),this._attributes=t||{}}static read(t){const e={};for(const[r,n]of this._fields)e[r]=n.read(t);return new this(e)}static write(t,e){if(!this.isValid(t))throw new n(`${t} has struct name ${t?.constructor?.structName}, not ${this.structName}: ${JSON.stringify(t)}`);for(const[r,n]of this._fields){const i=t._attributes[r];n.write(i,e)}}static isValid(t){return t?.constructor?.structName===this.structName||b(t,this)}static create(t,e,r){const n=class extends Y{};n.structName=e,t.results[e]=n;const i=new Array(r.length);for(let e=0;e<r.length;e++){const o=r[e],s=o[0];let u=o[1];u instanceof G&&(u=u.resolve(t)),i[e]=[s,u],n.prototype[s]=J(s)}return n._fields=i,n}}function J(t){return function(e){return void 0!==e&&(this._attributes[t]=e),this._attributes[t]}}class W extends g{constructor(t,e){super(),this.set(t,e)}set(t,e){\"string\"==typeof t&&(t=this.constructor._switchOn.fromName(t)),this._switch=t;const r=this.constructor.armForSwitch(this._switch);this._arm=r,this._armType=r===k?k:this.constructor._arms[r],this._value=e}get(t=this._arm){if(this._arm!==k&&this._arm!==t)throw new TypeError(`${t} not set`);return this._value}switch(){return this._switch}arm(){return this._arm}armType(){return this._armType}value(){return this._value}static armForSwitch(t){const e=this._switches.get(t);if(void 0!==e)return e;if(this._defaultArm)return this._defaultArm;throw new TypeError(`Bad union switch: ${t}`)}static armTypeForArm(t){return t===k?k:this._arms[t]}static read(t){const e=this._switchOn.read(t),r=this.armForSwitch(e),n=r===k?k:this._arms[r];let i;return i=void 0!==n?n.read(t):r.read(t),new this(e,i)}static write(t,e){if(!this.isValid(t))throw new n(`${t} has union name ${t?.unionName}, not ${this.unionName}: ${JSON.stringify(t)}`);this._switchOn.write(t.switch(),e),t.armType().write(t.value(),e)}static isValid(t){return t?.constructor?.unionName===this.unionName||b(t,this)}static create(t,e,r){const n=class extends W{};n.unionName=e,t.results[e]=n,r.switchOn instanceof G?n._switchOn=r.switchOn.resolve(t):n._switchOn=r.switchOn,n._switches=new Map,n._arms={};let i=r.defaultArm;i instanceof G&&(i=i.resolve(t)),n._defaultArm=i;for(const[t,e]of r.switches){const r=\"string\"==typeof t?n._switchOn.fromName(t):t;n._switches.set(r,e)}if(void 0!==n._switchOn.values)for(const t of n._switchOn.values())n[t.name]=function(e){return new n(t,e)},n.prototype[t.name]=function(e){return this.set(t,e)};if(r.arms)for(const[e,i]of Object.entries(r.arms))n._arms[e]=i instanceof G?i.resolve(t):i,i!==k&&(n.prototype[e]=function(){return this.get(e)});return n}}class H extends G{constructor(t){super(),this.name=t}resolve(t){return t.definitions[this.name].resolve(t)}}class Q extends G{constructor(t,e,r=!1){super(),this.childReference=t,this.length=e,this.variable=r}resolve(t){let e=this.childReference,r=this.length;return e instanceof G&&(e=e.resolve(t)),r instanceof G&&(r=r.resolve(t)),this.variable?new P(e,r):new F(e,r)}}class Z extends G{constructor(t){super(),this.childReference=t,this.name=t.name}resolve(t){let e=this.childReference;return e instanceof G&&(e=e.resolve(t)),new X(e)}}class K extends G{constructor(t,e){super(),this.sizedType=t,this.length=e}resolve(t){let e=this.length;return e instanceof G&&(e=e.resolve(t)),new this.sizedType(e)}}class tt{constructor(t,e,r){this.constructor=t,this.name=e,this.config=r}resolve(t){return this.name in t.results?t.results[this.name]:this.constructor(t,this.name,this.config)}}function et(t,e,r){return r instanceof G&&(r=r.resolve(t)),t.results[e]=r,r}function rt(t,e,r){return t.results[e]=r,r}class nt{constructor(t){this._destination=t,this._definitions={}}enum(t,e){const r=new tt(q.create,t,e);this.define(t,r)}struct(t,e){const r=new tt(Y.create,t,e);this.define(t,r)}union(t,e){const r=new tt(W.create,t,e);this.define(t,r)}typedef(t,e){const r=new tt(et,t,e);this.define(t,r)}const(t,e){const r=new tt(rt,t,e);this.define(t,r)}void(){return k}bool(){return S}int(){return v}hyper(){return U}uint(){return R}uhyper(){return T}float(){return O}double(){return L}quadruple(){return N}string(t){return new K(M,t)}opaque(t){return new K(D,t)}varOpaque(t){return new K(z,t)}array(t,e){return new Q(t,e)}varArray(t,e){return new Q(t,e,!0)}option(t){return new Z(t)}define(t,e){if(void 0!==this._destination[t])throw new o(`${t} is already defined`);this._definitions[t]=e}lookup(t){return new H(t)}resolve(){for(const t of Object.values(this._definitions))t.resolve({definitions:this._definitions,results:this._destination})}}function it(t,e={}){if(t){const r=new nt(e);t(r),r.resolve()}return e}},526:(t,e)=>{\"use strict\";e.byteLength=function(t){var e=u(t),r=e[0],n=e[1];return 3*(r+n)/4-n},e.toByteArray=function(t){var e,r,o=u(t),s=o[0],f=o[1],a=new i(function(t,e,r){return 3*(e+r)/4-r}(0,s,f)),h=0,c=f>0?s-4:s;for(r=0;r<c;r+=4)e=n[t.charCodeAt(r)]<<18|n[t.charCodeAt(r+1)]<<12|n[t.charCodeAt(r+2)]<<6|n[t.charCodeAt(r+3)],a[h++]=e>>16&255,a[h++]=e>>8&255,a[h++]=255&e;2===f&&(e=n[t.charCodeAt(r)]<<2|n[t.charCodeAt(r+1)]>>4,a[h++]=255&e);1===f&&(e=n[t.charCodeAt(r)]<<10|n[t.charCodeAt(r+1)]<<4|n[t.charCodeAt(r+2)]>>2,a[h++]=e>>8&255,a[h++]=255&e);return a},e.fromByteArray=function(t){for(var e,n=t.length,i=n%3,o=[],s=16383,u=0,a=n-i;u<a;u+=s)o.push(f(t,u,u+s>a?a:u+s));1===i?(e=t[n-1],o.push(r[e>>2]+r[e<<4&63]+\"==\")):2===i&&(e=(t[n-2]<<8)+t[n-1],o.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+\"=\"));return o.join(\"\")};for(var r=[],n=[],i=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",s=0;s<64;++s)r[s]=o[s],n[o.charCodeAt(s)]=s;function u(t){var e=t.length;if(e%4>0)throw new Error(\"Invalid string. Length must be a multiple of 4\");var r=t.indexOf(\"=\");return-1===r&&(r=e),[r,r===e?0:4-r%4]}function f(t,e,n){for(var i,o,s=[],u=e;u<n;u+=3)i=(t[u]<<16&16711680)+(t[u+1]<<8&65280)+(255&t[u+2]),s.push(r[(o=i)>>18&63]+r[o>>12&63]+r[o>>6&63]+r[63&o]);return s.join(\"\")}n[\"-\".charCodeAt(0)]=62,n[\"_\".charCodeAt(0)]=63},287:(t,e,r)=>{\"use strict\";const n=r(526),i=r(251),o=\"function\"==typeof Symbol&&\"function\"==typeof Symbol.for?Symbol.for(\"nodejs.util.inspect.custom\"):null;e.hp=f,e.IS=50;const s=2147483647;function u(t){if(t>s)throw new RangeError('The value \"'+t+'\" is invalid for option \"size\"');const e=new Uint8Array(t);return Object.setPrototypeOf(e,f.prototype),e}function f(t,e,r){if(\"number\"==typeof t){if(\"string\"==typeof e)throw new TypeError('The \"string\" argument must be of type string. Received type number');return c(t)}return a(t,e,r)}function a(t,e,r){if(\"string\"==typeof t)return function(t,e){\"string\"==typeof e&&\"\"!==e||(e=\"utf8\");if(!f.isEncoding(e))throw new TypeError(\"Unknown encoding: \"+e);const r=0|g(t,e);let n=u(r);const i=n.write(t,e);i!==r&&(n=n.slice(0,i));return n}(t,e);if(ArrayBuffer.isView(t))return function(t){if(W(t,Uint8Array)){const e=new Uint8Array(t);return p(e.buffer,e.byteOffset,e.byteLength)}return l(t)}(t);if(null==t)throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof t);if(W(t,ArrayBuffer)||t&&W(t.buffer,ArrayBuffer))return p(t,e,r);if(\"undefined\"!=typeof SharedArrayBuffer&&(W(t,SharedArrayBuffer)||t&&W(t.buffer,SharedArrayBuffer)))return p(t,e,r);if(\"number\"==typeof t)throw new TypeError('The \"value\" argument must not be of type number. Received type number');const n=t.valueOf&&t.valueOf();if(null!=n&&n!==t)return f.from(n,e,r);const i=function(t){if(f.isBuffer(t)){const e=0|d(t.length),r=u(e);return 0===r.length||t.copy(r,0,0,e),r}if(void 0!==t.length)return\"number\"!=typeof t.length||H(t.length)?u(0):l(t);if(\"Buffer\"===t.type&&Array.isArray(t.data))return l(t.data)}(t);if(i)return i;if(\"undefined\"!=typeof Symbol&&null!=Symbol.toPrimitive&&\"function\"==typeof t[Symbol.toPrimitive])return f.from(t[Symbol.toPrimitive](\"string\"),e,r);throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof t)}function h(t){if(\"number\"!=typeof t)throw new TypeError('\"size\" argument must be of type number');if(t<0)throw new RangeError('The value \"'+t+'\" is invalid for option \"size\"')}function c(t){return h(t),u(t<0?0:0|d(t))}function l(t){const e=t.length<0?0:0|d(t.length),r=u(e);for(let n=0;n<e;n+=1)r[n]=255&t[n];return r}function p(t,e,r){if(e<0||t.byteLength<e)throw new RangeError('\"offset\" is outside of buffer bounds');if(t.byteLength<e+(r||0))throw new RangeError('\"length\" is outside of buffer bounds');let n;return n=void 0===e&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,e):new Uint8Array(t,e,r),Object.setPrototypeOf(n,f.prototype),n}function d(t){if(t>=s)throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+s.toString(16)+\" bytes\");return 0|t}function g(t,e){if(f.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||W(t,ArrayBuffer))return t.byteLength;if(\"string\"!=typeof t)throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);const r=t.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;let i=!1;for(;;)switch(e){case\"ascii\":case\"latin1\":case\"binary\":return r;case\"utf8\":case\"utf-8\":return G(t).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return 2*r;case\"hex\":return r>>>1;case\"base64\":return Y(t).length;default:if(i)return n?-1:G(t).length;e=(\"\"+e).toLowerCase(),i=!0}}function y(t,e,r){let n=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return\"\";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return\"\";if((r>>>=0)<=(e>>>=0))return\"\";for(t||(t=\"utf8\");;)switch(t){case\"hex\":return T(this,e,r);case\"utf8\":case\"utf-8\":return x(this,e,r);case\"ascii\":return $(this,e,r);case\"latin1\":case\"binary\":return R(this,e,r);case\"base64\":return I(this,e,r);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return O(this,e,r);default:if(n)throw new TypeError(\"Unknown encoding: \"+t);t=(t+\"\").toLowerCase(),n=!0}}function w(t,e,r){const n=t[e];t[e]=t[r],t[r]=n}function m(t,e,r,n,i){if(0===t.length)return-1;if(\"string\"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),H(r=+r)&&(r=i?0:t.length-1),r<0&&(r=t.length+r),r>=t.length){if(i)return-1;r=t.length-1}else if(r<0){if(!i)return-1;r=0}if(\"string\"==typeof e&&(e=f.from(e,n)),f.isBuffer(e))return 0===e.length?-1:b(t,e,r,n,i);if(\"number\"==typeof e)return e&=255,\"function\"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):b(t,[e],r,n,i);throw new TypeError(\"val must be string, number or Buffer\")}function b(t,e,r,n,i){let o,s=1,u=t.length,f=e.length;if(void 0!==n&&(\"ucs2\"===(n=String(n).toLowerCase())||\"ucs-2\"===n||\"utf16le\"===n||\"utf-16le\"===n)){if(t.length<2||e.length<2)return-1;s=2,u/=2,f/=2,r/=2}function a(t,e){return 1===s?t[e]:t.readUInt16BE(e*s)}if(i){let n=-1;for(o=r;o<u;o++)if(a(t,o)===a(e,-1===n?0:o-n)){if(-1===n&&(n=o),o-n+1===f)return n*s}else-1!==n&&(o-=o-n),n=-1}else for(r+f>u&&(r=u-f),o=r;o>=0;o--){let r=!0;for(let n=0;n<f;n++)if(a(t,o+n)!==a(e,n)){r=!1;break}if(r)return o}return-1}function _(t,e,r,n){r=Number(r)||0;const i=t.length-r;n?(n=Number(n))>i&&(n=i):n=i;const o=e.length;let s;for(n>o/2&&(n=o/2),s=0;s<n;++s){const n=parseInt(e.substr(2*s,2),16);if(H(n))return s;t[r+s]=n}return s}function B(t,e,r,n){return J(G(e,t.length-r),t,r,n)}function E(t,e,r,n){return J(function(t){const e=[];for(let r=0;r<t.length;++r)e.push(255&t.charCodeAt(r));return e}(e),t,r,n)}function v(t,e,r,n){return J(Y(e),t,r,n)}function A(t,e,r,n){return J(function(t,e){let r,n,i;const o=[];for(let s=0;s<t.length&&!((e-=2)<0);++s)r=t.charCodeAt(s),n=r>>8,i=r%256,o.push(i),o.push(n);return o}(e,t.length-r),t,r,n)}function I(t,e,r){return 0===e&&r===t.length?n.fromByteArray(t):n.fromByteArray(t.slice(e,r))}function x(t,e,r){r=Math.min(t.length,r);const n=[];let i=e;for(;i<r;){const e=t[i];let o=null,s=e>239?4:e>223?3:e>191?2:1;if(i+s<=r){let r,n,u,f;switch(s){case 1:e<128&&(o=e);break;case 2:r=t[i+1],128==(192&r)&&(f=(31&e)<<6|63&r,f>127&&(o=f));break;case 3:r=t[i+1],n=t[i+2],128==(192&r)&&128==(192&n)&&(f=(15&e)<<12|(63&r)<<6|63&n,f>2047&&(f<55296||f>57343)&&(o=f));break;case 4:r=t[i+1],n=t[i+2],u=t[i+3],128==(192&r)&&128==(192&n)&&128==(192&u)&&(f=(15&e)<<18|(63&r)<<12|(63&n)<<6|63&u,f>65535&&f<1114112&&(o=f))}}null===o?(o=65533,s=1):o>65535&&(o-=65536,n.push(o>>>10&1023|55296),o=56320|1023&o),n.push(o),i+=s}return function(t){const e=t.length;if(e<=U)return String.fromCharCode.apply(String,t);let r=\"\",n=0;for(;n<e;)r+=String.fromCharCode.apply(String,t.slice(n,n+=U));return r}(n)}f.TYPED_ARRAY_SUPPORT=function(){try{const t=new Uint8Array(1),e={foo:function(){return 42}};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(t,e),42===t.foo()}catch(t){return!1}}(),f.TYPED_ARRAY_SUPPORT||\"undefined\"==typeof console||\"function\"!=typeof console.error||console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\"),Object.defineProperty(f.prototype,\"parent\",{enumerable:!0,get:function(){if(f.isBuffer(this))return this.buffer}}),Object.defineProperty(f.prototype,\"offset\",{enumerable:!0,get:function(){if(f.isBuffer(this))return this.byteOffset}}),f.poolSize=8192,f.from=function(t,e,r){return a(t,e,r)},Object.setPrototypeOf(f.prototype,Uint8Array.prototype),Object.setPrototypeOf(f,Uint8Array),f.alloc=function(t,e,r){return function(t,e,r){return h(t),t<=0?u(t):void 0!==e?\"string\"==typeof r?u(t).fill(e,r):u(t).fill(e):u(t)}(t,e,r)},f.allocUnsafe=function(t){return c(t)},f.allocUnsafeSlow=function(t){return c(t)},f.isBuffer=function(t){return null!=t&&!0===t._isBuffer&&t!==f.prototype},f.compare=function(t,e){if(W(t,Uint8Array)&&(t=f.from(t,t.offset,t.byteLength)),W(e,Uint8Array)&&(e=f.from(e,e.offset,e.byteLength)),!f.isBuffer(t)||!f.isBuffer(e))throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');if(t===e)return 0;let r=t.length,n=e.length;for(let i=0,o=Math.min(r,n);i<o;++i)if(t[i]!==e[i]){r=t[i],n=e[i];break}return r<n?-1:n<r?1:0},f.isEncoding=function(t){switch(String(t).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},f.concat=function(t,e){if(!Array.isArray(t))throw new TypeError('\"list\" argument must be an Array of Buffers');if(0===t.length)return f.alloc(0);let r;if(void 0===e)for(e=0,r=0;r<t.length;++r)e+=t[r].length;const n=f.allocUnsafe(e);let i=0;for(r=0;r<t.length;++r){let e=t[r];if(W(e,Uint8Array))i+e.length>n.length?(f.isBuffer(e)||(e=f.from(e)),e.copy(n,i)):Uint8Array.prototype.set.call(n,e,i);else{if(!f.isBuffer(e))throw new TypeError('\"list\" argument must be an Array of Buffers');e.copy(n,i)}i+=e.length}return n},f.byteLength=g,f.prototype._isBuffer=!0,f.prototype.swap16=function(){const t=this.length;if(t%2!=0)throw new RangeError(\"Buffer size must be a multiple of 16-bits\");for(let e=0;e<t;e+=2)w(this,e,e+1);return this},f.prototype.swap32=function(){const t=this.length;if(t%4!=0)throw new RangeError(\"Buffer size must be a multiple of 32-bits\");for(let e=0;e<t;e+=4)w(this,e,e+3),w(this,e+1,e+2);return this},f.prototype.swap64=function(){const t=this.length;if(t%8!=0)throw new RangeError(\"Buffer size must be a multiple of 64-bits\");for(let e=0;e<t;e+=8)w(this,e,e+7),w(this,e+1,e+6),w(this,e+2,e+5),w(this,e+3,e+4);return this},f.prototype.toString=function(){const t=this.length;return 0===t?\"\":0===arguments.length?x(this,0,t):y.apply(this,arguments)},f.prototype.toLocaleString=f.prototype.toString,f.prototype.equals=function(t){if(!f.isBuffer(t))throw new TypeError(\"Argument must be a Buffer\");return this===t||0===f.compare(this,t)},f.prototype.inspect=function(){let t=\"\";const r=e.IS;return t=this.toString(\"hex\",0,r).replace(/(.{2})/g,\"$1 \").trim(),this.length>r&&(t+=\" ... \"),\"<Buffer \"+t+\">\"},o&&(f.prototype[o]=f.prototype.inspect),f.prototype.compare=function(t,e,r,n,i){if(W(t,Uint8Array)&&(t=f.from(t,t.offset,t.byteLength)),!f.isBuffer(t))throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===e&&(e=0),void 0===r&&(r=t?t.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),e<0||r>t.length||n<0||i>this.length)throw new RangeError(\"out of range index\");if(n>=i&&e>=r)return 0;if(n>=i)return-1;if(e>=r)return 1;if(this===t)return 0;let o=(i>>>=0)-(n>>>=0),s=(r>>>=0)-(e>>>=0);const u=Math.min(o,s),a=this.slice(n,i),h=t.slice(e,r);for(let t=0;t<u;++t)if(a[t]!==h[t]){o=a[t],s=h[t];break}return o<s?-1:s<o?1:0},f.prototype.includes=function(t,e,r){return-1!==this.indexOf(t,e,r)},f.prototype.indexOf=function(t,e,r){return m(this,t,e,r,!0)},f.prototype.lastIndexOf=function(t,e,r){return m(this,t,e,r,!1)},f.prototype.write=function(t,e,r,n){if(void 0===e)n=\"utf8\",r=this.length,e=0;else if(void 0===r&&\"string\"==typeof e)n=e,r=this.length,e=0;else{if(!isFinite(e))throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");e>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n=\"utf8\")):(n=r,r=void 0)}const i=this.length-e;if((void 0===r||r>i)&&(r=i),t.length>0&&(r<0||e<0)||e>this.length)throw new RangeError(\"Attempt to write outside buffer bounds\");n||(n=\"utf8\");let o=!1;for(;;)switch(n){case\"hex\":return _(this,t,e,r);case\"utf8\":case\"utf-8\":return B(this,t,e,r);case\"ascii\":case\"latin1\":case\"binary\":return E(this,t,e,r);case\"base64\":return v(this,t,e,r);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return A(this,t,e,r);default:if(o)throw new TypeError(\"Unknown encoding: \"+n);n=(\"\"+n).toLowerCase(),o=!0}},f.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};const U=4096;function $(t,e,r){let n=\"\";r=Math.min(t.length,r);for(let i=e;i<r;++i)n+=String.fromCharCode(127&t[i]);return n}function R(t,e,r){let n=\"\";r=Math.min(t.length,r);for(let i=e;i<r;++i)n+=String.fromCharCode(t[i]);return n}function T(t,e,r){const n=t.length;(!e||e<0)&&(e=0),(!r||r<0||r>n)&&(r=n);let i=\"\";for(let n=e;n<r;++n)i+=Q[t[n]];return i}function O(t,e,r){const n=t.slice(e,r);let i=\"\";for(let t=0;t<n.length-1;t+=2)i+=String.fromCharCode(n[t]+256*n[t+1]);return i}function L(t,e,r){if(t%1!=0||t<0)throw new RangeError(\"offset is not uint\");if(t+e>r)throw new RangeError(\"Trying to access beyond buffer length\")}function N(t,e,r,n,i,o){if(!f.isBuffer(t))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(e>i||e<o)throw new RangeError('\"value\" argument is out of bounds');if(r+n>t.length)throw new RangeError(\"Index out of range\")}function S(t,e,r,n,i){P(e,n,i,t,r,7);let o=Number(e&BigInt(4294967295));t[r++]=o,o>>=8,t[r++]=o,o>>=8,t[r++]=o,o>>=8,t[r++]=o;let s=Number(e>>BigInt(32)&BigInt(4294967295));return t[r++]=s,s>>=8,t[r++]=s,s>>=8,t[r++]=s,s>>=8,t[r++]=s,r}function V(t,e,r,n,i){P(e,n,i,t,r,7);let o=Number(e&BigInt(4294967295));t[r+7]=o,o>>=8,t[r+6]=o,o>>=8,t[r+5]=o,o>>=8,t[r+4]=o;let s=Number(e>>BigInt(32)&BigInt(4294967295));return t[r+3]=s,s>>=8,t[r+2]=s,s>>=8,t[r+1]=s,s>>=8,t[r]=s,r+8}function M(t,e,r,n,i,o){if(r+n>t.length)throw new RangeError(\"Index out of range\");if(r<0)throw new RangeError(\"Index out of range\")}function C(t,e,r,n,o){return e=+e,r>>>=0,o||M(t,0,r,4),i.write(t,e,r,n,23,4),r+4}function D(t,e,r,n,o){return e=+e,r>>>=0,o||M(t,0,r,8),i.write(t,e,r,n,52,8),r+8}f.prototype.slice=function(t,e){const r=this.length;(t=~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),(e=void 0===e?r:~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),e<t&&(e=t);const n=this.subarray(t,e);return Object.setPrototypeOf(n,f.prototype),n},f.prototype.readUintLE=f.prototype.readUIntLE=function(t,e,r){t>>>=0,e>>>=0,r||L(t,e,this.length);let n=this[t],i=1,o=0;for(;++o<e&&(i*=256);)n+=this[t+o]*i;return n},f.prototype.readUintBE=f.prototype.readUIntBE=function(t,e,r){t>>>=0,e>>>=0,r||L(t,e,this.length);let n=this[t+--e],i=1;for(;e>0&&(i*=256);)n+=this[t+--e]*i;return n},f.prototype.readUint8=f.prototype.readUInt8=function(t,e){return t>>>=0,e||L(t,1,this.length),this[t]},f.prototype.readUint16LE=f.prototype.readUInt16LE=function(t,e){return t>>>=0,e||L(t,2,this.length),this[t]|this[t+1]<<8},f.prototype.readUint16BE=f.prototype.readUInt16BE=function(t,e){return t>>>=0,e||L(t,2,this.length),this[t]<<8|this[t+1]},f.prototype.readUint32LE=f.prototype.readUInt32LE=function(t,e){return t>>>=0,e||L(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},f.prototype.readUint32BE=f.prototype.readUInt32BE=function(t,e){return t>>>=0,e||L(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},f.prototype.readBigUInt64LE=Z((function(t){X(t>>>=0,\"offset\");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||k(t,this.length-8);const n=e+256*this[++t]+65536*this[++t]+this[++t]*2**24,i=this[++t]+256*this[++t]+65536*this[++t]+r*2**24;return BigInt(n)+(BigInt(i)<<BigInt(32))})),f.prototype.readBigUInt64BE=Z((function(t){X(t>>>=0,\"offset\");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||k(t,this.length-8);const n=e*2**24+65536*this[++t]+256*this[++t]+this[++t],i=this[++t]*2**24+65536*this[++t]+256*this[++t]+r;return(BigInt(n)<<BigInt(32))+BigInt(i)})),f.prototype.readIntLE=function(t,e,r){t>>>=0,e>>>=0,r||L(t,e,this.length);let n=this[t],i=1,o=0;for(;++o<e&&(i*=256);)n+=this[t+o]*i;return i*=128,n>=i&&(n-=Math.pow(2,8*e)),n},f.prototype.readIntBE=function(t,e,r){t>>>=0,e>>>=0,r||L(t,e,this.length);let n=e,i=1,o=this[t+--n];for(;n>0&&(i*=256);)o+=this[t+--n]*i;return i*=128,o>=i&&(o-=Math.pow(2,8*e)),o},f.prototype.readInt8=function(t,e){return t>>>=0,e||L(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},f.prototype.readInt16LE=function(t,e){t>>>=0,e||L(t,2,this.length);const r=this[t]|this[t+1]<<8;return 32768&r?4294901760|r:r},f.prototype.readInt16BE=function(t,e){t>>>=0,e||L(t,2,this.length);const r=this[t+1]|this[t]<<8;return 32768&r?4294901760|r:r},f.prototype.readInt32LE=function(t,e){return t>>>=0,e||L(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},f.prototype.readInt32BE=function(t,e){return t>>>=0,e||L(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},f.prototype.readBigInt64LE=Z((function(t){X(t>>>=0,\"offset\");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||k(t,this.length-8);const n=this[t+4]+256*this[t+5]+65536*this[t+6]+(r<<24);return(BigInt(n)<<BigInt(32))+BigInt(e+256*this[++t]+65536*this[++t]+this[++t]*2**24)})),f.prototype.readBigInt64BE=Z((function(t){X(t>>>=0,\"offset\");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||k(t,this.length-8);const n=(e<<24)+65536*this[++t]+256*this[++t]+this[++t];return(BigInt(n)<<BigInt(32))+BigInt(this[++t]*2**24+65536*this[++t]+256*this[++t]+r)})),f.prototype.readFloatLE=function(t,e){return t>>>=0,e||L(t,4,this.length),i.read(this,t,!0,23,4)},f.prototype.readFloatBE=function(t,e){return t>>>=0,e||L(t,4,this.length),i.read(this,t,!1,23,4)},f.prototype.readDoubleLE=function(t,e){return t>>>=0,e||L(t,8,this.length),i.read(this,t,!0,52,8)},f.prototype.readDoubleBE=function(t,e){return t>>>=0,e||L(t,8,this.length),i.read(this,t,!1,52,8)},f.prototype.writeUintLE=f.prototype.writeUIntLE=function(t,e,r,n){if(t=+t,e>>>=0,r>>>=0,!n){N(this,t,e,r,Math.pow(2,8*r)-1,0)}let i=1,o=0;for(this[e]=255&t;++o<r&&(i*=256);)this[e+o]=t/i&255;return e+r},f.prototype.writeUintBE=f.prototype.writeUIntBE=function(t,e,r,n){if(t=+t,e>>>=0,r>>>=0,!n){N(this,t,e,r,Math.pow(2,8*r)-1,0)}let i=r-1,o=1;for(this[e+i]=255&t;--i>=0&&(o*=256);)this[e+i]=t/o&255;return e+r},f.prototype.writeUint8=f.prototype.writeUInt8=function(t,e,r){return t=+t,e>>>=0,r||N(this,t,e,1,255,0),this[e]=255&t,e+1},f.prototype.writeUint16LE=f.prototype.writeUInt16LE=function(t,e,r){return t=+t,e>>>=0,r||N(this,t,e,2,65535,0),this[e]=255&t,this[e+1]=t>>>8,e+2},f.prototype.writeUint16BE=f.prototype.writeUInt16BE=function(t,e,r){return t=+t,e>>>=0,r||N(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=255&t,e+2},f.prototype.writeUint32LE=f.prototype.writeUInt32LE=function(t,e,r){return t=+t,e>>>=0,r||N(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t,e+4},f.prototype.writeUint32BE=f.prototype.writeUInt32BE=function(t,e,r){return t=+t,e>>>=0,r||N(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},f.prototype.writeBigUInt64LE=Z((function(t,e=0){return S(this,t,e,BigInt(0),BigInt(\"0xffffffffffffffff\"))})),f.prototype.writeBigUInt64BE=Z((function(t,e=0){return V(this,t,e,BigInt(0),BigInt(\"0xffffffffffffffff\"))})),f.prototype.writeIntLE=function(t,e,r,n){if(t=+t,e>>>=0,!n){const n=Math.pow(2,8*r-1);N(this,t,e,r,n-1,-n)}let i=0,o=1,s=0;for(this[e]=255&t;++i<r&&(o*=256);)t<0&&0===s&&0!==this[e+i-1]&&(s=1),this[e+i]=(t/o|0)-s&255;return e+r},f.prototype.writeIntBE=function(t,e,r,n){if(t=+t,e>>>=0,!n){const n=Math.pow(2,8*r-1);N(this,t,e,r,n-1,-n)}let i=r-1,o=1,s=0;for(this[e+i]=255&t;--i>=0&&(o*=256);)t<0&&0===s&&0!==this[e+i+1]&&(s=1),this[e+i]=(t/o|0)-s&255;return e+r},f.prototype.writeInt8=function(t,e,r){return t=+t,e>>>=0,r||N(this,t,e,1,127,-128),t<0&&(t=255+t+1),this[e]=255&t,e+1},f.prototype.writeInt16LE=function(t,e,r){return t=+t,e>>>=0,r||N(this,t,e,2,32767,-32768),this[e]=255&t,this[e+1]=t>>>8,e+2},f.prototype.writeInt16BE=function(t,e,r){return t=+t,e>>>=0,r||N(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=255&t,e+2},f.prototype.writeInt32LE=function(t,e,r){return t=+t,e>>>=0,r||N(this,t,e,4,2147483647,-2147483648),this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4},f.prototype.writeInt32BE=function(t,e,r){return t=+t,e>>>=0,r||N(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},f.prototype.writeBigInt64LE=Z((function(t,e=0){return S(this,t,e,-BigInt(\"0x8000000000000000\"),BigInt(\"0x7fffffffffffffff\"))})),f.prototype.writeBigInt64BE=Z((function(t,e=0){return V(this,t,e,-BigInt(\"0x8000000000000000\"),BigInt(\"0x7fffffffffffffff\"))})),f.prototype.writeFloatLE=function(t,e,r){return C(this,t,e,!0,r)},f.prototype.writeFloatBE=function(t,e,r){return C(this,t,e,!1,r)},f.prototype.writeDoubleLE=function(t,e,r){return D(this,t,e,!0,r)},f.prototype.writeDoubleBE=function(t,e,r){return D(this,t,e,!1,r)},f.prototype.copy=function(t,e,r,n){if(!f.isBuffer(t))throw new TypeError(\"argument should be a Buffer\");if(r||(r=0),n||0===n||(n=this.length),e>=t.length&&(e=t.length),e||(e=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError(\"targetStart out of bounds\");if(r<0||r>=this.length)throw new RangeError(\"Index out of range\");if(n<0)throw new RangeError(\"sourceEnd out of bounds\");n>this.length&&(n=this.length),t.length-e<n-r&&(n=t.length-e+r);const i=n-r;return this===t&&\"function\"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(e,r,n):Uint8Array.prototype.set.call(t,this.subarray(r,n),e),i},f.prototype.fill=function(t,e,r,n){if(\"string\"==typeof t){if(\"string\"==typeof e?(n=e,e=0,r=this.length):\"string\"==typeof r&&(n=r,r=this.length),void 0!==n&&\"string\"!=typeof n)throw new TypeError(\"encoding must be a string\");if(\"string\"==typeof n&&!f.isEncoding(n))throw new TypeError(\"Unknown encoding: \"+n);if(1===t.length){const e=t.charCodeAt(0);(\"utf8\"===n&&e<128||\"latin1\"===n)&&(t=e)}}else\"number\"==typeof t?t&=255:\"boolean\"==typeof t&&(t=Number(t));if(e<0||this.length<e||this.length<r)throw new RangeError(\"Out of range index\");if(r<=e)return this;let i;if(e>>>=0,r=void 0===r?this.length:r>>>0,t||(t=0),\"number\"==typeof t)for(i=e;i<r;++i)this[i]=t;else{const o=f.isBuffer(t)?t:f.from(t,n),s=o.length;if(0===s)throw new TypeError('The value \"'+t+'\" is invalid for argument \"value\"');for(i=0;i<r-e;++i)this[i+e]=o[i%s]}return this};const j={};function z(t,e,r){j[t]=class extends r{constructor(){super(),Object.defineProperty(this,\"message\",{value:e.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${t}]`,this.stack,delete this.name}get code(){return t}set code(t){Object.defineProperty(this,\"code\",{configurable:!0,enumerable:!0,value:t,writable:!0})}toString(){return`${this.name} [${t}]: ${this.message}`}}}function F(t){let e=\"\",r=t.length;const n=\"-\"===t[0]?1:0;for(;r>=n+4;r-=3)e=`_${t.slice(r-3,r)}${e}`;return`${t.slice(0,r)}${e}`}function P(t,e,r,n,i,o){if(t>r||t<e){const n=\"bigint\"==typeof e?\"n\":\"\";let i;throw i=o>3?0===e||e===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(o+1)}${n}`:`>= -(2${n} ** ${8*(o+1)-1}${n}) and < 2 ** ${8*(o+1)-1}${n}`:`>= ${e}${n} and <= ${r}${n}`,new j.ERR_OUT_OF_RANGE(\"value\",i,t)}!function(t,e,r){X(e,\"offset\"),void 0!==t[e]&&void 0!==t[e+r]||k(e,t.length-(r+1))}(n,i,o)}function X(t,e){if(\"number\"!=typeof t)throw new j.ERR_INVALID_ARG_TYPE(e,\"number\",t)}function k(t,e,r){if(Math.floor(t)!==t)throw X(t,r),new j.ERR_OUT_OF_RANGE(r||\"offset\",\"an integer\",t);if(e<0)throw new j.ERR_BUFFER_OUT_OF_BOUNDS;throw new j.ERR_OUT_OF_RANGE(r||\"offset\",`>= ${r?1:0} and <= ${e}`,t)}z(\"ERR_BUFFER_OUT_OF_BOUNDS\",(function(t){return t?`${t} is outside of buffer bounds`:\"Attempt to access memory outside buffer bounds\"}),RangeError),z(\"ERR_INVALID_ARG_TYPE\",(function(t,e){return`The \"${t}\" argument must be of type number. Received type ${typeof e}`}),TypeError),z(\"ERR_OUT_OF_RANGE\",(function(t,e,r){let n=`The value of \"${t}\" is out of range.`,i=r;return Number.isInteger(r)&&Math.abs(r)>2**32?i=F(String(r)):\"bigint\"==typeof r&&(i=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(i=F(i)),i+=\"n\"),n+=` It must be ${e}. Received ${i}`,n}),RangeError);const q=/[^+/0-9A-Za-z-_]/g;function G(t,e){let r;e=e||1/0;const n=t.length;let i=null;const o=[];for(let s=0;s<n;++s){if(r=t.charCodeAt(s),r>55295&&r<57344){if(!i){if(r>56319){(e-=3)>-1&&o.push(239,191,189);continue}if(s+1===n){(e-=3)>-1&&o.push(239,191,189);continue}i=r;continue}if(r<56320){(e-=3)>-1&&o.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&(e-=3)>-1&&o.push(239,191,189);if(i=null,r<128){if((e-=1)<0)break;o.push(r)}else if(r<2048){if((e-=2)<0)break;o.push(r>>6|192,63&r|128)}else if(r<65536){if((e-=3)<0)break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error(\"Invalid code point\");if((e-=4)<0)break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function Y(t){return n.toByteArray(function(t){if((t=(t=t.split(\"=\")[0]).trim().replace(q,\"\")).length<2)return\"\";for(;t.length%4!=0;)t+=\"=\";return t}(t))}function J(t,e,r,n){let i;for(i=0;i<n&&!(i+r>=e.length||i>=t.length);++i)e[i+r]=t[i];return i}function W(t,e){return t instanceof e||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===e.name}function H(t){return t!=t}const Q=function(){const t=\"0123456789abcdef\",e=new Array(256);for(let r=0;r<16;++r){const n=16*r;for(let i=0;i<16;++i)e[n+i]=t[r]+t[i]}return e}();function Z(t){return\"undefined\"==typeof BigInt?K:t}function K(){throw new Error(\"BigInt not supported\")}},251:(t,e)=>{e.read=function(t,e,r,n,i){var o,s,u=8*i-n-1,f=(1<<u)-1,a=f>>1,h=-7,c=r?i-1:0,l=r?-1:1,p=t[e+c];for(c+=l,o=p&(1<<-h)-1,p>>=-h,h+=u;h>0;o=256*o+t[e+c],c+=l,h-=8);for(s=o&(1<<-h)-1,o>>=-h,h+=n;h>0;s=256*s+t[e+c],c+=l,h-=8);if(0===o)o=1-a;else{if(o===f)return s?NaN:1/0*(p?-1:1);s+=Math.pow(2,n),o-=a}return(p?-1:1)*s*Math.pow(2,o-n)},e.write=function(t,e,r,n,i,o){var s,u,f,a=8*o-i-1,h=(1<<a)-1,c=h>>1,l=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,p=n?0:o-1,d=n?1:-1,g=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(u=isNaN(e)?1:0,s=h):(s=Math.floor(Math.log(e)/Math.LN2),e*(f=Math.pow(2,-s))<1&&(s--,f*=2),(e+=s+c>=1?l/f:l*Math.pow(2,1-c))*f>=2&&(s++,f/=2),s+c>=h?(u=0,s=h):s+c>=1?(u=(e*f-1)*Math.pow(2,i),s+=c):(u=e*Math.pow(2,c-1)*Math.pow(2,i),s=0));i>=8;t[r+p]=255&u,p+=d,u/=256,i-=8);for(s=s<<i|u,a+=i;a>0;t[r+p]=255&s,p+=d,s/=256,a-=8);t[r+p-d]|=128*g}}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,r),o.exports}return r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(t){if(\"object\"==typeof window)return window}}(),r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},r(281)})()));\n//# sourceMappingURL=xdr.js.map","// Currently in sync with Node.js lib/assert.js\n// https://github.com/nodejs/node/commit/2a51ae424a513ec9a6aa3466baa0cc1d55dd4f3b\n\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar _require = require('./internal/errors'),\n  _require$codes = _require.codes,\n  ERR_AMBIGUOUS_ARGUMENT = _require$codes.ERR_AMBIGUOUS_ARGUMENT,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_INVALID_ARG_VALUE = _require$codes.ERR_INVALID_ARG_VALUE,\n  ERR_INVALID_RETURN_VALUE = _require$codes.ERR_INVALID_RETURN_VALUE,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS;\nvar AssertionError = require('./internal/assert/assertion_error');\nvar _require2 = require('util/'),\n  inspect = _require2.inspect;\nvar _require$types = require('util/').types,\n  isPromise = _require$types.isPromise,\n  isRegExp = _require$types.isRegExp;\nvar objectAssign = require('object.assign/polyfill')();\nvar objectIs = require('object-is/polyfill')();\nvar RegExpPrototypeTest = require('call-bind/callBound')('RegExp.prototype.test');\nvar errorCache = new Map();\nvar isDeepEqual;\nvar isDeepStrictEqual;\nvar parseExpressionAt;\nvar findNodeAround;\nvar decoder;\nfunction lazyLoadComparison() {\n  var comparison = require('./internal/util/comparisons');\n  isDeepEqual = comparison.isDeepEqual;\n  isDeepStrictEqual = comparison.isDeepStrictEqual;\n}\n\n// Escape control characters but not \\n and \\t to keep the line breaks and\n// indentation intact.\n// eslint-disable-next-line no-control-regex\nvar escapeSequencesRegExp = /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f]/g;\nvar meta = [\"\\\\u0000\", \"\\\\u0001\", \"\\\\u0002\", \"\\\\u0003\", \"\\\\u0004\", \"\\\\u0005\", \"\\\\u0006\", \"\\\\u0007\", '\\\\b', '', '', \"\\\\u000b\", '\\\\f', '', \"\\\\u000e\", \"\\\\u000f\", \"\\\\u0010\", \"\\\\u0011\", \"\\\\u0012\", \"\\\\u0013\", \"\\\\u0014\", \"\\\\u0015\", \"\\\\u0016\", \"\\\\u0017\", \"\\\\u0018\", \"\\\\u0019\", \"\\\\u001a\", \"\\\\u001b\", \"\\\\u001c\", \"\\\\u001d\", \"\\\\u001e\", \"\\\\u001f\"];\nvar escapeFn = function escapeFn(str) {\n  return meta[str.charCodeAt(0)];\n};\nvar warned = false;\n\n// The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\nvar NO_EXCEPTION_SENTINEL = {};\n\n// All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided. All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction innerFail(obj) {\n  if (obj.message instanceof Error) throw obj.message;\n  throw new AssertionError(obj);\n}\nfunction fail(actual, expected, message, operator, stackStartFn) {\n  var argsLen = arguments.length;\n  var internalMessage;\n  if (argsLen === 0) {\n    internalMessage = 'Failed';\n  } else if (argsLen === 1) {\n    message = actual;\n    actual = undefined;\n  } else {\n    if (warned === false) {\n      warned = true;\n      var warn = process.emitWarning ? process.emitWarning : console.warn.bind(console);\n      warn('assert.fail() with more than one argument is deprecated. ' + 'Please use assert.strictEqual() instead or only pass a message.', 'DeprecationWarning', 'DEP0094');\n    }\n    if (argsLen === 2) operator = '!=';\n  }\n  if (message instanceof Error) throw message;\n  var errArgs = {\n    actual: actual,\n    expected: expected,\n    operator: operator === undefined ? 'fail' : operator,\n    stackStartFn: stackStartFn || fail\n  };\n  if (message !== undefined) {\n    errArgs.message = message;\n  }\n  var err = new AssertionError(errArgs);\n  if (internalMessage) {\n    err.message = internalMessage;\n    err.generatedMessage = true;\n  }\n  throw err;\n}\nassert.fail = fail;\n\n// The AssertionError is defined in internal/error.\nassert.AssertionError = AssertionError;\nfunction innerOk(fn, argLen, value, message) {\n  if (!value) {\n    var generatedMessage = false;\n    if (argLen === 0) {\n      generatedMessage = true;\n      message = 'No value argument passed to `assert.ok()`';\n    } else if (message instanceof Error) {\n      throw message;\n    }\n    var err = new AssertionError({\n      actual: value,\n      expected: true,\n      message: message,\n      operator: '==',\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n}\n\n// Pure assertion tests whether a value is truthy, as determined\n// by !!value.\nfunction ok() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  innerOk.apply(void 0, [ok, args.length].concat(args));\n}\nassert.ok = ok;\n\n// The equality assertion tests shallow, coercive equality with ==.\n/* eslint-disable no-restricted-properties */\nassert.equal = function equal(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  // eslint-disable-next-line eqeqeq\n  if (actual != expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '==',\n      stackStartFn: equal\n    });\n  }\n};\n\n// The non-equality assertion tests for whether two objects are not\n// equal with !=.\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  // eslint-disable-next-line eqeqeq\n  if (actual == expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '!=',\n      stackStartFn: notEqual\n    });\n  }\n};\n\n// The equivalence assertion tests a deep equality relation.\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (!isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepEqual',\n      stackStartFn: deepEqual\n    });\n  }\n};\n\n// The non-equivalence assertion tests for any deep inequality.\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepEqual',\n      stackStartFn: notDeepEqual\n    });\n  }\n};\n/* eslint-enable */\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (!isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepStrictEqual',\n      stackStartFn: deepStrictEqual\n    });\n  }\n};\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepStrictEqual',\n      stackStartFn: notDeepStrictEqual\n    });\n  }\n}\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (!objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'strictEqual',\n      stackStartFn: strictEqual\n    });\n  }\n};\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notStrictEqual',\n      stackStartFn: notStrictEqual\n    });\n  }\n};\nvar Comparison = /*#__PURE__*/_createClass(function Comparison(obj, keys, actual) {\n  var _this = this;\n  _classCallCheck(this, Comparison);\n  keys.forEach(function (key) {\n    if (key in obj) {\n      if (actual !== undefined && typeof actual[key] === 'string' && isRegExp(obj[key]) && RegExpPrototypeTest(obj[key], actual[key])) {\n        _this[key] = actual[key];\n      } else {\n        _this[key] = obj[key];\n      }\n    }\n  });\n});\nfunction compareExceptionKey(actual, expected, key, message, keys, fn) {\n  if (!(key in actual) || !isDeepStrictEqual(actual[key], expected[key])) {\n    if (!message) {\n      // Create placeholder objects to create a nice output.\n      var a = new Comparison(actual, keys);\n      var b = new Comparison(expected, keys, actual);\n      var err = new AssertionError({\n        actual: a,\n        expected: b,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.actual = actual;\n      err.expected = expected;\n      err.operator = fn.name;\n      throw err;\n    }\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: fn.name,\n      stackStartFn: fn\n    });\n  }\n}\nfunction expectedException(actual, expected, msg, fn) {\n  if (typeof expected !== 'function') {\n    if (isRegExp(expected)) return RegExpPrototypeTest(expected, actual);\n    // assert.doesNotThrow does not accept objects.\n    if (arguments.length === 2) {\n      throw new ERR_INVALID_ARG_TYPE('expected', ['Function', 'RegExp'], expected);\n    }\n\n    // Handle primitives properly.\n    if (_typeof(actual) !== 'object' || actual === null) {\n      var err = new AssertionError({\n        actual: actual,\n        expected: expected,\n        message: msg,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.operator = fn.name;\n      throw err;\n    }\n    var keys = Object.keys(expected);\n    // Special handle errors to make sure the name and the message are compared\n    // as well.\n    if (expected instanceof Error) {\n      keys.push('name', 'message');\n    } else if (keys.length === 0) {\n      throw new ERR_INVALID_ARG_VALUE('error', expected, 'may not be an empty object');\n    }\n    if (isDeepEqual === undefined) lazyLoadComparison();\n    keys.forEach(function (key) {\n      if (typeof actual[key] === 'string' && isRegExp(expected[key]) && RegExpPrototypeTest(expected[key], actual[key])) {\n        return;\n      }\n      compareExceptionKey(actual, expected, key, msg, keys, fn);\n    });\n    return true;\n  }\n  // Guard instanceof against arrow functions as they don't have a prototype.\n  if (expected.prototype !== undefined && actual instanceof expected) {\n    return true;\n  }\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n  return expected.call({}, actual) === true;\n}\nfunction getActual(fn) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', 'Function', fn);\n  }\n  try {\n    fn();\n  } catch (e) {\n    return e;\n  }\n  return NO_EXCEPTION_SENTINEL;\n}\nfunction checkIsPromise(obj) {\n  // Accept native ES6 promises and promises that are implemented in a similar\n  // way. Do not accept thenables that use a function as `obj` and that have no\n  // `catch` handler.\n\n  // TODO: thenables are checked up until they have the correct methods,\n  // but according to documentation, the `then` method should receive\n  // the `fulfill` and `reject` arguments as well or it may be never resolved.\n\n  return isPromise(obj) || obj !== null && _typeof(obj) === 'object' && typeof obj.then === 'function' && typeof obj.catch === 'function';\n}\nfunction waitForActual(promiseFn) {\n  return Promise.resolve().then(function () {\n    var resultPromise;\n    if (typeof promiseFn === 'function') {\n      // Return a rejected promise if `promiseFn` throws synchronously.\n      resultPromise = promiseFn();\n      // Fail in case no promise is returned.\n      if (!checkIsPromise(resultPromise)) {\n        throw new ERR_INVALID_RETURN_VALUE('instance of Promise', 'promiseFn', resultPromise);\n      }\n    } else if (checkIsPromise(promiseFn)) {\n      resultPromise = promiseFn;\n    } else {\n      throw new ERR_INVALID_ARG_TYPE('promiseFn', ['Function', 'Promise'], promiseFn);\n    }\n    return Promise.resolve().then(function () {\n      return resultPromise;\n    }).then(function () {\n      return NO_EXCEPTION_SENTINEL;\n    }).catch(function (e) {\n      return e;\n    });\n  });\n}\nfunction expectsError(stackStartFn, actual, error, message) {\n  if (typeof error === 'string') {\n    if (arguments.length === 4) {\n      throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n    }\n    if (_typeof(actual) === 'object' && actual !== null) {\n      if (actual.message === error) {\n        throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error message \\\"\".concat(actual.message, \"\\\" is identical to the message.\"));\n      }\n    } else if (actual === error) {\n      throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error \\\"\".concat(actual, \"\\\" is identical to the message.\"));\n    }\n    message = error;\n    error = undefined;\n  } else if (error != null && _typeof(error) !== 'object' && typeof error !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n  }\n  if (actual === NO_EXCEPTION_SENTINEL) {\n    var details = '';\n    if (error && error.name) {\n      details += \" (\".concat(error.name, \")\");\n    }\n    details += message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'rejects' ? 'rejection' : 'exception';\n    innerFail({\n      actual: undefined,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Missing expected \".concat(fnType).concat(details),\n      stackStartFn: stackStartFn\n    });\n  }\n  if (error && !expectedException(actual, error, message, stackStartFn)) {\n    throw actual;\n  }\n}\nfunction expectsNoError(stackStartFn, actual, error, message) {\n  if (actual === NO_EXCEPTION_SENTINEL) return;\n  if (typeof error === 'string') {\n    message = error;\n    error = undefined;\n  }\n  if (!error || expectedException(actual, error)) {\n    var details = message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'doesNotReject' ? 'rejection' : 'exception';\n    innerFail({\n      actual: actual,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Got unwanted \".concat(fnType).concat(details, \"\\n\") + \"Actual message: \\\"\".concat(actual && actual.message, \"\\\"\"),\n      stackStartFn: stackStartFn\n    });\n  }\n  throw actual;\n}\nassert.throws = function throws(promiseFn) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n  expectsError.apply(void 0, [throws, getActual(promiseFn)].concat(args));\n};\nassert.rejects = function rejects(promiseFn) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n  return waitForActual(promiseFn).then(function (result) {\n    return expectsError.apply(void 0, [rejects, result].concat(args));\n  });\n};\nassert.doesNotThrow = function doesNotThrow(fn) {\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n  expectsNoError.apply(void 0, [doesNotThrow, getActual(fn)].concat(args));\n};\nassert.doesNotReject = function doesNotReject(fn) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n  return waitForActual(fn).then(function (result) {\n    return expectsNoError.apply(void 0, [doesNotReject, result].concat(args));\n  });\n};\nassert.ifError = function ifError(err) {\n  if (err !== null && err !== undefined) {\n    var message = 'ifError got unwanted exception: ';\n    if (_typeof(err) === 'object' && typeof err.message === 'string') {\n      if (err.message.length === 0 && err.constructor) {\n        message += err.constructor.name;\n      } else {\n        message += err.message;\n      }\n    } else {\n      message += inspect(err);\n    }\n    var newErr = new AssertionError({\n      actual: err,\n      expected: null,\n      operator: 'ifError',\n      message: message,\n      stackStartFn: ifError\n    });\n\n    // Make sure we actually have a stack trace!\n    var origStack = err.stack;\n    if (typeof origStack === 'string') {\n      // This will remove any duplicated frames from the error frames taken\n      // from within `ifError` and add the original error frames to the newly\n      // created ones.\n      var tmp2 = origStack.split('\\n');\n      tmp2.shift();\n      // Filter all frames existing in err.stack.\n      var tmp1 = newErr.stack.split('\\n');\n      for (var i = 0; i < tmp2.length; i++) {\n        // Find the first occurrence of the frame.\n        var pos = tmp1.indexOf(tmp2[i]);\n        if (pos !== -1) {\n          // Only keep new frames.\n          tmp1 = tmp1.slice(0, pos);\n          break;\n        }\n      }\n      newErr.stack = \"\".concat(tmp1.join('\\n'), \"\\n\").concat(tmp2.join('\\n'));\n    }\n    throw newErr;\n  }\n};\n\n// Currently in sync with Node.js lib/assert.js\n// https://github.com/nodejs/node/commit/2a871df3dfb8ea663ef5e1f8f62701ec51384ecb\nfunction internalMatch(string, regexp, message, fn, fnName) {\n  if (!isRegExp(regexp)) {\n    throw new ERR_INVALID_ARG_TYPE('regexp', 'RegExp', regexp);\n  }\n  var match = fnName === 'match';\n  if (typeof string !== 'string' || RegExpPrototypeTest(regexp, string) !== match) {\n    if (message instanceof Error) {\n      throw message;\n    }\n    var generatedMessage = !message;\n\n    // 'The input was expected to not match the regular expression ' +\n    message = message || (typeof string !== 'string' ? 'The \"string\" argument must be of type string. Received type ' + \"\".concat(_typeof(string), \" (\").concat(inspect(string), \")\") : (match ? 'The input did not match the regular expression ' : 'The input was expected to not match the regular expression ') + \"\".concat(inspect(regexp), \". Input:\\n\\n\").concat(inspect(string), \"\\n\"));\n    var err = new AssertionError({\n      actual: string,\n      expected: regexp,\n      message: message,\n      operator: fnName,\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n}\nassert.match = function match(string, regexp, message) {\n  internalMatch(string, regexp, message, match, 'match');\n};\nassert.doesNotMatch = function doesNotMatch(string, regexp, message) {\n  internalMatch(string, regexp, message, doesNotMatch, 'doesNotMatch');\n};\n\n// Expose a strict only variant of assert\nfunction strict() {\n  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    args[_key6] = arguments[_key6];\n  }\n  innerOk.apply(void 0, [strict, args.length].concat(args));\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;","// Currently in sync with Node.js lib/internal/assert/assertion_error.js\n// https://github.com/nodejs/node/commit/0817840f775032169ddd70c85ac059f18ffcc81c\n\n'use strict';\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _require = require('util/'),\n  inspect = _require.inspect;\nvar _require2 = require('../errors'),\n  ERR_INVALID_ARG_TYPE = _require2.codes.ERR_INVALID_ARG_TYPE;\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n  return str.substring(this_len - search.length, this_len) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\nfunction repeat(str, count) {\n  count = Math.floor(count);\n  if (str.length == 0 || count == 0) return '';\n  var maxCount = str.length * count;\n  count = Math.floor(Math.log(count) / Math.log(2));\n  while (count) {\n    str += str;\n    count--;\n  }\n  str += str.substring(0, maxCount - str.length);\n  return str;\n}\nvar blue = '';\nvar green = '';\nvar red = '';\nvar white = '';\nvar kReadableOperator = {\n  deepStrictEqual: 'Expected values to be strictly deep-equal:',\n  strictEqual: 'Expected values to be strictly equal:',\n  strictEqualObject: 'Expected \"actual\" to be reference-equal to \"expected\":',\n  deepEqual: 'Expected values to be loosely deep-equal:',\n  equal: 'Expected values to be loosely equal:',\n  notDeepStrictEqual: 'Expected \"actual\" not to be strictly deep-equal to:',\n  notStrictEqual: 'Expected \"actual\" to be strictly unequal to:',\n  notStrictEqualObject: 'Expected \"actual\" not to be reference-equal to \"expected\":',\n  notDeepEqual: 'Expected \"actual\" not to be loosely deep-equal to:',\n  notEqual: 'Expected \"actual\" to be loosely unequal to:',\n  notIdentical: 'Values identical but not reference-equal:'\n};\n\n// Comparing short primitives should just show === / !== instead of using the\n// diff.\nvar kMaxShortLength = 10;\nfunction copyError(source) {\n  var keys = Object.keys(source);\n  var target = Object.create(Object.getPrototypeOf(source));\n  keys.forEach(function (key) {\n    target[key] = source[key];\n  });\n  Object.defineProperty(target, 'message', {\n    value: source.message\n  });\n  return target;\n}\nfunction inspectValue(val) {\n  // The util.inspect default values could be changed. This makes sure the\n  // error messages contain the necessary information nevertheless.\n  return inspect(val, {\n    compact: false,\n    customInspect: false,\n    depth: 1000,\n    maxArrayLength: Infinity,\n    // Assert compares only enumerable properties (with a few exceptions).\n    showHidden: false,\n    // Having a long line as error is better than wrapping the line for\n    // comparison for now.\n    // TODO(BridgeAR): `breakLength` should be limited as soon as soon as we\n    // have meta information about the inspected properties (i.e., know where\n    // in what line the property starts and ends).\n    breakLength: Infinity,\n    // Assert does not detect proxies currently.\n    showProxy: false,\n    sorted: true,\n    // Inspect getters as we also check them when comparing entries.\n    getters: true\n  });\n}\nfunction createErrDiff(actual, expected, operator) {\n  var other = '';\n  var res = '';\n  var lastPos = 0;\n  var end = '';\n  var skipped = false;\n  var actualInspected = inspectValue(actual);\n  var actualLines = actualInspected.split('\\n');\n  var expectedLines = inspectValue(expected).split('\\n');\n  var i = 0;\n  var indicator = '';\n\n  // In case both values are objects explicitly mark them as not reference equal\n  // for the `strictEqual` operator.\n  if (operator === 'strictEqual' && _typeof(actual) === 'object' && _typeof(expected) === 'object' && actual !== null && expected !== null) {\n    operator = 'strictEqualObject';\n  }\n\n  // If \"actual\" and \"expected\" fit on a single line and they are not strictly\n  // equal, check further special handling.\n  if (actualLines.length === 1 && expectedLines.length === 1 && actualLines[0] !== expectedLines[0]) {\n    var inputLength = actualLines[0].length + expectedLines[0].length;\n    // If the character length of \"actual\" and \"expected\" together is less than\n    // kMaxShortLength and if neither is an object and at least one of them is\n    // not `zero`, use the strict equal comparison to visualize the output.\n    if (inputLength <= kMaxShortLength) {\n      if ((_typeof(actual) !== 'object' || actual === null) && (_typeof(expected) !== 'object' || expected === null) && (actual !== 0 || expected !== 0)) {\n        // -0 === +0\n        return \"\".concat(kReadableOperator[operator], \"\\n\\n\") + \"\".concat(actualLines[0], \" !== \").concat(expectedLines[0], \"\\n\");\n      }\n    } else if (operator !== 'strictEqualObject') {\n      // If the stderr is a tty and the input length is lower than the current\n      // columns per line, add a mismatch indicator below the output. If it is\n      // not a tty, use a default value of 80 characters.\n      var maxLength = process.stderr && process.stderr.isTTY ? process.stderr.columns : 80;\n      if (inputLength < maxLength) {\n        while (actualLines[0][i] === expectedLines[0][i]) {\n          i++;\n        }\n        // Ignore the first characters.\n        if (i > 2) {\n          // Add position indicator for the first mismatch in case it is a\n          // single line and the input length is less than the column length.\n          indicator = \"\\n  \".concat(repeat(' ', i), \"^\");\n          i = 0;\n        }\n      }\n    }\n  }\n\n  // Remove all ending lines that match (this optimizes the output for\n  // readability by reducing the number of total changed lines).\n  var a = actualLines[actualLines.length - 1];\n  var b = expectedLines[expectedLines.length - 1];\n  while (a === b) {\n    if (i++ < 2) {\n      end = \"\\n  \".concat(a).concat(end);\n    } else {\n      other = a;\n    }\n    actualLines.pop();\n    expectedLines.pop();\n    if (actualLines.length === 0 || expectedLines.length === 0) break;\n    a = actualLines[actualLines.length - 1];\n    b = expectedLines[expectedLines.length - 1];\n  }\n  var maxLines = Math.max(actualLines.length, expectedLines.length);\n  // Strict equal with identical objects that are not identical by reference.\n  // E.g., assert.deepStrictEqual({ a: Symbol() }, { a: Symbol() })\n  if (maxLines === 0) {\n    // We have to get the result again. The lines were all removed before.\n    var _actualLines = actualInspected.split('\\n');\n\n    // Only remove lines in case it makes sense to collapse those.\n    // TODO: Accept env to always show the full error.\n    if (_actualLines.length > 30) {\n      _actualLines[26] = \"\".concat(blue, \"...\").concat(white);\n      while (_actualLines.length > 27) {\n        _actualLines.pop();\n      }\n    }\n    return \"\".concat(kReadableOperator.notIdentical, \"\\n\\n\").concat(_actualLines.join('\\n'), \"\\n\");\n  }\n  if (i > 3) {\n    end = \"\\n\".concat(blue, \"...\").concat(white).concat(end);\n    skipped = true;\n  }\n  if (other !== '') {\n    end = \"\\n  \".concat(other).concat(end);\n    other = '';\n  }\n  var printedLines = 0;\n  var msg = kReadableOperator[operator] + \"\\n\".concat(green, \"+ actual\").concat(white, \" \").concat(red, \"- expected\").concat(white);\n  var skippedMsg = \" \".concat(blue, \"...\").concat(white, \" Lines skipped\");\n  for (i = 0; i < maxLines; i++) {\n    // Only extra expected lines exist\n    var cur = i - lastPos;\n    if (actualLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(expectedLines[i - 2]);\n          printedLines++;\n        }\n        res += \"\\n  \".concat(expectedLines[i - 1]);\n        printedLines++;\n      }\n      // Mark the current line as the last diverging one.\n      lastPos = i;\n      // Add the expected line to the cache.\n      other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLines[i]);\n      printedLines++;\n      // Only extra actual lines exist\n    } else if (expectedLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(actualLines[i - 2]);\n          printedLines++;\n        }\n        res += \"\\n  \".concat(actualLines[i - 1]);\n        printedLines++;\n      }\n      // Mark the current line as the last diverging one.\n      lastPos = i;\n      // Add the actual line to the result.\n      res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLines[i]);\n      printedLines++;\n      // Lines diverge\n    } else {\n      var expectedLine = expectedLines[i];\n      var actualLine = actualLines[i];\n      // If the lines diverge, specifically check for lines that only diverge by\n      // a trailing comma. In that case it is actually identical and we should\n      // mark it as such.\n      var divergingLines = actualLine !== expectedLine && (!endsWith(actualLine, ',') || actualLine.slice(0, -1) !== expectedLine);\n      // If the expected line has a trailing comma but is otherwise identical,\n      // add a comma at the end of the actual line. Otherwise the output could\n      // look weird as in:\n      //\n      //   [\n      //     1         // No comma at the end!\n      // +   2\n      //   ]\n      //\n      if (divergingLines && endsWith(expectedLine, ',') && expectedLine.slice(0, -1) === actualLine) {\n        divergingLines = false;\n        actualLine += ',';\n      }\n      if (divergingLines) {\n        // If the last diverging line is more than one line above and the\n        // current line is at least line three, add some of the former lines and\n        // also add dots to indicate skipped entries.\n        if (cur > 1 && i > 2) {\n          if (cur > 4) {\n            res += \"\\n\".concat(blue, \"...\").concat(white);\n            skipped = true;\n          } else if (cur > 3) {\n            res += \"\\n  \".concat(actualLines[i - 2]);\n            printedLines++;\n          }\n          res += \"\\n  \".concat(actualLines[i - 1]);\n          printedLines++;\n        }\n        // Mark the current line as the last diverging one.\n        lastPos = i;\n        // Add the actual line to the result and cache the expected diverging\n        // line so consecutive diverging lines show up as +++--- and not +-+-+-.\n        res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLine);\n        other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLine);\n        printedLines += 2;\n        // Lines are identical\n      } else {\n        // Add all cached information to the result before adding other things\n        // and reset the cache.\n        res += other;\n        other = '';\n        // If the last diverging line is exactly one line above or if it is the\n        // very first line, add the line to the result.\n        if (cur === 1 || i === 0) {\n          res += \"\\n  \".concat(actualLine);\n          printedLines++;\n        }\n      }\n    }\n    // Inspected object to big (Show ~20 rows max)\n    if (printedLines > 20 && i < maxLines - 2) {\n      return \"\".concat(msg).concat(skippedMsg, \"\\n\").concat(res, \"\\n\").concat(blue, \"...\").concat(white).concat(other, \"\\n\") + \"\".concat(blue, \"...\").concat(white);\n    }\n  }\n  return \"\".concat(msg).concat(skipped ? skippedMsg : '', \"\\n\").concat(res).concat(other).concat(end).concat(indicator);\n}\nvar AssertionError = /*#__PURE__*/function (_Error, _inspect$custom) {\n  _inherits(AssertionError, _Error);\n  var _super = _createSuper(AssertionError);\n  function AssertionError(options) {\n    var _this;\n    _classCallCheck(this, AssertionError);\n    if (_typeof(options) !== 'object' || options === null) {\n      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);\n    }\n    var message = options.message,\n      operator = options.operator,\n      stackStartFn = options.stackStartFn;\n    var actual = options.actual,\n      expected = options.expected;\n    var limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n    if (message != null) {\n      _this = _super.call(this, String(message));\n    } else {\n      if (process.stderr && process.stderr.isTTY) {\n        // Reset on each call to make sure we handle dynamically set environment\n        // variables correct.\n        if (process.stderr && process.stderr.getColorDepth && process.stderr.getColorDepth() !== 1) {\n          blue = \"\\x1B[34m\";\n          green = \"\\x1B[32m\";\n          white = \"\\x1B[39m\";\n          red = \"\\x1B[31m\";\n        } else {\n          blue = '';\n          green = '';\n          white = '';\n          red = '';\n        }\n      }\n      // Prevent the error stack from being visible by duplicating the error\n      // in a very close way to the original in case both sides are actually\n      // instances of Error.\n      if (_typeof(actual) === 'object' && actual !== null && _typeof(expected) === 'object' && expected !== null && 'stack' in actual && actual instanceof Error && 'stack' in expected && expected instanceof Error) {\n        actual = copyError(actual);\n        expected = copyError(expected);\n      }\n      if (operator === 'deepStrictEqual' || operator === 'strictEqual') {\n        _this = _super.call(this, createErrDiff(actual, expected, operator));\n      } else if (operator === 'notDeepStrictEqual' || operator === 'notStrictEqual') {\n        // In case the objects are equal but the operator requires unequal, show\n        // the first object and say A equals B\n        var base = kReadableOperator[operator];\n        var res = inspectValue(actual).split('\\n');\n\n        // In case \"actual\" is an object, it should not be reference equal.\n        if (operator === 'notStrictEqual' && _typeof(actual) === 'object' && actual !== null) {\n          base = kReadableOperator.notStrictEqualObject;\n        }\n\n        // Only remove lines in case it makes sense to collapse those.\n        // TODO: Accept env to always show the full error.\n        if (res.length > 30) {\n          res[26] = \"\".concat(blue, \"...\").concat(white);\n          while (res.length > 27) {\n            res.pop();\n          }\n        }\n\n        // Only print a single input.\n        if (res.length === 1) {\n          _this = _super.call(this, \"\".concat(base, \" \").concat(res[0]));\n        } else {\n          _this = _super.call(this, \"\".concat(base, \"\\n\\n\").concat(res.join('\\n'), \"\\n\"));\n        }\n      } else {\n        var _res = inspectValue(actual);\n        var other = '';\n        var knownOperators = kReadableOperator[operator];\n        if (operator === 'notDeepEqual' || operator === 'notEqual') {\n          _res = \"\".concat(kReadableOperator[operator], \"\\n\\n\").concat(_res);\n          if (_res.length > 1024) {\n            _res = \"\".concat(_res.slice(0, 1021), \"...\");\n          }\n        } else {\n          other = \"\".concat(inspectValue(expected));\n          if (_res.length > 512) {\n            _res = \"\".concat(_res.slice(0, 509), \"...\");\n          }\n          if (other.length > 512) {\n            other = \"\".concat(other.slice(0, 509), \"...\");\n          }\n          if (operator === 'deepEqual' || operator === 'equal') {\n            _res = \"\".concat(knownOperators, \"\\n\\n\").concat(_res, \"\\n\\nshould equal\\n\\n\");\n          } else {\n            other = \" \".concat(operator, \" \").concat(other);\n          }\n        }\n        _this = _super.call(this, \"\".concat(_res).concat(other));\n      }\n    }\n    Error.stackTraceLimit = limit;\n    _this.generatedMessage = !message;\n    Object.defineProperty(_assertThisInitialized(_this), 'name', {\n      value: 'AssertionError [ERR_ASSERTION]',\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n    _this.code = 'ERR_ASSERTION';\n    _this.actual = actual;\n    _this.expected = expected;\n    _this.operator = operator;\n    if (Error.captureStackTrace) {\n      // eslint-disable-next-line no-restricted-syntax\n      Error.captureStackTrace(_assertThisInitialized(_this), stackStartFn);\n    }\n    // Create error message including the error code in the name.\n    _this.stack;\n    // Reset the name.\n    _this.name = 'AssertionError';\n    return _possibleConstructorReturn(_this);\n  }\n  _createClass(AssertionError, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.name, \" [\").concat(this.code, \"]: \").concat(this.message);\n    }\n  }, {\n    key: _inspect$custom,\n    value: function value(recurseTimes, ctx) {\n      // This limits the `actual` and `expected` property default inspection to\n      // the minimum depth. Otherwise those values would be too verbose compared\n      // to the actual error message which contains a combined view of these two\n      // input values.\n      return inspect(this, _objectSpread(_objectSpread({}, ctx), {}, {\n        customInspect: false,\n        depth: 0\n      }));\n    }\n  }]);\n  return AssertionError;\n}( /*#__PURE__*/_wrapNativeSuper(Error), inspect.custom);\nmodule.exports = AssertionError;","// Currently in sync with Node.js lib/internal/errors.js\n// https://github.com/nodejs/node/commit/3b044962c48fe313905877a96b5d0894a5404f6f\n\n/* eslint node-core/documented-errors: \"error\" */\n/* eslint node-core/alphabetize-errors: \"error\" */\n/* eslint node-core/prefer-util-format-errors: \"error\" */\n\n'use strict';\n\n// The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change, the code should not.\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nvar codes = {};\n\n// Lazy loaded\nvar assert;\nvar util;\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n  var NodeError = /*#__PURE__*/function (_Base) {\n    _inherits(NodeError, _Base);\n    var _super = _createSuper(NodeError);\n    function NodeError(arg1, arg2, arg3) {\n      var _this;\n      _classCallCheck(this, NodeError);\n      _this = _super.call(this, getMessage(arg1, arg2, arg3));\n      _this.code = code;\n      return _this;\n    }\n    return _createClass(NodeError);\n  }(Base);\n  codes[code] = NodeError;\n}\n\n// https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n  return str.substring(this_len - search.length, this_len) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\ncreateErrorType('ERR_AMBIGUOUS_ARGUMENT', 'The \"%s\" argument is ambiguous. %s', TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  if (assert === undefined) assert = require('../assert');\n  assert(typeof name === 'string', \"'name' must be a string\");\n\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n  var msg;\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  // TODO(BridgeAR): Improve the output by showing `null` and similar.\n  msg += \". Received type \".concat(_typeof(actual));\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_VALUE', function (name, value) {\n  var reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'is invalid';\n  if (util === undefined) util = require('util/');\n  var inspected = util.inspect(value);\n  if (inspected.length > 128) {\n    inspected = \"\".concat(inspected.slice(0, 128), \"...\");\n  }\n  return \"The argument '\".concat(name, \"' \").concat(reason, \". Received \").concat(inspected);\n}, TypeError, RangeError);\ncreateErrorType('ERR_INVALID_RETURN_VALUE', function (input, name, value) {\n  var type;\n  if (value && value.constructor && value.constructor.name) {\n    type = \"instance of \".concat(value.constructor.name);\n  } else {\n    type = \"type \".concat(_typeof(value));\n  }\n  return \"Expected \".concat(input, \" to be returned from the \\\"\").concat(name, \"\\\"\") + \" function but got \".concat(type, \".\");\n}, TypeError);\ncreateErrorType('ERR_MISSING_ARGS', function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  if (assert === undefined) assert = require('../assert');\n  assert(args.length > 0, 'At least one arg needs to be specified');\n  var msg = 'The ';\n  var len = args.length;\n  args = args.map(function (a) {\n    return \"\\\"\".concat(a, \"\\\"\");\n  });\n  switch (len) {\n    case 1:\n      msg += \"\".concat(args[0], \" argument\");\n      break;\n    case 2:\n      msg += \"\".concat(args[0], \" and \").concat(args[1], \" arguments\");\n      break;\n    default:\n      msg += args.slice(0, len - 1).join(', ');\n      msg += \", and \".concat(args[len - 1], \" arguments\");\n      break;\n  }\n  return \"\".concat(msg, \" must be specified\");\n}, TypeError);\nmodule.exports.codes = codes;","// Currently in sync with Node.js lib/internal/util/comparisons.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar regexFlagsSupported = /a/g.flags !== undefined;\nvar arrayFromSet = function arrayFromSet(set) {\n  var array = [];\n  set.forEach(function (value) {\n    return array.push(value);\n  });\n  return array;\n};\nvar arrayFromMap = function arrayFromMap(map) {\n  var array = [];\n  map.forEach(function (value, key) {\n    return array.push([key, value]);\n  });\n  return array;\n};\nvar objectIs = Object.is ? Object.is : require('object-is');\nvar objectGetOwnPropertySymbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function () {\n  return [];\n};\nvar numberIsNaN = Number.isNaN ? Number.isNaN : require('is-nan');\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\nvar hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\nvar propertyIsEnumerable = uncurryThis(Object.prototype.propertyIsEnumerable);\nvar objectToString = uncurryThis(Object.prototype.toString);\nvar _require$types = require('util/').types,\n  isAnyArrayBuffer = _require$types.isAnyArrayBuffer,\n  isArrayBufferView = _require$types.isArrayBufferView,\n  isDate = _require$types.isDate,\n  isMap = _require$types.isMap,\n  isRegExp = _require$types.isRegExp,\n  isSet = _require$types.isSet,\n  isNativeError = _require$types.isNativeError,\n  isBoxedPrimitive = _require$types.isBoxedPrimitive,\n  isNumberObject = _require$types.isNumberObject,\n  isStringObject = _require$types.isStringObject,\n  isBooleanObject = _require$types.isBooleanObject,\n  isBigIntObject = _require$types.isBigIntObject,\n  isSymbolObject = _require$types.isSymbolObject,\n  isFloat32Array = _require$types.isFloat32Array,\n  isFloat64Array = _require$types.isFloat64Array;\nfunction isNonIndex(key) {\n  if (key.length === 0 || key.length > 10) return true;\n  for (var i = 0; i < key.length; i++) {\n    var code = key.charCodeAt(i);\n    if (code < 48 || code > 57) return true;\n  }\n  // The maximum size for an array is 2 ** 32 -1.\n  return key.length === 10 && key >= Math.pow(2, 32);\n}\nfunction getOwnNonIndexProperties(value) {\n  return Object.keys(value).filter(isNonIndex).concat(objectGetOwnPropertySymbols(value).filter(Object.prototype.propertyIsEnumerable.bind(value)));\n}\n\n// Taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n  var x = a.length;\n  var y = b.length;\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nvar ONLY_ENUMERABLE = undefined;\nvar kStrict = true;\nvar kLoose = false;\nvar kNoIterator = 0;\nvar kIsArray = 1;\nvar kIsSet = 2;\nvar kIsMap = 3;\n\n// Check if they have the same source and flags\nfunction areSimilarRegExps(a, b) {\n  return regexFlagsSupported ? a.source === b.source && a.flags === b.flags : RegExp.prototype.toString.call(a) === RegExp.prototype.toString.call(b);\n}\nfunction areSimilarFloatArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (var offset = 0; offset < a.byteLength; offset++) {\n    if (a[offset] !== b[offset]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction areSimilarTypedArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  return compare(new Uint8Array(a.buffer, a.byteOffset, a.byteLength), new Uint8Array(b.buffer, b.byteOffset, b.byteLength)) === 0;\n}\nfunction areEqualArrayBuffers(buf1, buf2) {\n  return buf1.byteLength === buf2.byteLength && compare(new Uint8Array(buf1), new Uint8Array(buf2)) === 0;\n}\nfunction isEqualBoxedPrimitive(val1, val2) {\n  if (isNumberObject(val1)) {\n    return isNumberObject(val2) && objectIs(Number.prototype.valueOf.call(val1), Number.prototype.valueOf.call(val2));\n  }\n  if (isStringObject(val1)) {\n    return isStringObject(val2) && String.prototype.valueOf.call(val1) === String.prototype.valueOf.call(val2);\n  }\n  if (isBooleanObject(val1)) {\n    return isBooleanObject(val2) && Boolean.prototype.valueOf.call(val1) === Boolean.prototype.valueOf.call(val2);\n  }\n  if (isBigIntObject(val1)) {\n    return isBigIntObject(val2) && BigInt.prototype.valueOf.call(val1) === BigInt.prototype.valueOf.call(val2);\n  }\n  return isSymbolObject(val2) && Symbol.prototype.valueOf.call(val1) === Symbol.prototype.valueOf.call(val2);\n}\n\n// Notes: Type tags are historical [[Class]] properties that can be set by\n// FunctionTemplate::SetClassName() in C++ or Symbol.toStringTag in JS\n// and retrieved using Object.prototype.toString.call(obj) in JS\n// See https://tc39.github.io/ecma262/#sec-object.prototype.tostring\n// for a list of tags pre-defined in the spec.\n// There are some unspecified tags in the wild too (e.g. typed array tags).\n// Since tags can be altered, they only serve fast failures\n//\n// Typed arrays and buffers are checked by comparing the content in their\n// underlying ArrayBuffer. This optimization requires that it's\n// reasonable to interpret their underlying memory in the same way,\n// which is checked by comparing their type tags.\n// (e.g. a Uint8Array and a Uint16Array with the same memory content\n// could still be different because they will be interpreted differently).\n//\n// For strict comparison, objects should have\n// a) The same built-in type tags\n// b) The same prototypes.\n\nfunction innerDeepEqual(val1, val2, strict, memos) {\n  // All identical values are equivalent, as determined by ===.\n  if (val1 === val2) {\n    if (val1 !== 0) return true;\n    return strict ? objectIs(val1, val2) : true;\n  }\n\n  // Check more closely if val1 and val2 are equal.\n  if (strict) {\n    if (_typeof(val1) !== 'object') {\n      return typeof val1 === 'number' && numberIsNaN(val1) && numberIsNaN(val2);\n    }\n    if (_typeof(val2) !== 'object' || val1 === null || val2 === null) {\n      return false;\n    }\n    if (Object.getPrototypeOf(val1) !== Object.getPrototypeOf(val2)) {\n      return false;\n    }\n  } else {\n    if (val1 === null || _typeof(val1) !== 'object') {\n      if (val2 === null || _typeof(val2) !== 'object') {\n        // eslint-disable-next-line eqeqeq\n        return val1 == val2;\n      }\n      return false;\n    }\n    if (val2 === null || _typeof(val2) !== 'object') {\n      return false;\n    }\n  }\n  var val1Tag = objectToString(val1);\n  var val2Tag = objectToString(val2);\n  if (val1Tag !== val2Tag) {\n    return false;\n  }\n  if (Array.isArray(val1)) {\n    // Check for sparse arrays and general fast path\n    if (val1.length !== val2.length) {\n      return false;\n    }\n    var keys1 = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n    var keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kIsArray, keys1);\n  }\n  // [browserify] This triggers on certain types in IE (Map/Set) so we don't\n  // wan't to early return out of the rest of the checks. However we can check\n  // if the second value is one of these values and the first isn't.\n  if (val1Tag === '[object Object]') {\n    // return keyCheck(val1, val2, strict, memos, kNoIterator);\n    if (!isMap(val1) && isMap(val2) || !isSet(val1) && isSet(val2)) {\n      return false;\n    }\n  }\n  if (isDate(val1)) {\n    if (!isDate(val2) || Date.prototype.getTime.call(val1) !== Date.prototype.getTime.call(val2)) {\n      return false;\n    }\n  } else if (isRegExp(val1)) {\n    if (!isRegExp(val2) || !areSimilarRegExps(val1, val2)) {\n      return false;\n    }\n  } else if (isNativeError(val1) || val1 instanceof Error) {\n    // Do not compare the stack as it might differ even though the error itself\n    // is otherwise identical.\n    if (val1.message !== val2.message || val1.name !== val2.name) {\n      return false;\n    }\n  } else if (isArrayBufferView(val1)) {\n    if (!strict && (isFloat32Array(val1) || isFloat64Array(val1))) {\n      if (!areSimilarFloatArrays(val1, val2)) {\n        return false;\n      }\n    } else if (!areSimilarTypedArrays(val1, val2)) {\n      return false;\n    }\n    // Buffer.compare returns true, so val1.length === val2.length. If they both\n    // only contain numeric keys, we don't need to exam further than checking\n    // the symbols.\n    var _keys = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n    var _keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n    if (_keys.length !== _keys2.length) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kNoIterator, _keys);\n  } else if (isSet(val1)) {\n    if (!isSet(val2) || val1.size !== val2.size) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kIsSet);\n  } else if (isMap(val1)) {\n    if (!isMap(val2) || val1.size !== val2.size) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kIsMap);\n  } else if (isAnyArrayBuffer(val1)) {\n    if (!areEqualArrayBuffers(val1, val2)) {\n      return false;\n    }\n  } else if (isBoxedPrimitive(val1) && !isEqualBoxedPrimitive(val1, val2)) {\n    return false;\n  }\n  return keyCheck(val1, val2, strict, memos, kNoIterator);\n}\nfunction getEnumerables(val, keys) {\n  return keys.filter(function (k) {\n    return propertyIsEnumerable(val, k);\n  });\n}\nfunction keyCheck(val1, val2, strict, memos, iterationType, aKeys) {\n  // For all remaining Object pairs, including Array, objects and Maps,\n  // equivalence is determined by having:\n  // a) The same number of owned enumerable properties\n  // b) The same set of keys/indexes (although not necessarily the same order)\n  // c) Equivalent values for every corresponding key/index\n  // d) For Sets and Maps, equal contents\n  // Note: this accounts for both named and indexed properties on Arrays.\n  if (arguments.length === 5) {\n    aKeys = Object.keys(val1);\n    var bKeys = Object.keys(val2);\n\n    // The pair must have the same number of owned properties.\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n  }\n\n  // Cheap key test\n  var i = 0;\n  for (; i < aKeys.length; i++) {\n    if (!hasOwnProperty(val2, aKeys[i])) {\n      return false;\n    }\n  }\n  if (strict && arguments.length === 5) {\n    var symbolKeysA = objectGetOwnPropertySymbols(val1);\n    if (symbolKeysA.length !== 0) {\n      var count = 0;\n      for (i = 0; i < symbolKeysA.length; i++) {\n        var key = symbolKeysA[i];\n        if (propertyIsEnumerable(val1, key)) {\n          if (!propertyIsEnumerable(val2, key)) {\n            return false;\n          }\n          aKeys.push(key);\n          count++;\n        } else if (propertyIsEnumerable(val2, key)) {\n          return false;\n        }\n      }\n      var symbolKeysB = objectGetOwnPropertySymbols(val2);\n      if (symbolKeysA.length !== symbolKeysB.length && getEnumerables(val2, symbolKeysB).length !== count) {\n        return false;\n      }\n    } else {\n      var _symbolKeysB = objectGetOwnPropertySymbols(val2);\n      if (_symbolKeysB.length !== 0 && getEnumerables(val2, _symbolKeysB).length !== 0) {\n        return false;\n      }\n    }\n  }\n  if (aKeys.length === 0 && (iterationType === kNoIterator || iterationType === kIsArray && val1.length === 0 || val1.size === 0)) {\n    return true;\n  }\n\n  // Use memos to handle cycles.\n  if (memos === undefined) {\n    memos = {\n      val1: new Map(),\n      val2: new Map(),\n      position: 0\n    };\n  } else {\n    // We prevent up to two map.has(x) calls by directly retrieving the value\n    // and checking for undefined. The map can only contain numbers, so it is\n    // safe to check for undefined only.\n    var val2MemoA = memos.val1.get(val1);\n    if (val2MemoA !== undefined) {\n      var val2MemoB = memos.val2.get(val2);\n      if (val2MemoB !== undefined) {\n        return val2MemoA === val2MemoB;\n      }\n    }\n    memos.position++;\n  }\n  memos.val1.set(val1, memos.position);\n  memos.val2.set(val2, memos.position);\n  var areEq = objEquiv(val1, val2, strict, aKeys, memos, iterationType);\n  memos.val1.delete(val1);\n  memos.val2.delete(val2);\n  return areEq;\n}\nfunction setHasEqualElement(set, val1, strict, memo) {\n  // Go looking.\n  var setValues = arrayFromSet(set);\n  for (var i = 0; i < setValues.length; i++) {\n    var val2 = setValues[i];\n    if (innerDeepEqual(val1, val2, strict, memo)) {\n      // Remove the matching element to make sure we do not check that again.\n      set.delete(val2);\n      return true;\n    }\n  }\n  return false;\n}\n\n// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Loose_equality_using\n// Sadly it is not possible to detect corresponding values properly in case the\n// type is a string, number, bigint or boolean. The reason is that those values\n// can match lots of different string values (e.g., 1n == '+00001').\nfunction findLooseMatchingPrimitives(prim) {\n  switch (_typeof(prim)) {\n    case 'undefined':\n      return null;\n    case 'object':\n      // Only pass in null as object!\n      return undefined;\n    case 'symbol':\n      return false;\n    case 'string':\n      prim = +prim;\n    // Loose equal entries exist only if the string is possible to convert to\n    // a regular number and not NaN.\n    // Fall through\n    case 'number':\n      if (numberIsNaN(prim)) {\n        return false;\n      }\n  }\n  return true;\n}\nfunction setMightHaveLoosePrim(a, b, prim) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) return altValue;\n  return b.has(altValue) && !a.has(altValue);\n}\nfunction mapMightHaveLoosePrim(a, b, prim, item, memo) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) {\n    return altValue;\n  }\n  var curB = b.get(altValue);\n  if (curB === undefined && !b.has(altValue) || !innerDeepEqual(item, curB, false, memo)) {\n    return false;\n  }\n  return !a.has(altValue) && innerDeepEqual(item, curB, false, memo);\n}\nfunction setEquiv(a, b, strict, memo) {\n  // This is a lazily initiated Set of entries which have to be compared\n  // pairwise.\n  var set = null;\n  var aValues = arrayFromSet(a);\n  for (var i = 0; i < aValues.length; i++) {\n    var val = aValues[i];\n    // Note: Checking for the objects first improves the performance for object\n    // heavy sets but it is a minor slow down for primitives. As they are fast\n    // to check this improves the worst case scenario instead.\n    if (_typeof(val) === 'object' && val !== null) {\n      if (set === null) {\n        set = new Set();\n      }\n      // If the specified value doesn't exist in the second set its an not null\n      // object (or non strict only: a not matching primitive) we'll need to go\n      // hunting for something thats deep-(strict-)equal to it. To make this\n      // O(n log n) complexity we have to copy these values in a new set first.\n      set.add(val);\n    } else if (!b.has(val)) {\n      if (strict) return false;\n\n      // Fast path to detect missing string, symbol, undefined and null values.\n      if (!setMightHaveLoosePrim(a, b, val)) {\n        return false;\n      }\n      if (set === null) {\n        set = new Set();\n      }\n      set.add(val);\n    }\n  }\n  if (set !== null) {\n    var bValues = arrayFromSet(b);\n    for (var _i = 0; _i < bValues.length; _i++) {\n      var _val = bValues[_i];\n      // We have to check if a primitive value is already\n      // matching and only if it's not, go hunting for it.\n      if (_typeof(_val) === 'object' && _val !== null) {\n        if (!setHasEqualElement(set, _val, strict, memo)) return false;\n      } else if (!strict && !a.has(_val) && !setHasEqualElement(set, _val, strict, memo)) {\n        return false;\n      }\n    }\n    return set.size === 0;\n  }\n  return true;\n}\nfunction mapHasEqualEntry(set, map, key1, item1, strict, memo) {\n  // To be able to handle cases like:\n  //   Map([[{}, 'a'], [{}, 'b']]) vs Map([[{}, 'b'], [{}, 'a']])\n  // ... we need to consider *all* matching keys, not just the first we find.\n  var setValues = arrayFromSet(set);\n  for (var i = 0; i < setValues.length; i++) {\n    var key2 = setValues[i];\n    if (innerDeepEqual(key1, key2, strict, memo) && innerDeepEqual(item1, map.get(key2), strict, memo)) {\n      set.delete(key2);\n      return true;\n    }\n  }\n  return false;\n}\nfunction mapEquiv(a, b, strict, memo) {\n  var set = null;\n  var aEntries = arrayFromMap(a);\n  for (var i = 0; i < aEntries.length; i++) {\n    var _aEntries$i = _slicedToArray(aEntries[i], 2),\n      key = _aEntries$i[0],\n      item1 = _aEntries$i[1];\n    if (_typeof(key) === 'object' && key !== null) {\n      if (set === null) {\n        set = new Set();\n      }\n      set.add(key);\n    } else {\n      // By directly retrieving the value we prevent another b.has(key) check in\n      // almost all possible cases.\n      var item2 = b.get(key);\n      if (item2 === undefined && !b.has(key) || !innerDeepEqual(item1, item2, strict, memo)) {\n        if (strict) return false;\n        // Fast path to detect missing string, symbol, undefined and null\n        // keys.\n        if (!mapMightHaveLoosePrim(a, b, key, item1, memo)) return false;\n        if (set === null) {\n          set = new Set();\n        }\n        set.add(key);\n      }\n    }\n  }\n  if (set !== null) {\n    var bEntries = arrayFromMap(b);\n    for (var _i2 = 0; _i2 < bEntries.length; _i2++) {\n      var _bEntries$_i = _slicedToArray(bEntries[_i2], 2),\n        _key = _bEntries$_i[0],\n        item = _bEntries$_i[1];\n      if (_typeof(_key) === 'object' && _key !== null) {\n        if (!mapHasEqualEntry(set, a, _key, item, strict, memo)) return false;\n      } else if (!strict && (!a.has(_key) || !innerDeepEqual(a.get(_key), item, false, memo)) && !mapHasEqualEntry(set, a, _key, item, false, memo)) {\n        return false;\n      }\n    }\n    return set.size === 0;\n  }\n  return true;\n}\nfunction objEquiv(a, b, strict, keys, memos, iterationType) {\n  // Sets and maps don't have their entries accessible via normal object\n  // properties.\n  var i = 0;\n  if (iterationType === kIsSet) {\n    if (!setEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsMap) {\n    if (!mapEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsArray) {\n    for (; i < a.length; i++) {\n      if (hasOwnProperty(a, i)) {\n        if (!hasOwnProperty(b, i) || !innerDeepEqual(a[i], b[i], strict, memos)) {\n          return false;\n        }\n      } else if (hasOwnProperty(b, i)) {\n        return false;\n      } else {\n        // Array is sparse.\n        var keysA = Object.keys(a);\n        for (; i < keysA.length; i++) {\n          var key = keysA[i];\n          if (!hasOwnProperty(b, key) || !innerDeepEqual(a[key], b[key], strict, memos)) {\n            return false;\n          }\n        }\n        if (keysA.length !== Object.keys(b).length) {\n          return false;\n        }\n        return true;\n      }\n    }\n  }\n\n  // The pair must have equivalent values for every corresponding key.\n  // Possibly expensive deep test:\n  for (i = 0; i < keys.length; i++) {\n    var _key2 = keys[i];\n    if (!innerDeepEqual(a[_key2], b[_key2], strict, memos)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isDeepEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kLoose);\n}\nfunction isDeepStrictEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kStrict);\n}\nmodule.exports = {\n  isDeepEqual: isDeepEqual,\n  isDeepStrictEqual: isDeepStrictEqual\n};","// See https://github.com/stellar/js-xdr/issues/117\nimport { Buffer } from 'buffer';\n\nif (!(Buffer.alloc(1).subarray(0, 1) instanceof Buffer)) {\n  Buffer.prototype.subarray = function subarray(start, end) {\n    const result = Uint8Array.prototype.subarray.call(this, start, end);\n    Object.setPrototypeOf(result, Buffer.prototype);\n    return result;\n  };\n}\n\nexport default Buffer;\n","import BigNumber from './util/bignumber';\n\nimport { StrKey } from './strkey';\n\n/**\n * Create a new Account object.\n *\n * `Account` represents a single account in the Stellar network and its sequence\n * number. Account tracks the sequence number as it is used by {@link\n * TransactionBuilder}. See\n * [Accounts](https://developers.stellar.org/docs/glossary/accounts/) for\n * more information about how accounts work in Stellar.\n *\n * @constructor\n *\n * @param {string} accountId - ID of the account (ex.\n *     `GB3KJPLFUYN5VL6R3GU3EGCGVCKFDSD7BEDX42HWG5BWFKB3KQGJJRMA`). If you\n *     provide a muxed account address, this will throw; use {@link\n *     MuxedAccount} instead.\n * @param {string} sequence  - current sequence number of the account\n */\nexport class Account {\n  constructor(accountId, sequence) {\n    if (StrKey.isValidMdilithium2PublicKey(accountId)) {\n      throw new Error('accountId is an M-address; use MuxedAccount instead');\n    }\n\n    if (!StrKey.isValidDilithium2PublicKey(accountId)) {\n      throw new Error('accountId is invalid');\n    }\n    if (!(typeof sequence === 'string')) {\n      throw new Error('sequence must be of type string');\n    }\n\n    this._accountId = accountId;\n    this.sequence = new BigNumber(sequence);\n  }\n\n  /**\n   * Returns Stellar account ID.\n   * @returns {string}\n   */\n  accountId() {\n    return this._accountId;\n  }\n\n  /**\n   * @returns {string}  sequence number for the account as a string\n   */\n  sequenceNumber() {\n    return this.sequence.toString();\n  }\n\n  /**\n   * Increments sequence number in this object by one.\n   * @returns {void}\n   */\n  incrementSequenceNumber() {\n    this.sequence = this.sequence.plus(1);\n  }\n}\n","import { StrKey } from './strkey';\nimport xdr from './xdr';\n\n/**\n * Create a new Address object.\n *\n * `Address` represents a single address in the Stellar network. An address can\n * represent an account or a contract.\n *\n * @constructor\n *\n * @param {string} address - ID of the account, If you\n *     provide a muxed account address, this will throw; use {@link\n *     MuxedAccount} instead.\n */\nexport class Address {\n  constructor(address) {\n    if (StrKey.isValidDilithium2PublicKey(address)) {\n      this._type = 'account';\n      this._key = StrKey.decodeDilithium2PublicKey(address);\n    } else if (StrKey.isValidContract(address)) {\n      this._type = 'contract';\n      this._key = StrKey.decodeContract(address);\n    } else {\n      throw new Error(`Unsupported address type: ${address}`);\n    }\n  }\n\n  /**\n   * Parses a string and returns an Address object.\n   *\n   * @param {string} address - The address to parse. ex. `GB3KJPLFUYN5VL6R3GU3EGCGVCKFDSD7BEDX42HWG5BWFKB3KQGJJRMA`\n   * @returns {Address}\n   */\n  static fromString(address) {\n    return new Address(address);\n  }\n\n  /**\n   * Creates a new account Address object from a buffer of raw bytes.\n   *\n   * @param {Buffer} buffer - The bytes of an address to parse.\n   * @returns {Address}\n   */\n  static account(buffer) {\n    return new Address(StrKey.encodeDilithium2PublicKey(buffer));\n  }\n\n  /**\n   * Creates a new contract Address object from a buffer of raw bytes.\n   *\n   * @param {Buffer} buffer - The bytes of an address to parse.\n   * @returns {Address}\n   */\n  static contract(buffer) {\n    return new Address(StrKey.encodeContract(buffer));\n  }\n\n  /**\n   * Convert this from an xdr.ScVal type\n   *\n   * @param {xdr.ScVal} scVal - The xdr.ScVal type to parse\n   * @returns {Address}\n   */\n  static fromScVal(scVal) {\n    return Address.fromScAddress(scVal.address());\n  }\n\n  /**\n   * Convert this from an xdr.ScAddress type\n   *\n   * @param {xdr.ScAddress} scAddress - The xdr.ScAddress type to parse\n   * @returns {Address}\n   */\n  static fromScAddress(scAddress) {\n    switch (scAddress.switch()) {\n      case xdr.ScAddressType.scAddressTypeAccount():\n        return Address.account(scAddress.accountId().dilithium2());\n      case xdr.ScAddressType.scAddressTypeContract():\n        return Address.contract(scAddress.contractId());\n      default:\n        throw new Error('Unsupported address type');\n    }\n  }\n\n  /**\n   * Serialize an address to string.\n   *\n   * @returns {string}\n   */\n  toString() {\n    switch (this._type) {\n      case 'account':\n        return StrKey.encodeDilithium2PublicKey(this._key);\n      case 'contract':\n        return StrKey.encodeContract(this._key);\n      default:\n        throw new Error('Unsupported address type');\n    }\n  }\n\n  /**\n   * Convert this Address to an xdr.ScVal type.\n   *\n   * @returns {xdr.ScVal}\n   */\n  toScVal() {\n    return xdr.ScVal.scvAddress(this.toScAddress());\n  }\n\n  /**\n   * Convert this Address to an xdr.ScAddress type.\n   *\n   * @returns {xdr.ScAddress}\n   */\n  toScAddress() {\n    switch (this._type) {\n      case 'account':\n        return xdr.ScAddress.scAddressTypeAccount(\n          xdr.PublicKey.publicKeyTypeDilithium2(this._key)\n        );\n      case 'contract':\n        return xdr.ScAddress.scAddressTypeContract(this._key);\n      default:\n        throw new Error('Unsupported address type');\n    }\n  }\n\n  /**\n   * Return the raw public key bytes for this address.\n   *\n   * @returns {Buffer}\n   */\n  toBuffer() {\n    return this._key;\n  }\n}\n","import { trimEnd } from './util/util';\nimport xdr from './xdr';\nimport { Keypair } from './keypair';\nimport { StrKey } from './strkey';\nimport { hash } from './hashing';\n\n/**\n * Asset class represents an asset, either the native asset (`XLM`)\n * or an asset code / issuer account ID pair.\n *\n * An asset code describes an asset code and issuer pair. In the case of the native\n * asset XLM, the issuer will be null.\n *\n * @constructor\n * @param {string} code - The asset code.\n * @param {string} issuer - The account ID of the issuer.\n */\nexport class Asset {\n  constructor(code, issuer) {\n    if (!/^[a-zA-Z0-9]{1,12}$/.test(code)) {\n      throw new Error(\n        'Asset code is invalid (maximum alphanumeric, 12 characters at max)'\n      );\n    }\n    if (String(code).toLowerCase() !== 'xlm' && !issuer) {\n      throw new Error('Issuer cannot be null');\n    }\n    if (issuer && !StrKey.isValidDilithium2PublicKey(issuer)) {\n      throw new Error('Issuer is invalid');\n    }\n\n    if (String(code).toLowerCase() === 'xlm') {\n      // transform all xLM, Xlm, etc. variants -> XLM\n      this.code = 'XLM';\n    } else {\n      this.code = code;\n    }\n\n    this.issuer = issuer;\n  }\n\n  /**\n   * Returns an asset object for the native asset.\n   * @Return {Asset}\n   */\n  static native() {\n    return new Asset('XLM');\n  }\n\n  /**\n   * Returns an asset object from its XDR object representation.\n   * @param {xdr.Asset} assetXdr - The asset xdr object.\n   * @returns {Asset}\n   */\n  static fromOperation(assetXdr) {\n    let anum;\n    let code;\n    let issuer;\n    switch (assetXdr.switch()) {\n      case xdr.AssetType.assetTypeNative():\n        return this.native();\n      case xdr.AssetType.assetTypeCreditAlphanum4():\n        anum = assetXdr.alphaNum4();\n      /* falls through */\n      case xdr.AssetType.assetTypeCreditAlphanum12():\n        anum = anum || assetXdr.alphaNum12();\n        issuer = StrKey.encodeDilithium2PublicKey(anum.issuer().dilithium2());\n        code = trimEnd(anum.assetCode(), '\\0');\n        return new this(code, issuer);\n      default:\n        throw new Error(`Invalid asset type: ${assetXdr.switch().name}`);\n    }\n  }\n\n  /**\n   * Returns the xdr.Asset object for this asset.\n   * @returns {xdr.Asset} XDR asset object\n   */\n  toXDRObject() {\n    return this._toXDRObject(xdr.Asset);\n  }\n\n  /**\n   * Returns the xdr.ChangeTrustAsset object for this asset.\n   * @returns {xdr.ChangeTrustAsset} XDR asset object\n   */\n  toChangeTrustXDRObject() {\n    return this._toXDRObject(xdr.ChangeTrustAsset);\n  }\n\n  /**\n   * Returns the xdr.TrustLineAsset object for this asset.\n   * @returns {xdr.TrustLineAsset} XDR asset object\n   */\n  toTrustLineXDRObject() {\n    return this._toXDRObject(xdr.TrustLineAsset);\n  }\n\n  /**\n   * Returns the would-be contract ID (`C...` format) for this asset on a given\n   * network.\n   *\n   * @param {string}    networkPassphrase   indicates which network the contract\n   *    ID should refer to, since every network will have a unique ID for the\n   *    same contract (see {@link Networks} for options)\n   *\n   * @returns {string}  the strkey-encoded (`C...`) contract ID for this asset\n   *\n   * @warning This makes no guarantee that this contract actually *exists*.\n   */\n  contractId(networkPassphrase) {\n    const networkId = hash(Buffer.from(networkPassphrase));\n    const preimage = xdr.HashIdPreimage.envelopeTypeContractId(\n      new xdr.HashIdPreimageContractId({\n        networkId,\n        contractIdPreimage: xdr.ContractIdPreimage.contractIdPreimageFromAsset(\n          this.toXDRObject()\n        )\n      })\n    );\n\n    return StrKey.encodeContract(hash(preimage.toXDR()));\n  }\n\n  /**\n   * Returns the xdr object for this asset.\n   * @param {xdr.Asset | xdr.ChangeTrustAsset} xdrAsset - The asset xdr object.\n   * @returns {xdr.Asset | xdr.ChangeTrustAsset | xdr.TrustLineAsset} XDR Asset object\n   */\n  _toXDRObject(xdrAsset = xdr.Asset) {\n    if (this.isNative()) {\n      return xdrAsset.assetTypeNative();\n    }\n\n    let xdrType;\n    let xdrTypeString;\n    if (this.code.length <= 4) {\n      xdrType = xdr.AlphaNum4;\n      xdrTypeString = 'assetTypeCreditAlphanum4';\n    } else {\n      xdrType = xdr.AlphaNum12;\n      xdrTypeString = 'assetTypeCreditAlphanum12';\n    }\n\n    // pad code with null bytes if necessary\n    const padLength = this.code.length <= 4 ? 4 : 12;\n    const paddedCode = this.code.padEnd(padLength, '\\0');\n\n    // eslint-disable-next-line new-cap\n    const assetType = new xdrType({\n      assetCode: paddedCode,\n      issuer: Keypair.fromPublicKey(this.issuer).xdrAccountId()\n    });\n\n    return new xdrAsset(xdrTypeString, assetType);\n  }\n\n  /**\n   * @returns {string} Asset code\n   */\n  getCode() {\n    if (this.code === undefined) {\n      return undefined;\n    }\n    return String(this.code);\n  }\n\n  /**\n   * @returns {string} Asset issuer\n   */\n  getIssuer() {\n    if (this.issuer === undefined) {\n      return undefined;\n    }\n    return String(this.issuer);\n  }\n\n  /**\n   * @see [Assets concept](https://developers.stellar.org/docs/glossary/assets/)\n   * @returns {string} Asset type. Can be one of following types:\n   *\n   *  - `native`,\n   *  - `credit_alphanum4`,\n   *  - `credit_alphanum12`, or\n   *  - `unknown` as the error case (which should never occur)\n   */\n  getAssetType() {\n    switch (this.getRawAssetType().value) {\n      case xdr.AssetType.assetTypeNative().value:\n        return 'native';\n      case xdr.AssetType.assetTypeCreditAlphanum4().value:\n        return 'credit_alphanum4';\n      case xdr.AssetType.assetTypeCreditAlphanum12().value:\n        return 'credit_alphanum12';\n      default:\n        return 'unknown';\n    }\n  }\n\n  /**\n   * @returns {xdr.AssetType}  the raw XDR representation of the asset type\n   */\n  getRawAssetType() {\n    if (this.isNative()) {\n      return xdr.AssetType.assetTypeNative();\n    }\n\n    if (this.code.length <= 4) {\n      return xdr.AssetType.assetTypeCreditAlphanum4();\n    }\n\n    return xdr.AssetType.assetTypeCreditAlphanum12();\n  }\n\n  /**\n   * @returns {boolean}  true if this asset object is the native asset.\n   */\n  isNative() {\n    return !this.issuer;\n  }\n\n  /**\n   * @param {Asset} asset Asset to compare\n   * @returns {boolean} true if this asset equals the given asset.\n   */\n  equals(asset) {\n    return this.code === asset.getCode() && this.issuer === asset.getIssuer();\n  }\n\n  toString() {\n    if (this.isNative()) {\n      return 'native';\n    }\n\n    return `${this.getCode()}:${this.getIssuer()}`;\n  }\n\n  /**\n   * Compares two assets according to the criteria:\n   *\n   *  1. First compare the type (native < alphanum4 < alphanum12).\n   *  2. If the types are equal, compare the assets codes.\n   *  3. If the asset codes are equal, compare the issuers.\n   *\n   * @param   {Asset} assetA - the first asset\n   * @param   {Asset} assetB - the second asset\n   * @returns {number} `-1` if assetA < assetB, `0` if assetA == assetB, `1` if assetA > assetB.\n   *\n   * @static\n   * @memberof Asset\n   */\n  static compare(assetA, assetB) {\n    if (!assetA || !(assetA instanceof Asset)) {\n      throw new Error('assetA is invalid');\n    }\n    if (!assetB || !(assetB instanceof Asset)) {\n      throw new Error('assetB is invalid');\n    }\n\n    if (assetA.equals(assetB)) {\n      return 0;\n    }\n\n    // Compare asset types.\n    const xdrAtype = assetA.getRawAssetType().value;\n    const xdrBtype = assetB.getRawAssetType().value;\n    if (xdrAtype !== xdrBtype) {\n      return xdrAtype < xdrBtype ? -1 : 1;\n    }\n\n    // Compare asset codes.\n    const result = asciiCompare(assetA.getCode(), assetB.getCode());\n    if (result !== 0) {\n      return result;\n    }\n\n    // Compare asset issuers.\n    return asciiCompare(assetA.getIssuer(), assetB.getIssuer());\n  }\n}\n\n/**\n * Compares two ASCII strings in lexographic order with uppercase precedence.\n *\n * @param   {string} a - the first string to compare\n * @param   {string} b - the second\n * @returns {number} like all `compare()`s:\n *     -1 if `a < b`, 0 if `a == b`, and 1 if `a > b`\n *\n * @warning No type-checks are done on the parameters\n */\nfunction asciiCompare(a, b) {\n  return Buffer.compare(Buffer.from(a, 'ascii'), Buffer.from(b, 'ascii'));\n}\n","import xdr from './xdr';\n\nimport { Keypair } from './keypair';\nimport { StrKey } from './strkey';\nimport { Networks } from './network';\nimport { hash } from './hashing';\n\nimport { Address } from './address';\nimport { nativeToScVal } from './scval';\n\n/**\n * @async\n * @callback SigningCallback A callback for signing an XDR structure\n * representing all of the details necessary to authorize an invocation tree.\n *\n * @param {xdr.HashIdPreimage} preimage   the entire authorization envelope\n *    whose hash you should sign, so that you can inspect the entire structure\n *    if necessary (rather than blindly signing a hash)\n *\n * @returns {Promise<Uint8Array>}   the signature of the raw payload (which is\n *    the sha256 hash of the preimage bytes, so `hash(preimage.toXDR())`) signed\n *    by the key corresponding to the public key in the entry you pass to\n *    {@link authorizeEntry} (decipherable from its\n *    `credentials().address().address()`)\n */\n\n/**\n * Actually authorizes an existing authorization entry using the given the\n * credentials and expiration details, returning a signed copy.\n *\n * This \"fills out\" the authorization entry with a signature, indicating to the\n * {@link Operation.invokeHostFunction} its attached to that:\n *   - a particular identity (i.e. signing {@link Keypair} or other signer)\n *   - approving the execution of an invocation tree (i.e. a simulation-acquired\n *     {@link xdr.SorobanAuthorizedInvocation} or otherwise built)\n *   - on a particular network (uniquely identified by its passphrase, see\n *     {@link Networks})\n *   - until a particular ledger sequence is reached.\n *\n * This one lets you pass a either a {@link Keypair} (or, more accurately,\n * anything with a `sign(Buffer): Buffer` method) or a callback function (see\n * {@link SigningCallback}) to handle signing the envelope hash.\n *\n * @param {xdr.SorobanAuthorizationEntry} entry   an unsigned authorization entr\n * @param {Keypair | SigningCallback} signer  either a {@link Keypair} instance\n *    or a function which takes a payload (a\n *    {@link xdr.HashIdPreimageSorobanAuthorization} instance) input and returns\n *    the signature of the hash of the raw payload bytes (where the signing key\n *    should correspond to the address in the `entry`)\n * @param {number} validUntilLedgerSeq   the (exclusive) future ledger sequence\n *    number until which this authorization entry should be valid (if\n *    `currentLedgerSeq==validUntil`, this is expired))\n * @param {string} [networkPassphrase]  the network passphrase is incorprated\n *    into the signature (see {@link Networks} for options)\n *\n * @returns {Promise<xdr.SorobanAuthorizationEntry>} a promise for an\n *    authorization entry that you can pass along to\n *    {@link Operation.invokeHostFunction}\n *\n * @note If using the `SigningCallback` variation, the signer is assumed to be\n *    the entry's credential address. If you need a different key to sign the\n *    entry, you will need to use different method (e.g., fork this code).\n *\n * @see authorizeInvocation\n * @example\n * import {\n *   SorobanRpc,\n *   Transaction,\n *   Networks,\n *   authorizeEntry\n * } from '@stellar/stellar-sdk';\n *\n * // Assume signPayloadCallback is a well-formed signing callback.\n * //\n * // It might, for example, pop up a modal from a browser extension, send the\n * // transaction to a third-party service for signing, or just do simple\n * // signing via Keypair like it does here:\n * function signPayloadCallback(payload) {\n *    return signer.sign(hash(payload.toXDR());\n * }\n *\n * function multiPartyAuth(\n *    server: SorobanRpc.Server,\n *    // assume this involves multi-party auth\n *    tx: Transaction,\n * ) {\n *    return server\n *      .simulateTransaction(tx)\n *      .then((simResult) => {\n *          tx.operations[0].auth.map(entry =>\n *            authorizeEntry(\n *              entry,\n *              signPayloadCallback,\n *              currentLedger + 1000,\n *              Networks.TESTNET);\n *          ));\n *\n *          return server.prepareTransaction(tx, simResult);\n *      })\n *      .then((preppedTx) => {\n *        preppedTx.sign(source);\n *        return server.sendTransaction(preppedTx);\n *      });\n * }\n */\nexport async function authorizeEntry(\n  entry,\n  signer,\n  validUntilLedgerSeq,\n  networkPassphrase = Networks.FUTURENET\n) {\n  // no-op if it's source account auth\n  if (\n    entry.credentials().switch().value !==\n    xdr.SorobanCredentialsType.sorobanCredentialsAddress().value\n  ) {\n    return entry;\n  }\n\n  const clone = xdr.SorobanAuthorizationEntry.fromXDR(entry.toXDR());\n\n  /** @type {xdr.SorobanAddressCredentials} */\n  const addrAuth = clone.credentials().address();\n  addrAuth.signatureExpirationLedger(validUntilLedgerSeq);\n\n  const networkId = hash(Buffer.from(networkPassphrase));\n  const preimage = xdr.HashIdPreimage.envelopeTypeSorobanAuthorization(\n    new xdr.HashIdPreimageSorobanAuthorization({\n      networkId,\n      nonce: addrAuth.nonce(),\n      invocation: clone.rootInvocation(),\n      signatureExpirationLedger: addrAuth.signatureExpirationLedger()\n    })\n  );\n  const payload = hash(preimage.toXDR());\n\n  let signature;\n  let publicKey;\n  if (typeof signer === 'function') {\n    signature = Buffer.from(await signer(preimage));\n    publicKey = Address.fromScAddress(addrAuth.address()).toString();\n  } else {\n    signature = Buffer.from(signer.sign(payload));\n    publicKey = signer.publicKey();\n  }\n\n  if (!Keypair.fromPublicKey(publicKey).verify(payload, signature)) {\n    throw new Error(`signature doesn't match payload`);\n  }\n\n  // This structure is defined here:\n  // https://soroban.stellar.org/docs/fundamentals-and-concepts/invoking-contracts-with-transactions#stellar-account-signatures\n  //\n  // Encoding a contract structure as an ScVal means the map keys are supposed\n  // to be symbols, hence the forced typing here.\n  const sigScVal = nativeToScVal(\n    {\n      public_key: StrKey.decodeDilithium2PublicKey(publicKey),\n      signature\n    },\n    {\n      type: {\n        public_key: ['symbol', null],\n        signature: ['symbol', null]\n      }\n    }\n  );\n\n  addrAuth.signature(xdr.ScVal.scvVec([sigScVal]));\n  return clone;\n}\n\n/**\n * This builds an entry from scratch, allowing you to express authorization as a\n * function of:\n *   - a particular identity (i.e. signing {@link Keypair} or other signer)\n *   - approving the execution of an invocation tree (i.e. a simulation-acquired\n *     {@link xdr.SorobanAuthorizedInvocation} or otherwise built)\n *   - on a particular network (uniquely identified by its passphrase, see\n *     {@link Networks})\n *   - until a particular ledger sequence is reached.\n *\n * This is in contrast to {@link authorizeEntry}, which signs an existing entry.\n *\n * @param {Keypair | SigningCallback} signer  either a {@link Keypair} instance\n *    (or anything with a `.sign(buf): Buffer-like` method) or a function which\n *    takes a payload (a {@link xdr.HashIdPreimageSorobanAuthorization}\n *    instance) input and returns the signature of the hash of the raw payload\n *    bytes (where the signing key should correspond to the address in the\n *    `entry`)\n * @param {number}  validUntilLedgerSeq  the (exclusive) future ledger sequence\n *    number until which this authorization entry should be valid (if\n *    `currentLedgerSeq==validUntilLedgerSeq`, this is expired))\n * @param {xdr.SorobanAuthorizedInvocation} invocation the invocation tree that\n *    we're authorizing (likely, this comes from transaction simulation)\n * @param {string}  [publicKey]   the public identity of the signer (when\n *    providing a {@link Keypair} to `signer`, this can be omitted, as it just\n *    uses {@link Keypair.publicKey})\n * @param {string}  [networkPassphrase]   the network passphrase is incorprated\n *    into the signature (see {@link Networks} for options, default:\n *    {@link Networks.FUTURENET})\n *\n * @returns {Promise<xdr.SorobanAuthorizationEntry>} a promise for an\n *    authorization entry that you can pass along to\n *    {@link Operation.invokeHostFunction}\n *\n * @see authorizeEntry\n */\nexport function authorizeInvocation(\n  signer,\n  validUntilLedgerSeq,\n  invocation,\n  publicKey = '',\n  networkPassphrase = Networks.FUTURENET\n) {\n  // We use keypairs as a source of randomness for the nonce to avoid mucking\n  // with any crypto dependencies. Note that this just has to be random and\n  // unique, not cryptographically secure, so it's fine.\n  const kp = Keypair.random().rawPublicKey();\n  const nonce = new xdr.Int64(bytesToInt64(kp));\n\n  const pk = publicKey || signer.publicKey();\n  if (!pk) {\n    throw new Error(`authorizeInvocation requires publicKey parameter`);\n  }\n\n  const entry = new xdr.SorobanAuthorizationEntry({\n    rootInvocation: invocation,\n    credentials: xdr.SorobanCredentials.sorobanCredentialsAddress(\n      new xdr.SorobanAddressCredentials({\n        address: new Address(pk).toScAddress(),\n        nonce,\n        signatureExpirationLedger: 0, // replaced\n        signature: xdr.ScVal.scvVec([]) // replaced\n      })\n    )\n  });\n\n  return authorizeEntry(entry, signer, validUntilLedgerSeq, networkPassphrase);\n}\n\nfunction bytesToInt64(bytes) {\n  // eslint-disable-next-line no-bitwise\n  return bytes.subarray(0, 8).reduce((accum, b) => (accum << 8) | b, 0);\n}\n","import xdr from './xdr';\nimport { Keypair } from './keypair';\nimport { StrKey } from './strkey';\n\n/**\n * Claimant class represents an xdr.Claimant\n *\n * The claim predicate is optional, it defaults to unconditional if none is specified.\n *\n * @constructor\n * @param {string} destination - The destination account ID.\n * @param {xdr.ClaimPredicate} [predicate] - The claim predicate.\n */\nexport class Claimant {\n  constructor(destination, predicate) {\n    if (destination && !StrKey.isValidDilithium2PublicKey(destination)) {\n      throw new Error('Destination is invalid');\n    }\n    this._destination = destination;\n\n    if (!predicate) {\n      this._predicate = xdr.ClaimPredicate.claimPredicateUnconditional();\n    } else if (predicate instanceof xdr.ClaimPredicate) {\n      this._predicate = predicate;\n    } else {\n      throw new Error('Predicate should be an xdr.ClaimPredicate');\n    }\n  }\n\n  /**\n   * Returns an unconditional claim predicate\n   * @Return {xdr.ClaimPredicate}\n   */\n  static predicateUnconditional() {\n    return xdr.ClaimPredicate.claimPredicateUnconditional();\n  }\n\n  /**\n   * Returns an `and` claim predicate\n   * @param {xdr.ClaimPredicate} left an xdr.ClaimPredicate\n   * @param {xdr.ClaimPredicate} right an xdr.ClaimPredicate\n   * @Return {xdr.ClaimPredicate}\n   */\n  static predicateAnd(left, right) {\n    if (!(left instanceof xdr.ClaimPredicate)) {\n      throw new Error('left Predicate should be an xdr.ClaimPredicate');\n    }\n    if (!(right instanceof xdr.ClaimPredicate)) {\n      throw new Error('right Predicate should be an xdr.ClaimPredicate');\n    }\n\n    return xdr.ClaimPredicate.claimPredicateAnd([left, right]);\n  }\n\n  /**\n   * Returns an `or` claim predicate\n   * @param {xdr.ClaimPredicate} left an xdr.ClaimPredicate\n   * @param {xdr.ClaimPredicate} right an xdr.ClaimPredicate\n   * @Return {xdr.ClaimPredicate}\n   */\n  static predicateOr(left, right) {\n    if (!(left instanceof xdr.ClaimPredicate)) {\n      throw new Error('left Predicate should be an xdr.ClaimPredicate');\n    }\n    if (!(right instanceof xdr.ClaimPredicate)) {\n      throw new Error('right Predicate should be an xdr.ClaimPredicate');\n    }\n\n    return xdr.ClaimPredicate.claimPredicateOr([left, right]);\n  }\n\n  /**\n   * Returns a `not` claim predicate\n   * @param {xdr.ClaimPredicate} predicate an xdr.ClaimPredicate\n   * @Return {xdr.ClaimPredicate}\n   */\n  static predicateNot(predicate) {\n    if (!(predicate instanceof xdr.ClaimPredicate)) {\n      throw new Error('right Predicate should be an xdr.ClaimPredicate');\n    }\n\n    return xdr.ClaimPredicate.claimPredicateNot(predicate);\n  }\n\n  /**\n   * Returns a `BeforeAbsoluteTime` claim predicate\n   *\n   * This predicate will be fulfilled if the closing time of the ledger that\n   * includes the CreateClaimableBalance operation is less than this (absolute)\n   * Unix timestamp (expressed in seconds).\n   *\n   * @param {string} absBefore Unix epoch (in seconds) as a string\n   * @Return {xdr.ClaimPredicate}\n   */\n  static predicateBeforeAbsoluteTime(absBefore) {\n    return xdr.ClaimPredicate.claimPredicateBeforeAbsoluteTime(\n      xdr.Int64.fromString(absBefore)\n    );\n  }\n\n  /**\n   * Returns a `BeforeRelativeTime` claim predicate\n   *\n   * This predicate will be fulfilled if the closing time of the ledger that\n   * includes the CreateClaimableBalance operation plus this relative time delta\n   * (in seconds) is less than the current time.\n   *\n   * @param {strings} seconds seconds since closeTime of the ledger in which the ClaimableBalanceEntry was created (as string)\n   * @Return {xdr.ClaimPredicate}\n   */\n  static predicateBeforeRelativeTime(seconds) {\n    return xdr.ClaimPredicate.claimPredicateBeforeRelativeTime(\n      xdr.Int64.fromString(seconds)\n    );\n  }\n\n  /**\n   * Returns a claimant object from its XDR object representation.\n   * @param {xdr.Claimant} claimantXdr - The claimant xdr object.\n   * @returns {Claimant}\n   */\n  static fromXDR(claimantXdr) {\n    let value;\n    switch (claimantXdr.switch()) {\n      case xdr.ClaimantType.claimantTypeV0():\n        value = claimantXdr.v0();\n        return new this(\n          StrKey.encodeDilithium2PublicKey(value.destination().dilithium2()),\n          value.predicate()\n        );\n      default:\n        throw new Error(`Invalid claimant type: ${claimantXdr.switch().name}`);\n    }\n  }\n\n  /**\n   * Returns the xdr object for this claimant.\n   * @returns {xdr.Claimant} XDR Claimant object\n   */\n  toXDRObject() {\n    const claimant = new xdr.ClaimantV0({\n      destination: Keypair.fromPublicKey(this._destination).xdrAccountId(),\n      predicate: this._predicate\n    });\n\n    return xdr.Claimant.claimantTypeV0(claimant);\n  }\n\n  /**\n   * @type {string}\n   * @readonly\n   */\n  get destination() {\n    return this._destination;\n  }\n\n  set destination(value) {\n    throw new Error('Claimant is immutable');\n  }\n\n  /**\n   * @type {xdr.ClaimPredicate}\n   * @readonly\n   */\n  get predicate() {\n    return this._predicate;\n  }\n\n  set predicate(value) {\n    throw new Error('Claimant is immutable');\n  }\n}\n","import { Address } from './address';\nimport { Operation } from './operation';\nimport xdr from './xdr';\nimport { StrKey } from './strkey';\n\n/**\n * Create a new Contract object.\n *\n * `Contract` represents a single contract in the Stellar network, embodying the\n * interface of the contract. See\n * [Contracts](https://soroban.stellar.org/docs/learn/interacting-with-contracts)\n * for more information about how contracts work in Stellar.\n *\n * @constructor\n *\n * @param {string} contractId - ID of the contract (ex.\n *     `CA3D5KRYM6CB7OWQ6TWYRR3Z4T7GNZLKERYNZGGA5SOAOPIFY6YQGAXE`).\n */\nexport class Contract {\n  constructor(contractId) {\n    try {\n      // First, try it as a strkey\n      this._id = StrKey.decodeContract(contractId);\n    } catch (_) {\n      throw new Error(`Invalid contract ID: ${contractId}`);\n    }\n  }\n\n  /**\n   * Returns Stellar contract ID as a strkey, ex.\n   * `CA3D5KRYM6CB7OWQ6TWYRR3Z4T7GNZLKERYNZGGA5SOAOPIFY6YQGAXE`.\n   * @returns {string}\n   */\n  contractId() {\n    return StrKey.encodeContract(this._id);\n  }\n\n  /** @returns {string} the ID as a strkey (C...) */\n  toString() {\n    return this.contractId();\n  }\n\n  /** @returns {Address} the wrapped address of this contract */\n  address() {\n    return Address.contract(this._id);\n  }\n\n  /**\n   * Returns an operation that will invoke this contract call.\n   *\n   * @param {string}        method   name of the method to call\n   * @param {...xdr.ScVal}  params   arguments to pass to the function call\n   *\n   * @returns {xdr.Operation}   an InvokeHostFunctionOp operation to call the\n   *    contract with the given method and parameters\n   *\n   * @see Operation.invokeHostFunction\n   * @see Operation.invokeContractFunction\n   * @see Operation.createCustomContract\n   * @see Operation.createStellarAssetContract\n   * @see Operation.uploadContractWasm\n   */\n  call(method, ...params) {\n    return Operation.invokeContractFunction({\n      contract: this.address().toString(),\n      function: method,\n      args: params\n    });\n  }\n\n  /**\n   * Returns the read-only footprint entries necessary for any invocations to\n   * this contract, for convenience when manually adding it to your\n   * transaction's overall footprint or doing bump/restore operations.\n   *\n   * @returns {xdr.LedgerKey} the ledger key for the deployed contract instance\n   */\n  getFootprint() {\n    return xdr.LedgerKey.contractData(\n      new xdr.LedgerKeyContractData({\n        contract: this.address().toScAddress(),\n        key: xdr.ScVal.scvLedgerKeyContractInstance(),\n        durability: xdr.ContractDataDurability.persistent()\n      })\n    );\n  }\n}\n","import { StrKey } from './strkey';\nimport { scValToNative } from './scval';\n\n/**\n * Converts raw diagnostic or contract events into something with a flatter,\n * human-readable, and understandable structure.\n *\n * @param {xdr.DiagnosticEvent[] | xdr.ContractEvent[]} events  either contract\n *    events or diagnostic events to parse into a friendly format\n *\n * @returns {SorobanEvent[]}  a list of human-readable event structures, where\n *    each element has the following properties:\n *  - type: a string of one of 'system', 'contract', 'diagnostic\n *  - contractId?: optionally, a `C...` encoded strkey\n *  - topics: a list of {@link scValToNative} invocations on the topics\n *  - data: similarly, a {@link scValToNative} invocation on the raw event data\n */\nexport function humanizeEvents(events) {\n  return events.map((e) => {\n    // A pseudo-instanceof check for xdr.DiagnosticEvent more reliable\n    // in mixed SDK environments:\n    if (e.inSuccessfulContractCall) {\n      return extractEvent(e.event());\n    }\n\n    return extractEvent(e);\n  });\n}\n\nfunction extractEvent(event) {\n  return {\n    ...(typeof event.contractId === 'function' &&\n      event.contractId() != null && {\n        contractId: StrKey.encodeContract(event.contractId())\n      }),\n    type: event.type().name,\n    topics: event\n      .body()\n      .value()\n      .topics()\n      .map((t) => scValToNative(t)),\n    data: scValToNative(event.body().value().data())\n  };\n}\n","import xdr from './xdr';\nimport { hash } from './hashing';\n\nimport { Transaction } from './transaction';\nimport { TransactionBase } from './transaction_base';\nimport { encodeMuxedAccountToAddress } from './util/decode_encode_muxed_account';\n\n/**\n * Use {@link TransactionBuilder.buildFeeBumpTransaction} to build a\n * FeeBumpTransaction object. If you have an object or base64-encoded string of\n * the transaction envelope XDR use {@link TransactionBuilder.fromXDR}.\n *\n * Once a {@link FeeBumpTransaction} has been created, its attributes and operations\n * should not be changed. You should only add signatures (using {@link FeeBumpTransaction#sign}) before\n * submitting to the network or forwarding on to additional signers.\n *\n * @param {string|xdr.TransactionEnvelope} envelope - transaction envelope\n *     object or base64 encoded string.\n * @param {string} networkPassphrase - passphrase of the target Stellar network\n *     (e.g. \"Public Global Stellar Network ; September 2015\").\n *\n * @extends TransactionBase\n */\nexport class FeeBumpTransaction extends TransactionBase {\n  constructor(envelope, networkPassphrase) {\n    if (typeof envelope === 'string') {\n      const buffer = Buffer.from(envelope, 'base64');\n      envelope = xdr.TransactionEnvelope.fromXDR(buffer);\n    }\n\n    const envelopeType = envelope.switch();\n    if (envelopeType !== xdr.EnvelopeType.envelopeTypeTxFeeBump()) {\n      throw new Error(\n        `Invalid TransactionEnvelope: expected an envelopeTypeTxFeeBump but received an ${envelopeType.name}.`\n      );\n    }\n\n    const txEnvelope = envelope.value();\n    const tx = txEnvelope.tx();\n    const fee = tx.fee().toString();\n    // clone signatures\n    const signatures = (txEnvelope.signatures() || []).slice();\n\n    super(tx, signatures, fee, networkPassphrase);\n\n    const innerTxEnvelope = xdr.TransactionEnvelope.envelopeTypeTx(\n      tx.innerTx().v1()\n    );\n    this._feeSource = encodeMuxedAccountToAddress(this.tx.feeSource());\n    this._innerTransaction = new Transaction(\n      innerTxEnvelope,\n      networkPassphrase\n    );\n  }\n\n  /**\n   * @type {Transaction}\n   * @readonly\n   */\n  get innerTransaction() {\n    return this._innerTransaction;\n  }\n\n  /**\n   * @type {Operation[]}\n   * @readonly\n   */\n  get operations() {\n    return this._innerTransaction.operations;\n  }\n\n  /**\n   * @type {string}\n   * @readonly\n   */\n  get feeSource() {\n    return this._feeSource;\n  }\n\n  /**\n   * Returns the \"signature base\" of this transaction, which is the value\n   * that, when hashed, should be signed to create a signature that\n   * validators on the Stellar Network will accept.\n   *\n   * It is composed of a 4 prefix bytes followed by the xdr-encoded form\n   * of this transaction.\n   * @returns {Buffer}\n   */\n  signatureBase() {\n    const taggedTransaction =\n      new xdr.TransactionSignaturePayloadTaggedTransaction.envelopeTypeTxFeeBump(\n        this.tx\n      );\n\n    const txSignature = new xdr.TransactionSignaturePayload({\n      networkId: xdr.Hash.fromXDR(hash(this.networkPassphrase)),\n      taggedTransaction\n    });\n\n    return txSignature.toXDR();\n  }\n\n  /**\n   * To envelope returns a xdr.TransactionEnvelope which can be submitted to the network.\n   * @returns {xdr.TransactionEnvelope}\n   */\n  toEnvelope() {\n    const envelope = new xdr.FeeBumpTransactionEnvelope({\n      tx: xdr.FeeBumpTransaction.fromXDR(this.tx.toXDR()), // make a copy of the tx\n      signatures: this.signatures.slice() // make a copy of the signatures\n    });\n\n    return new xdr.TransactionEnvelope.envelopeTypeTxFeeBump(envelope);\n  }\n}\n","// Automatically generated by xdrgen\n// DO NOT EDIT or your changes may be overwritten\n\n/* jshint maxstatements:2147483647  */\n/* jshint esnext:true  */\n\nimport * as XDR from '@stellar/js-xdr';\n\n\nvar types = XDR.config(xdr => {\n// Workaround for https://github.com/stellar/xdrgen/issues/152\n//\n// The \"correct\" way would be to replace bare instances of each constant with\n// xdr.lookup(\"...\"), but that's more error-prone.\nconst SCSYMBOL_LIMIT = 1312;\nconst SC_SPEC_DOC_LIMIT = 4000;\n\n// === xdr source ============================================================\n//\n//   typedef opaque Value<>;\n//\n// ===========================================================================\nxdr.typedef(\"Value\", xdr.varOpaque());\n\n// === xdr source ============================================================\n//\n//   struct SCPBallot\n//   {\n//       uint32 counter; // n\n//       Value value;    // x\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScpBallot\", [\n  [\"counter\", xdr.lookup(\"Uint32\")],\n  [\"value\", xdr.lookup(\"Value\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum SCPStatementType\n//   {\n//       SCP_ST_PREPARE = 0,\n//       SCP_ST_CONFIRM = 1,\n//       SCP_ST_EXTERNALIZE = 2,\n//       SCP_ST_NOMINATE = 3\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ScpStatementType\", {\n  scpStPrepare: 0,\n  scpStConfirm: 1,\n  scpStExternalize: 2,\n  scpStNominate: 3,\n});\n\n// === xdr source ============================================================\n//\n//   struct SCPNomination\n//   {\n//       Hash quorumSetHash; // D\n//       Value votes<>;      // X\n//       Value accepted<>;   // Y\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScpNomination\", [\n  [\"quorumSetHash\", xdr.lookup(\"Hash\")],\n  [\"votes\", xdr.varArray(xdr.lookup(\"Value\"), 2147483647)],\n  [\"accepted\", xdr.varArray(xdr.lookup(\"Value\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//           {\n//               Hash quorumSetHash;       // D\n//               SCPBallot ballot;         // b\n//               SCPBallot* prepared;      // p\n//               SCPBallot* preparedPrime; // p'\n//               uint32 nC;                // c.n\n//               uint32 nH;                // h.n\n//           }\n//\n// ===========================================================================\nxdr.struct(\"ScpStatementPrepare\", [\n  [\"quorumSetHash\", xdr.lookup(\"Hash\")],\n  [\"ballot\", xdr.lookup(\"ScpBallot\")],\n  [\"prepared\", xdr.option(xdr.lookup(\"ScpBallot\"))],\n  [\"preparedPrime\", xdr.option(xdr.lookup(\"ScpBallot\"))],\n  [\"nC\", xdr.lookup(\"Uint32\")],\n  [\"nH\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//           {\n//               SCPBallot ballot;   // b\n//               uint32 nPrepared;   // p.n\n//               uint32 nCommit;     // c.n\n//               uint32 nH;          // h.n\n//               Hash quorumSetHash; // D\n//           }\n//\n// ===========================================================================\nxdr.struct(\"ScpStatementConfirm\", [\n  [\"ballot\", xdr.lookup(\"ScpBallot\")],\n  [\"nPrepared\", xdr.lookup(\"Uint32\")],\n  [\"nCommit\", xdr.lookup(\"Uint32\")],\n  [\"nH\", xdr.lookup(\"Uint32\")],\n  [\"quorumSetHash\", xdr.lookup(\"Hash\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//           {\n//               SCPBallot commit;         // c\n//               uint32 nH;                // h.n\n//               Hash commitQuorumSetHash; // D used before EXTERNALIZE\n//           }\n//\n// ===========================================================================\nxdr.struct(\"ScpStatementExternalize\", [\n  [\"commit\", xdr.lookup(\"ScpBallot\")],\n  [\"nH\", xdr.lookup(\"Uint32\")],\n  [\"commitQuorumSetHash\", xdr.lookup(\"Hash\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (SCPStatementType type)\n//       {\n//       case SCP_ST_PREPARE:\n//           struct\n//           {\n//               Hash quorumSetHash;       // D\n//               SCPBallot ballot;         // b\n//               SCPBallot* prepared;      // p\n//               SCPBallot* preparedPrime; // p'\n//               uint32 nC;                // c.n\n//               uint32 nH;                // h.n\n//           } prepare;\n//       case SCP_ST_CONFIRM:\n//           struct\n//           {\n//               SCPBallot ballot;   // b\n//               uint32 nPrepared;   // p.n\n//               uint32 nCommit;     // c.n\n//               uint32 nH;          // h.n\n//               Hash quorumSetHash; // D\n//           } confirm;\n//       case SCP_ST_EXTERNALIZE:\n//           struct\n//           {\n//               SCPBallot commit;         // c\n//               uint32 nH;                // h.n\n//               Hash commitQuorumSetHash; // D used before EXTERNALIZE\n//           } externalize;\n//       case SCP_ST_NOMINATE:\n//           SCPNomination nominate;\n//       }\n//\n// ===========================================================================\nxdr.union(\"ScpStatementPledges\", {\n  switchOn: xdr.lookup(\"ScpStatementType\"),\n  switchName: \"type\",\n  switches: [\n    [\"scpStPrepare\", \"prepare\"],\n    [\"scpStConfirm\", \"confirm\"],\n    [\"scpStExternalize\", \"externalize\"],\n    [\"scpStNominate\", \"nominate\"],\n  ],\n  arms: {\n    prepare: xdr.lookup(\"ScpStatementPrepare\"),\n    confirm: xdr.lookup(\"ScpStatementConfirm\"),\n    externalize: xdr.lookup(\"ScpStatementExternalize\"),\n    nominate: xdr.lookup(\"ScpNomination\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct SCPStatement\n//   {\n//       NodeID nodeID;    // v\n//       uint64 slotIndex; // i\n//   \n//       union switch (SCPStatementType type)\n//       {\n//       case SCP_ST_PREPARE:\n//           struct\n//           {\n//               Hash quorumSetHash;       // D\n//               SCPBallot ballot;         // b\n//               SCPBallot* prepared;      // p\n//               SCPBallot* preparedPrime; // p'\n//               uint32 nC;                // c.n\n//               uint32 nH;                // h.n\n//           } prepare;\n//       case SCP_ST_CONFIRM:\n//           struct\n//           {\n//               SCPBallot ballot;   // b\n//               uint32 nPrepared;   // p.n\n//               uint32 nCommit;     // c.n\n//               uint32 nH;          // h.n\n//               Hash quorumSetHash; // D\n//           } confirm;\n//       case SCP_ST_EXTERNALIZE:\n//           struct\n//           {\n//               SCPBallot commit;         // c\n//               uint32 nH;                // h.n\n//               Hash commitQuorumSetHash; // D used before EXTERNALIZE\n//           } externalize;\n//       case SCP_ST_NOMINATE:\n//           SCPNomination nominate;\n//       }\n//       pledges;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScpStatement\", [\n  [\"nodeId\", xdr.lookup(\"NodeId\")],\n  [\"slotIndex\", xdr.lookup(\"Uint64\")],\n  [\"pledges\", xdr.lookup(\"ScpStatementPledges\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SCPEnvelope\n//   {\n//       SCPStatement statement;\n//       Signature signature;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScpEnvelope\", [\n  [\"statement\", xdr.lookup(\"ScpStatement\")],\n  [\"signature\", xdr.lookup(\"Signature\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SCPQuorumSet\n//   {\n//       uint32 threshold;\n//       NodeID validators<>;\n//       SCPQuorumSet innerSets<>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScpQuorumSet\", [\n  [\"threshold\", xdr.lookup(\"Uint32\")],\n  [\"validators\", xdr.varArray(xdr.lookup(\"NodeId\"), 2147483647)],\n  [\"innerSets\", xdr.varArray(xdr.lookup(\"ScpQuorumSet\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   typedef opaque Thresholds[4];\n//\n// ===========================================================================\nxdr.typedef(\"Thresholds\", xdr.opaque(4));\n\n// === xdr source ============================================================\n//\n//   typedef string string32<32>;\n//\n// ===========================================================================\nxdr.typedef(\"String32\", xdr.string(32));\n\n// === xdr source ============================================================\n//\n//   typedef string string64<64>;\n//\n// ===========================================================================\nxdr.typedef(\"String64\", xdr.string(64));\n\n// === xdr source ============================================================\n//\n//   typedef int64 SequenceNumber;\n//\n// ===========================================================================\nxdr.typedef(\"SequenceNumber\", xdr.lookup(\"Int64\"));\n\n// === xdr source ============================================================\n//\n//   typedef opaque DataValue<64>;\n//\n// ===========================================================================\nxdr.typedef(\"DataValue\", xdr.varOpaque(64));\n\n// === xdr source ============================================================\n//\n//   typedef Hash PoolID;\n//\n// ===========================================================================\nxdr.typedef(\"PoolId\", xdr.lookup(\"Hash\"));\n\n// === xdr source ============================================================\n//\n//   typedef opaque AssetCode4[4];\n//\n// ===========================================================================\nxdr.typedef(\"AssetCode4\", xdr.opaque(4));\n\n// === xdr source ============================================================\n//\n//   typedef opaque AssetCode12[12];\n//\n// ===========================================================================\nxdr.typedef(\"AssetCode12\", xdr.opaque(12));\n\n// === xdr source ============================================================\n//\n//   enum AssetType\n//   {\n//       ASSET_TYPE_NATIVE = 0,\n//       ASSET_TYPE_CREDIT_ALPHANUM4 = 1,\n//       ASSET_TYPE_CREDIT_ALPHANUM12 = 2,\n//       ASSET_TYPE_POOL_SHARE = 3\n//   };\n//\n// ===========================================================================\nxdr.enum(\"AssetType\", {\n  assetTypeNative: 0,\n  assetTypeCreditAlphanum4: 1,\n  assetTypeCreditAlphanum12: 2,\n  assetTypePoolShare: 3,\n});\n\n// === xdr source ============================================================\n//\n//   union AssetCode switch (AssetType type)\n//   {\n//   case ASSET_TYPE_CREDIT_ALPHANUM4:\n//       AssetCode4 assetCode4;\n//   \n//   case ASSET_TYPE_CREDIT_ALPHANUM12:\n//       AssetCode12 assetCode12;\n//   \n//       // add other asset types here in the future\n//   };\n//\n// ===========================================================================\nxdr.union(\"AssetCode\", {\n  switchOn: xdr.lookup(\"AssetType\"),\n  switchName: \"type\",\n  switches: [\n    [\"assetTypeCreditAlphanum4\", \"assetCode4\"],\n    [\"assetTypeCreditAlphanum12\", \"assetCode12\"],\n  ],\n  arms: {\n    assetCode4: xdr.lookup(\"AssetCode4\"),\n    assetCode12: xdr.lookup(\"AssetCode12\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct AlphaNum4\n//   {\n//       AssetCode4 assetCode;\n//       AccountID issuer;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"AlphaNum4\", [\n  [\"assetCode\", xdr.lookup(\"AssetCode4\")],\n  [\"issuer\", xdr.lookup(\"AccountId\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct AlphaNum12\n//   {\n//       AssetCode12 assetCode;\n//       AccountID issuer;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"AlphaNum12\", [\n  [\"assetCode\", xdr.lookup(\"AssetCode12\")],\n  [\"issuer\", xdr.lookup(\"AccountId\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union Asset switch (AssetType type)\n//   {\n//   case ASSET_TYPE_NATIVE: // Not credit\n//       void;\n//   \n//   case ASSET_TYPE_CREDIT_ALPHANUM4:\n//       AlphaNum4 alphaNum4;\n//   \n//   case ASSET_TYPE_CREDIT_ALPHANUM12:\n//       AlphaNum12 alphaNum12;\n//   \n//       // add other asset types here in the future\n//   };\n//\n// ===========================================================================\nxdr.union(\"Asset\", {\n  switchOn: xdr.lookup(\"AssetType\"),\n  switchName: \"type\",\n  switches: [\n    [\"assetTypeNative\", xdr.void()],\n    [\"assetTypeCreditAlphanum4\", \"alphaNum4\"],\n    [\"assetTypeCreditAlphanum12\", \"alphaNum12\"],\n  ],\n  arms: {\n    alphaNum4: xdr.lookup(\"AlphaNum4\"),\n    alphaNum12: xdr.lookup(\"AlphaNum12\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct Price\n//   {\n//       int32 n; // numerator\n//       int32 d; // denominator\n//   };\n//\n// ===========================================================================\nxdr.struct(\"Price\", [\n  [\"n\", xdr.lookup(\"Int32\")],\n  [\"d\", xdr.lookup(\"Int32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct Liabilities\n//   {\n//       int64 buying;\n//       int64 selling;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"Liabilities\", [\n  [\"buying\", xdr.lookup(\"Int64\")],\n  [\"selling\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum ThresholdIndexes\n//   {\n//       THRESHOLD_MASTER_WEIGHT = 0,\n//       THRESHOLD_LOW = 1,\n//       THRESHOLD_MED = 2,\n//       THRESHOLD_HIGH = 3\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ThresholdIndices\", {\n  thresholdMasterWeight: 0,\n  thresholdLow: 1,\n  thresholdMed: 2,\n  thresholdHigh: 3,\n});\n\n// === xdr source ============================================================\n//\n//   enum LedgerEntryType\n//   {\n//       ACCOUNT = 0,\n//       TRUSTLINE = 1,\n//       OFFER = 2,\n//       DATA = 3,\n//       CLAIMABLE_BALANCE = 4,\n//       LIQUIDITY_POOL = 5,\n//       CONTRACT_DATA = 6,\n//       CONTRACT_CODE = 7,\n//       CONFIG_SETTING = 8,\n//       TTL = 9\n//   };\n//\n// ===========================================================================\nxdr.enum(\"LedgerEntryType\", {\n  account: 0,\n  trustline: 1,\n  offer: 2,\n  data: 3,\n  claimableBalance: 4,\n  liquidityPool: 5,\n  contractData: 6,\n  contractCode: 7,\n  configSetting: 8,\n  ttl: 9,\n});\n\n// === xdr source ============================================================\n//\n//   struct Signer\n//   {\n//       SignerKey key;\n//       uint32 weight; // really only need 1 byte\n//   };\n//\n// ===========================================================================\nxdr.struct(\"Signer\", [\n  [\"key\", xdr.lookup(\"SignerKey\")],\n  [\"weight\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum AccountFlags\n//   { // masks for each flag\n//   \n//       // Flags set on issuer accounts\n//       // TrustLines are created with authorized set to \"false\" requiring\n//       // the issuer to set it for each TrustLine\n//       AUTH_REQUIRED_FLAG = 0x1,\n//       // If set, the authorized flag in TrustLines can be cleared\n//       // otherwise, authorization cannot be revoked\n//       AUTH_REVOCABLE_FLAG = 0x2,\n//       // Once set, causes all AUTH_* flags to be read-only\n//       AUTH_IMMUTABLE_FLAG = 0x4,\n//       // Trustlines are created with clawback enabled set to \"true\",\n//       // and claimable balances created from those trustlines are created\n//       // with clawback enabled set to \"true\"\n//       AUTH_CLAWBACK_ENABLED_FLAG = 0x8\n//   };\n//\n// ===========================================================================\nxdr.enum(\"AccountFlags\", {\n  authRequiredFlag: 1,\n  authRevocableFlag: 2,\n  authImmutableFlag: 4,\n  authClawbackEnabledFlag: 8,\n});\n\n// === xdr source ============================================================\n//\n//   const MASK_ACCOUNT_FLAGS = 0x7;\n//\n// ===========================================================================\nxdr.const(\"MASK_ACCOUNT_FLAGS\", 0x7);\n\n// === xdr source ============================================================\n//\n//   const MASK_ACCOUNT_FLAGS_V17 = 0xF;\n//\n// ===========================================================================\nxdr.const(\"MASK_ACCOUNT_FLAGS_V17\", 0xF);\n\n// === xdr source ============================================================\n//\n//   const MAX_SIGNERS = 20;\n//\n// ===========================================================================\nxdr.const(\"MAX_SIGNERS\", 20);\n\n// === xdr source ============================================================\n//\n//   typedef AccountID* SponsorshipDescriptor;\n//\n// ===========================================================================\nxdr.typedef(\"SponsorshipDescriptor\", xdr.option(xdr.lookup(\"AccountId\")));\n\n// === xdr source ============================================================\n//\n//   struct AccountEntryExtensionV3\n//   {\n//       // We can use this to add more fields, or because it is first, to\n//       // change AccountEntryExtensionV3 into a union.\n//       ExtensionPoint ext;\n//   \n//       // Ledger number at which `seqNum` took on its present value.\n//       uint32 seqLedger;\n//   \n//       // Time at which `seqNum` took on its present value.\n//       TimePoint seqTime;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"AccountEntryExtensionV3\", [\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\n  [\"seqLedger\", xdr.lookup(\"Uint32\")],\n  [\"seqTime\", xdr.lookup(\"TimePoint\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 3:\n//           AccountEntryExtensionV3 v3;\n//       }\n//\n// ===========================================================================\nxdr.union(\"AccountEntryExtensionV2Ext\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n    [3, \"v3\"],\n  ],\n  arms: {\n    v3: xdr.lookup(\"AccountEntryExtensionV3\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct AccountEntryExtensionV2\n//   {\n//       uint32 numSponsored;\n//       uint32 numSponsoring;\n//       SponsorshipDescriptor signerSponsoringIDs<MAX_SIGNERS>;\n//   \n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 3:\n//           AccountEntryExtensionV3 v3;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"AccountEntryExtensionV2\", [\n  [\"numSponsored\", xdr.lookup(\"Uint32\")],\n  [\"numSponsoring\", xdr.lookup(\"Uint32\")],\n  [\"signerSponsoringIDs\", xdr.varArray(xdr.lookup(\"SponsorshipDescriptor\"), xdr.lookup(\"MAX_SIGNERS\"))],\n  [\"ext\", xdr.lookup(\"AccountEntryExtensionV2Ext\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 2:\n//           AccountEntryExtensionV2 v2;\n//       }\n//\n// ===========================================================================\nxdr.union(\"AccountEntryExtensionV1Ext\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n    [2, \"v2\"],\n  ],\n  arms: {\n    v2: xdr.lookup(\"AccountEntryExtensionV2\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct AccountEntryExtensionV1\n//   {\n//       Liabilities liabilities;\n//   \n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 2:\n//           AccountEntryExtensionV2 v2;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"AccountEntryExtensionV1\", [\n  [\"liabilities\", xdr.lookup(\"Liabilities\")],\n  [\"ext\", xdr.lookup(\"AccountEntryExtensionV1Ext\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           AccountEntryExtensionV1 v1;\n//       }\n//\n// ===========================================================================\nxdr.union(\"AccountEntryExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n    [1, \"v1\"],\n  ],\n  arms: {\n    v1: xdr.lookup(\"AccountEntryExtensionV1\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct AccountEntry\n//   {\n//       AccountID accountID;      // master public key for this account\n//       int64 balance;            // in stroops\n//       SequenceNumber seqNum;    // last sequence number used for this account\n//       uint32 numSubEntries;     // number of sub-entries this account has\n//                                 // drives the reserve\n//       AccountID* inflationDest; // Account to vote for during inflation\n//       uint32 flags;             // see AccountFlags\n//   \n//       string32 homeDomain; // can be used for reverse federation and memo lookup\n//   \n//       // fields used for signatures\n//       // thresholds stores unsigned bytes: [weight of master|low|medium|high]\n//       Thresholds thresholds;\n//   \n//       Signer signers<MAX_SIGNERS>; // possible signers for this account\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           AccountEntryExtensionV1 v1;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"AccountEntry\", [\n  [\"accountId\", xdr.lookup(\"AccountId\")],\n  [\"balance\", xdr.lookup(\"Int64\")],\n  [\"seqNum\", xdr.lookup(\"SequenceNumber\")],\n  [\"numSubEntries\", xdr.lookup(\"Uint32\")],\n  [\"inflationDest\", xdr.option(xdr.lookup(\"AccountId\"))],\n  [\"flags\", xdr.lookup(\"Uint32\")],\n  [\"homeDomain\", xdr.lookup(\"String32\")],\n  [\"thresholds\", xdr.lookup(\"Thresholds\")],\n  [\"signers\", xdr.varArray(xdr.lookup(\"Signer\"), xdr.lookup(\"MAX_SIGNERS\"))],\n  [\"ext\", xdr.lookup(\"AccountEntryExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum TrustLineFlags\n//   {\n//       // issuer has authorized account to perform transactions with its credit\n//       AUTHORIZED_FLAG = 1,\n//       // issuer has authorized account to maintain and reduce liabilities for its\n//       // credit\n//       AUTHORIZED_TO_MAINTAIN_LIABILITIES_FLAG = 2,\n//       // issuer has specified that it may clawback its credit, and that claimable\n//       // balances created with its credit may also be clawed back\n//       TRUSTLINE_CLAWBACK_ENABLED_FLAG = 4\n//   };\n//\n// ===========================================================================\nxdr.enum(\"TrustLineFlags\", {\n  authorizedFlag: 1,\n  authorizedToMaintainLiabilitiesFlag: 2,\n  trustlineClawbackEnabledFlag: 4,\n});\n\n// === xdr source ============================================================\n//\n//   const MASK_TRUSTLINE_FLAGS = 1;\n//\n// ===========================================================================\nxdr.const(\"MASK_TRUSTLINE_FLAGS\", 1);\n\n// === xdr source ============================================================\n//\n//   const MASK_TRUSTLINE_FLAGS_V13 = 3;\n//\n// ===========================================================================\nxdr.const(\"MASK_TRUSTLINE_FLAGS_V13\", 3);\n\n// === xdr source ============================================================\n//\n//   const MASK_TRUSTLINE_FLAGS_V17 = 7;\n//\n// ===========================================================================\nxdr.const(\"MASK_TRUSTLINE_FLAGS_V17\", 7);\n\n// === xdr source ============================================================\n//\n//   enum LiquidityPoolType\n//   {\n//       LIQUIDITY_POOL_CONSTANT_PRODUCT = 0\n//   };\n//\n// ===========================================================================\nxdr.enum(\"LiquidityPoolType\", {\n  liquidityPoolConstantProduct: 0,\n});\n\n// === xdr source ============================================================\n//\n//   union TrustLineAsset switch (AssetType type)\n//   {\n//   case ASSET_TYPE_NATIVE: // Not credit\n//       void;\n//   \n//   case ASSET_TYPE_CREDIT_ALPHANUM4:\n//       AlphaNum4 alphaNum4;\n//   \n//   case ASSET_TYPE_CREDIT_ALPHANUM12:\n//       AlphaNum12 alphaNum12;\n//   \n//   case ASSET_TYPE_POOL_SHARE:\n//       PoolID liquidityPoolID;\n//   \n//       // add other asset types here in the future\n//   };\n//\n// ===========================================================================\nxdr.union(\"TrustLineAsset\", {\n  switchOn: xdr.lookup(\"AssetType\"),\n  switchName: \"type\",\n  switches: [\n    [\"assetTypeNative\", xdr.void()],\n    [\"assetTypeCreditAlphanum4\", \"alphaNum4\"],\n    [\"assetTypeCreditAlphanum12\", \"alphaNum12\"],\n    [\"assetTypePoolShare\", \"liquidityPoolId\"],\n  ],\n  arms: {\n    alphaNum4: xdr.lookup(\"AlphaNum4\"),\n    alphaNum12: xdr.lookup(\"AlphaNum12\"),\n    liquidityPoolId: xdr.lookup(\"PoolId\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"TrustLineEntryExtensionV2Ext\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct TrustLineEntryExtensionV2\n//   {\n//       int32 liquidityPoolUseCount;\n//   \n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TrustLineEntryExtensionV2\", [\n  [\"liquidityPoolUseCount\", xdr.lookup(\"Int32\")],\n  [\"ext\", xdr.lookup(\"TrustLineEntryExtensionV2Ext\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//               {\n//               case 0:\n//                   void;\n//               case 2:\n//                   TrustLineEntryExtensionV2 v2;\n//               }\n//\n// ===========================================================================\nxdr.union(\"TrustLineEntryV1Ext\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n    [2, \"v2\"],\n  ],\n  arms: {\n    v2: xdr.lookup(\"TrustLineEntryExtensionV2\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct\n//           {\n//               Liabilities liabilities;\n//   \n//               union switch (int v)\n//               {\n//               case 0:\n//                   void;\n//               case 2:\n//                   TrustLineEntryExtensionV2 v2;\n//               }\n//               ext;\n//           }\n//\n// ===========================================================================\nxdr.struct(\"TrustLineEntryV1\", [\n  [\"liabilities\", xdr.lookup(\"Liabilities\")],\n  [\"ext\", xdr.lookup(\"TrustLineEntryV1Ext\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           struct\n//           {\n//               Liabilities liabilities;\n//   \n//               union switch (int v)\n//               {\n//               case 0:\n//                   void;\n//               case 2:\n//                   TrustLineEntryExtensionV2 v2;\n//               }\n//               ext;\n//           } v1;\n//       }\n//\n// ===========================================================================\nxdr.union(\"TrustLineEntryExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n    [1, \"v1\"],\n  ],\n  arms: {\n    v1: xdr.lookup(\"TrustLineEntryV1\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct TrustLineEntry\n//   {\n//       AccountID accountID;  // account this trustline belongs to\n//       TrustLineAsset asset; // type of asset (with issuer)\n//       int64 balance;        // how much of this asset the user has.\n//                             // Asset defines the unit for this;\n//   \n//       int64 limit;  // balance cannot be above this\n//       uint32 flags; // see TrustLineFlags\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           struct\n//           {\n//               Liabilities liabilities;\n//   \n//               union switch (int v)\n//               {\n//               case 0:\n//                   void;\n//               case 2:\n//                   TrustLineEntryExtensionV2 v2;\n//               }\n//               ext;\n//           } v1;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TrustLineEntry\", [\n  [\"accountId\", xdr.lookup(\"AccountId\")],\n  [\"asset\", xdr.lookup(\"TrustLineAsset\")],\n  [\"balance\", xdr.lookup(\"Int64\")],\n  [\"limit\", xdr.lookup(\"Int64\")],\n  [\"flags\", xdr.lookup(\"Uint32\")],\n  [\"ext\", xdr.lookup(\"TrustLineEntryExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum OfferEntryFlags\n//   {\n//       // an offer with this flag will not act on and take a reverse offer of equal\n//       // price\n//       PASSIVE_FLAG = 1\n//   };\n//\n// ===========================================================================\nxdr.enum(\"OfferEntryFlags\", {\n  passiveFlag: 1,\n});\n\n// === xdr source ============================================================\n//\n//   const MASK_OFFERENTRY_FLAGS = 1;\n//\n// ===========================================================================\nxdr.const(\"MASK_OFFERENTRY_FLAGS\", 1);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"OfferEntryExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct OfferEntry\n//   {\n//       AccountID sellerID;\n//       int64 offerID;\n//       Asset selling; // A\n//       Asset buying;  // B\n//       int64 amount;  // amount of A\n//   \n//       /* price for this offer:\n//           price of A in terms of B\n//           price=AmountB/AmountA=priceNumerator/priceDenominator\n//           price is after fees\n//       */\n//       Price price;\n//       uint32 flags; // see OfferEntryFlags\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"OfferEntry\", [\n  [\"sellerId\", xdr.lookup(\"AccountId\")],\n  [\"offerId\", xdr.lookup(\"Int64\")],\n  [\"selling\", xdr.lookup(\"Asset\")],\n  [\"buying\", xdr.lookup(\"Asset\")],\n  [\"amount\", xdr.lookup(\"Int64\")],\n  [\"price\", xdr.lookup(\"Price\")],\n  [\"flags\", xdr.lookup(\"Uint32\")],\n  [\"ext\", xdr.lookup(\"OfferEntryExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"DataEntryExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct DataEntry\n//   {\n//       AccountID accountID; // account this data belongs to\n//       string64 dataName;\n//       DataValue dataValue;\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"DataEntry\", [\n  [\"accountId\", xdr.lookup(\"AccountId\")],\n  [\"dataName\", xdr.lookup(\"String64\")],\n  [\"dataValue\", xdr.lookup(\"DataValue\")],\n  [\"ext\", xdr.lookup(\"DataEntryExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum ClaimPredicateType\n//   {\n//       CLAIM_PREDICATE_UNCONDITIONAL = 0,\n//       CLAIM_PREDICATE_AND = 1,\n//       CLAIM_PREDICATE_OR = 2,\n//       CLAIM_PREDICATE_NOT = 3,\n//       CLAIM_PREDICATE_BEFORE_ABSOLUTE_TIME = 4,\n//       CLAIM_PREDICATE_BEFORE_RELATIVE_TIME = 5\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ClaimPredicateType\", {\n  claimPredicateUnconditional: 0,\n  claimPredicateAnd: 1,\n  claimPredicateOr: 2,\n  claimPredicateNot: 3,\n  claimPredicateBeforeAbsoluteTime: 4,\n  claimPredicateBeforeRelativeTime: 5,\n});\n\n// === xdr source ============================================================\n//\n//   union ClaimPredicate switch (ClaimPredicateType type)\n//   {\n//   case CLAIM_PREDICATE_UNCONDITIONAL:\n//       void;\n//   case CLAIM_PREDICATE_AND:\n//       ClaimPredicate andPredicates<2>;\n//   case CLAIM_PREDICATE_OR:\n//       ClaimPredicate orPredicates<2>;\n//   case CLAIM_PREDICATE_NOT:\n//       ClaimPredicate* notPredicate;\n//   case CLAIM_PREDICATE_BEFORE_ABSOLUTE_TIME:\n//       int64 absBefore; // Predicate will be true if closeTime < absBefore\n//   case CLAIM_PREDICATE_BEFORE_RELATIVE_TIME:\n//       int64 relBefore; // Seconds since closeTime of the ledger in which the\n//                        // ClaimableBalanceEntry was created\n//   };\n//\n// ===========================================================================\nxdr.union(\"ClaimPredicate\", {\n  switchOn: xdr.lookup(\"ClaimPredicateType\"),\n  switchName: \"type\",\n  switches: [\n    [\"claimPredicateUnconditional\", xdr.void()],\n    [\"claimPredicateAnd\", \"andPredicates\"],\n    [\"claimPredicateOr\", \"orPredicates\"],\n    [\"claimPredicateNot\", \"notPredicate\"],\n    [\"claimPredicateBeforeAbsoluteTime\", \"absBefore\"],\n    [\"claimPredicateBeforeRelativeTime\", \"relBefore\"],\n  ],\n  arms: {\n    andPredicates: xdr.varArray(xdr.lookup(\"ClaimPredicate\"), 2),\n    orPredicates: xdr.varArray(xdr.lookup(\"ClaimPredicate\"), 2),\n    notPredicate: xdr.option(xdr.lookup(\"ClaimPredicate\")),\n    absBefore: xdr.lookup(\"Int64\"),\n    relBefore: xdr.lookup(\"Int64\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum ClaimantType\n//   {\n//       CLAIMANT_TYPE_V0 = 0\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ClaimantType\", {\n  claimantTypeV0: 0,\n});\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           AccountID destination;    // The account that can use this condition\n//           ClaimPredicate predicate; // Claimable if predicate is true\n//       }\n//\n// ===========================================================================\nxdr.struct(\"ClaimantV0\", [\n  [\"destination\", xdr.lookup(\"AccountId\")],\n  [\"predicate\", xdr.lookup(\"ClaimPredicate\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union Claimant switch (ClaimantType type)\n//   {\n//   case CLAIMANT_TYPE_V0:\n//       struct\n//       {\n//           AccountID destination;    // The account that can use this condition\n//           ClaimPredicate predicate; // Claimable if predicate is true\n//       } v0;\n//   };\n//\n// ===========================================================================\nxdr.union(\"Claimant\", {\n  switchOn: xdr.lookup(\"ClaimantType\"),\n  switchName: \"type\",\n  switches: [\n    [\"claimantTypeV0\", \"v0\"],\n  ],\n  arms: {\n    v0: xdr.lookup(\"ClaimantV0\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum ClaimableBalanceIDType\n//   {\n//       CLAIMABLE_BALANCE_ID_TYPE_V0 = 0\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ClaimableBalanceIdType\", {\n  claimableBalanceIdTypeV0: 0,\n});\n\n// === xdr source ============================================================\n//\n//   union ClaimableBalanceID switch (ClaimableBalanceIDType type)\n//   {\n//   case CLAIMABLE_BALANCE_ID_TYPE_V0:\n//       Hash v0;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ClaimableBalanceId\", {\n  switchOn: xdr.lookup(\"ClaimableBalanceIdType\"),\n  switchName: \"type\",\n  switches: [\n    [\"claimableBalanceIdTypeV0\", \"v0\"],\n  ],\n  arms: {\n    v0: xdr.lookup(\"Hash\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum ClaimableBalanceFlags\n//   {\n//       // If set, the issuer account of the asset held by the claimable balance may\n//       // clawback the claimable balance\n//       CLAIMABLE_BALANCE_CLAWBACK_ENABLED_FLAG = 0x1\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ClaimableBalanceFlags\", {\n  claimableBalanceClawbackEnabledFlag: 1,\n});\n\n// === xdr source ============================================================\n//\n//   const MASK_CLAIMABLE_BALANCE_FLAGS = 0x1;\n//\n// ===========================================================================\nxdr.const(\"MASK_CLAIMABLE_BALANCE_FLAGS\", 0x1);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"ClaimableBalanceEntryExtensionV1Ext\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct ClaimableBalanceEntryExtensionV1\n//   {\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   \n//       uint32 flags; // see ClaimableBalanceFlags\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ClaimableBalanceEntryExtensionV1\", [\n  [\"ext\", xdr.lookup(\"ClaimableBalanceEntryExtensionV1Ext\")],\n  [\"flags\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           ClaimableBalanceEntryExtensionV1 v1;\n//       }\n//\n// ===========================================================================\nxdr.union(\"ClaimableBalanceEntryExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n    [1, \"v1\"],\n  ],\n  arms: {\n    v1: xdr.lookup(\"ClaimableBalanceEntryExtensionV1\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct ClaimableBalanceEntry\n//   {\n//       // Unique identifier for this ClaimableBalanceEntry\n//       ClaimableBalanceID balanceID;\n//   \n//       // List of claimants with associated predicate\n//       Claimant claimants<10>;\n//   \n//       // Any asset including native\n//       Asset asset;\n//   \n//       // Amount of asset\n//       int64 amount;\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           ClaimableBalanceEntryExtensionV1 v1;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ClaimableBalanceEntry\", [\n  [\"balanceId\", xdr.lookup(\"ClaimableBalanceId\")],\n  [\"claimants\", xdr.varArray(xdr.lookup(\"Claimant\"), 10)],\n  [\"asset\", xdr.lookup(\"Asset\")],\n  [\"amount\", xdr.lookup(\"Int64\")],\n  [\"ext\", xdr.lookup(\"ClaimableBalanceEntryExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct LiquidityPoolConstantProductParameters\n//   {\n//       Asset assetA; // assetA < assetB\n//       Asset assetB;\n//       int32 fee; // Fee is in basis points, so the actual rate is (fee/100)%\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LiquidityPoolConstantProductParameters\", [\n  [\"assetA\", xdr.lookup(\"Asset\")],\n  [\"assetB\", xdr.lookup(\"Asset\")],\n  [\"fee\", xdr.lookup(\"Int32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//           {\n//               LiquidityPoolConstantProductParameters params;\n//   \n//               int64 reserveA;        // amount of A in the pool\n//               int64 reserveB;        // amount of B in the pool\n//               int64 totalPoolShares; // total number of pool shares issued\n//               int64 poolSharesTrustLineCount; // number of trust lines for the\n//                                               // associated pool shares\n//           }\n//\n// ===========================================================================\nxdr.struct(\"LiquidityPoolEntryConstantProduct\", [\n  [\"params\", xdr.lookup(\"LiquidityPoolConstantProductParameters\")],\n  [\"reserveA\", xdr.lookup(\"Int64\")],\n  [\"reserveB\", xdr.lookup(\"Int64\")],\n  [\"totalPoolShares\", xdr.lookup(\"Int64\")],\n  [\"poolSharesTrustLineCount\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (LiquidityPoolType type)\n//       {\n//       case LIQUIDITY_POOL_CONSTANT_PRODUCT:\n//           struct\n//           {\n//               LiquidityPoolConstantProductParameters params;\n//   \n//               int64 reserveA;        // amount of A in the pool\n//               int64 reserveB;        // amount of B in the pool\n//               int64 totalPoolShares; // total number of pool shares issued\n//               int64 poolSharesTrustLineCount; // number of trust lines for the\n//                                               // associated pool shares\n//           } constantProduct;\n//       }\n//\n// ===========================================================================\nxdr.union(\"LiquidityPoolEntryBody\", {\n  switchOn: xdr.lookup(\"LiquidityPoolType\"),\n  switchName: \"type\",\n  switches: [\n    [\"liquidityPoolConstantProduct\", \"constantProduct\"],\n  ],\n  arms: {\n    constantProduct: xdr.lookup(\"LiquidityPoolEntryConstantProduct\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct LiquidityPoolEntry\n//   {\n//       PoolID liquidityPoolID;\n//   \n//       union switch (LiquidityPoolType type)\n//       {\n//       case LIQUIDITY_POOL_CONSTANT_PRODUCT:\n//           struct\n//           {\n//               LiquidityPoolConstantProductParameters params;\n//   \n//               int64 reserveA;        // amount of A in the pool\n//               int64 reserveB;        // amount of B in the pool\n//               int64 totalPoolShares; // total number of pool shares issued\n//               int64 poolSharesTrustLineCount; // number of trust lines for the\n//                                               // associated pool shares\n//           } constantProduct;\n//       }\n//       body;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LiquidityPoolEntry\", [\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\n  [\"body\", xdr.lookup(\"LiquidityPoolEntryBody\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum ContractDataDurability {\n//       TEMPORARY = 0,\n//       PERSISTENT = 1\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ContractDataDurability\", {\n  temporary: 0,\n  persistent: 1,\n});\n\n// === xdr source ============================================================\n//\n//   struct ContractDataEntry {\n//       ExtensionPoint ext;\n//   \n//       SCAddress contract;\n//       SCVal key;\n//       ContractDataDurability durability;\n//       SCVal val;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ContractDataEntry\", [\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\n  [\"contract\", xdr.lookup(\"ScAddress\")],\n  [\"key\", xdr.lookup(\"ScVal\")],\n  [\"durability\", xdr.lookup(\"ContractDataDurability\")],\n  [\"val\", xdr.lookup(\"ScVal\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct ContractCodeCostInputs {\n//       ExtensionPoint ext;\n//       uint32 nInstructions;\n//       uint32 nFunctions;\n//       uint32 nGlobals;\n//       uint32 nTableEntries;\n//       uint32 nTypes;\n//       uint32 nDataSegments;\n//       uint32 nElemSegments;\n//       uint32 nImports;\n//       uint32 nExports;\n//       uint32 nDataSegmentBytes;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ContractCodeCostInputs\", [\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\n  [\"nInstructions\", xdr.lookup(\"Uint32\")],\n  [\"nFunctions\", xdr.lookup(\"Uint32\")],\n  [\"nGlobals\", xdr.lookup(\"Uint32\")],\n  [\"nTableEntries\", xdr.lookup(\"Uint32\")],\n  [\"nTypes\", xdr.lookup(\"Uint32\")],\n  [\"nDataSegments\", xdr.lookup(\"Uint32\")],\n  [\"nElemSegments\", xdr.lookup(\"Uint32\")],\n  [\"nImports\", xdr.lookup(\"Uint32\")],\n  [\"nExports\", xdr.lookup(\"Uint32\")],\n  [\"nDataSegmentBytes\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//               {\n//                   ExtensionPoint ext;\n//                   ContractCodeCostInputs costInputs;\n//               }\n//\n// ===========================================================================\nxdr.struct(\"ContractCodeEntryV1\", [\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\n  [\"costInputs\", xdr.lookup(\"ContractCodeCostInputs\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//           case 0:\n//               void;\n//           case 1:\n//               struct\n//               {\n//                   ExtensionPoint ext;\n//                   ContractCodeCostInputs costInputs;\n//               } v1;\n//       }\n//\n// ===========================================================================\nxdr.union(\"ContractCodeEntryExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n    [1, \"v1\"],\n  ],\n  arms: {\n    v1: xdr.lookup(\"ContractCodeEntryV1\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct ContractCodeEntry {\n//       union switch (int v)\n//       {\n//           case 0:\n//               void;\n//           case 1:\n//               struct\n//               {\n//                   ExtensionPoint ext;\n//                   ContractCodeCostInputs costInputs;\n//               } v1;\n//       } ext;\n//   \n//       Hash hash;\n//       opaque code<>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ContractCodeEntry\", [\n  [\"ext\", xdr.lookup(\"ContractCodeEntryExt\")],\n  [\"hash\", xdr.lookup(\"Hash\")],\n  [\"code\", xdr.varOpaque()],\n]);\n\n// === xdr source ============================================================\n//\n//   struct TTLEntry {\n//       // Hash of the LedgerKey that is associated with this TTLEntry\n//       Hash keyHash;\n//       uint32 liveUntilLedgerSeq;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TtlEntry\", [\n  [\"keyHash\", xdr.lookup(\"Hash\")],\n  [\"liveUntilLedgerSeq\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"LedgerEntryExtensionV1Ext\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct LedgerEntryExtensionV1\n//   {\n//       SponsorshipDescriptor sponsoringID;\n//   \n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LedgerEntryExtensionV1\", [\n  [\"sponsoringId\", xdr.lookup(\"SponsorshipDescriptor\")],\n  [\"ext\", xdr.lookup(\"LedgerEntryExtensionV1Ext\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (LedgerEntryType type)\n//       {\n//       case ACCOUNT:\n//           AccountEntry account;\n//       case TRUSTLINE:\n//           TrustLineEntry trustLine;\n//       case OFFER:\n//           OfferEntry offer;\n//       case DATA:\n//           DataEntry data;\n//       case CLAIMABLE_BALANCE:\n//           ClaimableBalanceEntry claimableBalance;\n//       case LIQUIDITY_POOL:\n//           LiquidityPoolEntry liquidityPool;\n//       case CONTRACT_DATA:\n//           ContractDataEntry contractData;\n//       case CONTRACT_CODE:\n//           ContractCodeEntry contractCode;\n//       case CONFIG_SETTING:\n//           ConfigSettingEntry configSetting;\n//       case TTL:\n//           TTLEntry ttl;\n//       }\n//\n// ===========================================================================\nxdr.union(\"LedgerEntryData\", {\n  switchOn: xdr.lookup(\"LedgerEntryType\"),\n  switchName: \"type\",\n  switches: [\n    [\"account\", \"account\"],\n    [\"trustline\", \"trustLine\"],\n    [\"offer\", \"offer\"],\n    [\"data\", \"data\"],\n    [\"claimableBalance\", \"claimableBalance\"],\n    [\"liquidityPool\", \"liquidityPool\"],\n    [\"contractData\", \"contractData\"],\n    [\"contractCode\", \"contractCode\"],\n    [\"configSetting\", \"configSetting\"],\n    [\"ttl\", \"ttl\"],\n  ],\n  arms: {\n    account: xdr.lookup(\"AccountEntry\"),\n    trustLine: xdr.lookup(\"TrustLineEntry\"),\n    offer: xdr.lookup(\"OfferEntry\"),\n    data: xdr.lookup(\"DataEntry\"),\n    claimableBalance: xdr.lookup(\"ClaimableBalanceEntry\"),\n    liquidityPool: xdr.lookup(\"LiquidityPoolEntry\"),\n    contractData: xdr.lookup(\"ContractDataEntry\"),\n    contractCode: xdr.lookup(\"ContractCodeEntry\"),\n    configSetting: xdr.lookup(\"ConfigSettingEntry\"),\n    ttl: xdr.lookup(\"TtlEntry\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           LedgerEntryExtensionV1 v1;\n//       }\n//\n// ===========================================================================\nxdr.union(\"LedgerEntryExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n    [1, \"v1\"],\n  ],\n  arms: {\n    v1: xdr.lookup(\"LedgerEntryExtensionV1\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct LedgerEntry\n//   {\n//       uint32 lastModifiedLedgerSeq; // ledger the LedgerEntry was last changed\n//   \n//       union switch (LedgerEntryType type)\n//       {\n//       case ACCOUNT:\n//           AccountEntry account;\n//       case TRUSTLINE:\n//           TrustLineEntry trustLine;\n//       case OFFER:\n//           OfferEntry offer;\n//       case DATA:\n//           DataEntry data;\n//       case CLAIMABLE_BALANCE:\n//           ClaimableBalanceEntry claimableBalance;\n//       case LIQUIDITY_POOL:\n//           LiquidityPoolEntry liquidityPool;\n//       case CONTRACT_DATA:\n//           ContractDataEntry contractData;\n//       case CONTRACT_CODE:\n//           ContractCodeEntry contractCode;\n//       case CONFIG_SETTING:\n//           ConfigSettingEntry configSetting;\n//       case TTL:\n//           TTLEntry ttl;\n//       }\n//       data;\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           LedgerEntryExtensionV1 v1;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LedgerEntry\", [\n  [\"lastModifiedLedgerSeq\", xdr.lookup(\"Uint32\")],\n  [\"data\", xdr.lookup(\"LedgerEntryData\")],\n  [\"ext\", xdr.lookup(\"LedgerEntryExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           AccountID accountID;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"LedgerKeyAccount\", [\n  [\"accountId\", xdr.lookup(\"AccountId\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           AccountID accountID;\n//           TrustLineAsset asset;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"LedgerKeyTrustLine\", [\n  [\"accountId\", xdr.lookup(\"AccountId\")],\n  [\"asset\", xdr.lookup(\"TrustLineAsset\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           AccountID sellerID;\n//           int64 offerID;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"LedgerKeyOffer\", [\n  [\"sellerId\", xdr.lookup(\"AccountId\")],\n  [\"offerId\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           AccountID accountID;\n//           string64 dataName;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"LedgerKeyData\", [\n  [\"accountId\", xdr.lookup(\"AccountId\")],\n  [\"dataName\", xdr.lookup(\"String64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           ClaimableBalanceID balanceID;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"LedgerKeyClaimableBalance\", [\n  [\"balanceId\", xdr.lookup(\"ClaimableBalanceId\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           PoolID liquidityPoolID;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"LedgerKeyLiquidityPool\", [\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           SCAddress contract;\n//           SCVal key;\n//           ContractDataDurability durability;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"LedgerKeyContractData\", [\n  [\"contract\", xdr.lookup(\"ScAddress\")],\n  [\"key\", xdr.lookup(\"ScVal\")],\n  [\"durability\", xdr.lookup(\"ContractDataDurability\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           Hash hash;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"LedgerKeyContractCode\", [\n  [\"hash\", xdr.lookup(\"Hash\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           ConfigSettingID configSettingID;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"LedgerKeyConfigSetting\", [\n  [\"configSettingId\", xdr.lookup(\"ConfigSettingId\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           // Hash of the LedgerKey that is associated with this TTLEntry\n//           Hash keyHash;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"LedgerKeyTtl\", [\n  [\"keyHash\", xdr.lookup(\"Hash\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union LedgerKey switch (LedgerEntryType type)\n//   {\n//   case ACCOUNT:\n//       struct\n//       {\n//           AccountID accountID;\n//       } account;\n//   \n//   case TRUSTLINE:\n//       struct\n//       {\n//           AccountID accountID;\n//           TrustLineAsset asset;\n//       } trustLine;\n//   \n//   case OFFER:\n//       struct\n//       {\n//           AccountID sellerID;\n//           int64 offerID;\n//       } offer;\n//   \n//   case DATA:\n//       struct\n//       {\n//           AccountID accountID;\n//           string64 dataName;\n//       } data;\n//   \n//   case CLAIMABLE_BALANCE:\n//       struct\n//       {\n//           ClaimableBalanceID balanceID;\n//       } claimableBalance;\n//   \n//   case LIQUIDITY_POOL:\n//       struct\n//       {\n//           PoolID liquidityPoolID;\n//       } liquidityPool;\n//   case CONTRACT_DATA:\n//       struct\n//       {\n//           SCAddress contract;\n//           SCVal key;\n//           ContractDataDurability durability;\n//       } contractData;\n//   case CONTRACT_CODE:\n//       struct\n//       {\n//           Hash hash;\n//       } contractCode;\n//   case CONFIG_SETTING:\n//       struct\n//       {\n//           ConfigSettingID configSettingID;\n//       } configSetting;\n//   case TTL:\n//       struct\n//       {\n//           // Hash of the LedgerKey that is associated with this TTLEntry\n//           Hash keyHash;\n//       } ttl;\n//   };\n//\n// ===========================================================================\nxdr.union(\"LedgerKey\", {\n  switchOn: xdr.lookup(\"LedgerEntryType\"),\n  switchName: \"type\",\n  switches: [\n    [\"account\", \"account\"],\n    [\"trustline\", \"trustLine\"],\n    [\"offer\", \"offer\"],\n    [\"data\", \"data\"],\n    [\"claimableBalance\", \"claimableBalance\"],\n    [\"liquidityPool\", \"liquidityPool\"],\n    [\"contractData\", \"contractData\"],\n    [\"contractCode\", \"contractCode\"],\n    [\"configSetting\", \"configSetting\"],\n    [\"ttl\", \"ttl\"],\n  ],\n  arms: {\n    account: xdr.lookup(\"LedgerKeyAccount\"),\n    trustLine: xdr.lookup(\"LedgerKeyTrustLine\"),\n    offer: xdr.lookup(\"LedgerKeyOffer\"),\n    data: xdr.lookup(\"LedgerKeyData\"),\n    claimableBalance: xdr.lookup(\"LedgerKeyClaimableBalance\"),\n    liquidityPool: xdr.lookup(\"LedgerKeyLiquidityPool\"),\n    contractData: xdr.lookup(\"LedgerKeyContractData\"),\n    contractCode: xdr.lookup(\"LedgerKeyContractCode\"),\n    configSetting: xdr.lookup(\"LedgerKeyConfigSetting\"),\n    ttl: xdr.lookup(\"LedgerKeyTtl\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum EnvelopeType\n//   {\n//       ENVELOPE_TYPE_TX_V0 = 0,\n//       ENVELOPE_TYPE_SCP = 1,\n//       ENVELOPE_TYPE_TX = 2,\n//       ENVELOPE_TYPE_AUTH = 3,\n//       ENVELOPE_TYPE_SCPVALUE = 4,\n//       ENVELOPE_TYPE_TX_FEE_BUMP = 5,\n//       ENVELOPE_TYPE_OP_ID = 6,\n//       ENVELOPE_TYPE_POOL_REVOKE_OP_ID = 7,\n//       ENVELOPE_TYPE_CONTRACT_ID = 8,\n//       ENVELOPE_TYPE_SOROBAN_AUTHORIZATION = 9\n//   };\n//\n// ===========================================================================\nxdr.enum(\"EnvelopeType\", {\n  envelopeTypeTxV0: 0,\n  envelopeTypeScp: 1,\n  envelopeTypeTx: 2,\n  envelopeTypeAuth: 3,\n  envelopeTypeScpvalue: 4,\n  envelopeTypeTxFeeBump: 5,\n  envelopeTypeOpId: 6,\n  envelopeTypePoolRevokeOpId: 7,\n  envelopeTypeContractId: 8,\n  envelopeTypeSorobanAuthorization: 9,\n});\n\n// === xdr source ============================================================\n//\n//   typedef opaque UpgradeType<128>;\n//\n// ===========================================================================\nxdr.typedef(\"UpgradeType\", xdr.varOpaque(128));\n\n// === xdr source ============================================================\n//\n//   enum StellarValueType\n//   {\n//       STELLAR_VALUE_BASIC = 0,\n//       STELLAR_VALUE_SIGNED = 1\n//   };\n//\n// ===========================================================================\nxdr.enum(\"StellarValueType\", {\n  stellarValueBasic: 0,\n  stellarValueSigned: 1,\n});\n\n// === xdr source ============================================================\n//\n//   struct LedgerCloseValueSignature\n//   {\n//       NodeID nodeID;       // which node introduced the value\n//       Signature signature; // nodeID's signature\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LedgerCloseValueSignature\", [\n  [\"nodeId\", xdr.lookup(\"NodeId\")],\n  [\"signature\", xdr.lookup(\"Signature\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (StellarValueType v)\n//       {\n//       case STELLAR_VALUE_BASIC:\n//           void;\n//       case STELLAR_VALUE_SIGNED:\n//           LedgerCloseValueSignature lcValueSignature;\n//       }\n//\n// ===========================================================================\nxdr.union(\"StellarValueExt\", {\n  switchOn: xdr.lookup(\"StellarValueType\"),\n  switchName: \"v\",\n  switches: [\n    [\"stellarValueBasic\", xdr.void()],\n    [\"stellarValueSigned\", \"lcValueSignature\"],\n  ],\n  arms: {\n    lcValueSignature: xdr.lookup(\"LedgerCloseValueSignature\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct StellarValue\n//   {\n//       Hash txSetHash;      // transaction set to apply to previous ledger\n//       TimePoint closeTime; // network close time\n//   \n//       // upgrades to apply to the previous ledger (usually empty)\n//       // this is a vector of encoded 'LedgerUpgrade' so that nodes can drop\n//       // unknown steps during consensus if needed.\n//       // see notes below on 'LedgerUpgrade' for more detail\n//       // max size is dictated by number of upgrade types (+ room for future)\n//       UpgradeType upgrades<6>;\n//   \n//       // reserved for future use\n//       union switch (StellarValueType v)\n//       {\n//       case STELLAR_VALUE_BASIC:\n//           void;\n//       case STELLAR_VALUE_SIGNED:\n//           LedgerCloseValueSignature lcValueSignature;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"StellarValue\", [\n  [\"txSetHash\", xdr.lookup(\"Hash\")],\n  [\"closeTime\", xdr.lookup(\"TimePoint\")],\n  [\"upgrades\", xdr.varArray(xdr.lookup(\"UpgradeType\"), 6)],\n  [\"ext\", xdr.lookup(\"StellarValueExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   const MASK_LEDGER_HEADER_FLAGS = 0x7;\n//\n// ===========================================================================\nxdr.const(\"MASK_LEDGER_HEADER_FLAGS\", 0x7);\n\n// === xdr source ============================================================\n//\n//   enum LedgerHeaderFlags\n//   {\n//       DISABLE_LIQUIDITY_POOL_TRADING_FLAG = 0x1,\n//       DISABLE_LIQUIDITY_POOL_DEPOSIT_FLAG = 0x2,\n//       DISABLE_LIQUIDITY_POOL_WITHDRAWAL_FLAG = 0x4\n//   };\n//\n// ===========================================================================\nxdr.enum(\"LedgerHeaderFlags\", {\n  disableLiquidityPoolTradingFlag: 1,\n  disableLiquidityPoolDepositFlag: 2,\n  disableLiquidityPoolWithdrawalFlag: 4,\n});\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"LedgerHeaderExtensionV1Ext\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct LedgerHeaderExtensionV1\n//   {\n//       uint32 flags; // LedgerHeaderFlags\n//   \n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LedgerHeaderExtensionV1\", [\n  [\"flags\", xdr.lookup(\"Uint32\")],\n  [\"ext\", xdr.lookup(\"LedgerHeaderExtensionV1Ext\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           LedgerHeaderExtensionV1 v1;\n//       }\n//\n// ===========================================================================\nxdr.union(\"LedgerHeaderExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n    [1, \"v1\"],\n  ],\n  arms: {\n    v1: xdr.lookup(\"LedgerHeaderExtensionV1\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct LedgerHeader\n//   {\n//       uint32 ledgerVersion;    // the protocol version of the ledger\n//       Hash previousLedgerHash; // hash of the previous ledger header\n//       StellarValue scpValue;   // what consensus agreed to\n//       Hash txSetResultHash;    // the TransactionResultSet that led to this ledger\n//       Hash bucketListHash;     // hash of the ledger state\n//   \n//       uint32 ledgerSeq; // sequence number of this ledger\n//   \n//       int64 totalCoins; // total number of stroops in existence.\n//                         // 10,000,000 stroops in 1 XLM\n//   \n//       int64 feePool;       // fees burned since last inflation run\n//       uint32 inflationSeq; // inflation sequence number\n//   \n//       uint64 idPool; // last used global ID, used for generating objects\n//   \n//       uint32 baseFee;     // base fee per operation in stroops\n//       uint32 baseReserve; // account base reserve in stroops\n//   \n//       uint32 maxTxSetSize; // maximum size a transaction set can be\n//   \n//       Hash skipList[4]; // hashes of ledgers in the past. allows you to jump back\n//                         // in time without walking the chain back ledger by ledger\n//                         // each slot contains the oldest ledger that is mod of\n//                         // either 50  5000  50000 or 500000 depending on index\n//                         // skipList[0] mod(50), skipList[1] mod(5000), etc\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           LedgerHeaderExtensionV1 v1;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LedgerHeader\", [\n  [\"ledgerVersion\", xdr.lookup(\"Uint32\")],\n  [\"previousLedgerHash\", xdr.lookup(\"Hash\")],\n  [\"scpValue\", xdr.lookup(\"StellarValue\")],\n  [\"txSetResultHash\", xdr.lookup(\"Hash\")],\n  [\"bucketListHash\", xdr.lookup(\"Hash\")],\n  [\"ledgerSeq\", xdr.lookup(\"Uint32\")],\n  [\"totalCoins\", xdr.lookup(\"Int64\")],\n  [\"feePool\", xdr.lookup(\"Int64\")],\n  [\"inflationSeq\", xdr.lookup(\"Uint32\")],\n  [\"idPool\", xdr.lookup(\"Uint64\")],\n  [\"baseFee\", xdr.lookup(\"Uint32\")],\n  [\"baseReserve\", xdr.lookup(\"Uint32\")],\n  [\"maxTxSetSize\", xdr.lookup(\"Uint32\")],\n  [\"skipList\", xdr.array(xdr.lookup(\"Hash\"), 4)],\n  [\"ext\", xdr.lookup(\"LedgerHeaderExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum LedgerUpgradeType\n//   {\n//       LEDGER_UPGRADE_VERSION = 1,\n//       LEDGER_UPGRADE_BASE_FEE = 2,\n//       LEDGER_UPGRADE_MAX_TX_SET_SIZE = 3,\n//       LEDGER_UPGRADE_BASE_RESERVE = 4,\n//       LEDGER_UPGRADE_FLAGS = 5,\n//       LEDGER_UPGRADE_CONFIG = 6,\n//       LEDGER_UPGRADE_MAX_SOROBAN_TX_SET_SIZE = 7\n//   };\n//\n// ===========================================================================\nxdr.enum(\"LedgerUpgradeType\", {\n  ledgerUpgradeVersion: 1,\n  ledgerUpgradeBaseFee: 2,\n  ledgerUpgradeMaxTxSetSize: 3,\n  ledgerUpgradeBaseReserve: 4,\n  ledgerUpgradeFlags: 5,\n  ledgerUpgradeConfig: 6,\n  ledgerUpgradeMaxSorobanTxSetSize: 7,\n});\n\n// === xdr source ============================================================\n//\n//   struct ConfigUpgradeSetKey {\n//       Hash contractID;\n//       Hash contentHash;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ConfigUpgradeSetKey\", [\n  [\"contractId\", xdr.lookup(\"Hash\")],\n  [\"contentHash\", xdr.lookup(\"Hash\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union LedgerUpgrade switch (LedgerUpgradeType type)\n//   {\n//   case LEDGER_UPGRADE_VERSION:\n//       uint32 newLedgerVersion; // update ledgerVersion\n//   case LEDGER_UPGRADE_BASE_FEE:\n//       uint32 newBaseFee; // update baseFee\n//   case LEDGER_UPGRADE_MAX_TX_SET_SIZE:\n//       uint32 newMaxTxSetSize; // update maxTxSetSize\n//   case LEDGER_UPGRADE_BASE_RESERVE:\n//       uint32 newBaseReserve; // update baseReserve\n//   case LEDGER_UPGRADE_FLAGS:\n//       uint32 newFlags; // update flags\n//   case LEDGER_UPGRADE_CONFIG:\n//       // Update arbitrary `ConfigSetting` entries identified by the key.\n//       ConfigUpgradeSetKey newConfig;\n//   case LEDGER_UPGRADE_MAX_SOROBAN_TX_SET_SIZE:\n//       // Update ConfigSettingContractExecutionLanesV0.ledgerMaxTxCount without\n//       // using `LEDGER_UPGRADE_CONFIG`.\n//       uint32 newMaxSorobanTxSetSize;\n//   };\n//\n// ===========================================================================\nxdr.union(\"LedgerUpgrade\", {\n  switchOn: xdr.lookup(\"LedgerUpgradeType\"),\n  switchName: \"type\",\n  switches: [\n    [\"ledgerUpgradeVersion\", \"newLedgerVersion\"],\n    [\"ledgerUpgradeBaseFee\", \"newBaseFee\"],\n    [\"ledgerUpgradeMaxTxSetSize\", \"newMaxTxSetSize\"],\n    [\"ledgerUpgradeBaseReserve\", \"newBaseReserve\"],\n    [\"ledgerUpgradeFlags\", \"newFlags\"],\n    [\"ledgerUpgradeConfig\", \"newConfig\"],\n    [\"ledgerUpgradeMaxSorobanTxSetSize\", \"newMaxSorobanTxSetSize\"],\n  ],\n  arms: {\n    newLedgerVersion: xdr.lookup(\"Uint32\"),\n    newBaseFee: xdr.lookup(\"Uint32\"),\n    newMaxTxSetSize: xdr.lookup(\"Uint32\"),\n    newBaseReserve: xdr.lookup(\"Uint32\"),\n    newFlags: xdr.lookup(\"Uint32\"),\n    newConfig: xdr.lookup(\"ConfigUpgradeSetKey\"),\n    newMaxSorobanTxSetSize: xdr.lookup(\"Uint32\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct ConfigUpgradeSet {\n//       ConfigSettingEntry updatedEntry<>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ConfigUpgradeSet\", [\n  [\"updatedEntry\", xdr.varArray(xdr.lookup(\"ConfigSettingEntry\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   enum BucketEntryType\n//   {\n//       METAENTRY =\n//           -1, // At-and-after protocol 11: bucket metadata, should come first.\n//       LIVEENTRY = 0, // Before protocol 11: created-or-updated;\n//                      // At-and-after protocol 11: only updated.\n//       DEADENTRY = 1,\n//       INITENTRY = 2 // At-and-after protocol 11: only created.\n//   };\n//\n// ===========================================================================\nxdr.enum(\"BucketEntryType\", {\n  metaentry: -1,\n  liveentry: 0,\n  deadentry: 1,\n  initentry: 2,\n});\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"BucketMetadataExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct BucketMetadata\n//   {\n//       // Indicates the protocol version used to create / merge this bucket.\n//       uint32 ledgerVersion;\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"BucketMetadata\", [\n  [\"ledgerVersion\", xdr.lookup(\"Uint32\")],\n  [\"ext\", xdr.lookup(\"BucketMetadataExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union BucketEntry switch (BucketEntryType type)\n//   {\n//   case LIVEENTRY:\n//   case INITENTRY:\n//       LedgerEntry liveEntry;\n//   \n//   case DEADENTRY:\n//       LedgerKey deadEntry;\n//   case METAENTRY:\n//       BucketMetadata metaEntry;\n//   };\n//\n// ===========================================================================\nxdr.union(\"BucketEntry\", {\n  switchOn: xdr.lookup(\"BucketEntryType\"),\n  switchName: \"type\",\n  switches: [\n    [\"liveentry\", \"liveEntry\"],\n    [\"initentry\", \"liveEntry\"],\n    [\"deadentry\", \"deadEntry\"],\n    [\"metaentry\", \"metaEntry\"],\n  ],\n  arms: {\n    liveEntry: xdr.lookup(\"LedgerEntry\"),\n    deadEntry: xdr.lookup(\"LedgerKey\"),\n    metaEntry: xdr.lookup(\"BucketMetadata\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum TxSetComponentType\n//   {\n//     // txs with effective fee <= bid derived from a base fee (if any).\n//     // If base fee is not specified, no discount is applied.\n//     TXSET_COMP_TXS_MAYBE_DISCOUNTED_FEE = 0\n//   };\n//\n// ===========================================================================\nxdr.enum(\"TxSetComponentType\", {\n  txsetCompTxsMaybeDiscountedFee: 0,\n});\n\n// === xdr source ============================================================\n//\n//   struct\n//     {\n//       int64* baseFee;\n//       TransactionEnvelope txs<>;\n//     }\n//\n// ===========================================================================\nxdr.struct(\"TxSetComponentTxsMaybeDiscountedFee\", [\n  [\"baseFee\", xdr.option(xdr.lookup(\"Int64\"))],\n  [\"txes\", xdr.varArray(xdr.lookup(\"TransactionEnvelope\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   union TxSetComponent switch (TxSetComponentType type)\n//   {\n//   case TXSET_COMP_TXS_MAYBE_DISCOUNTED_FEE:\n//     struct\n//     {\n//       int64* baseFee;\n//       TransactionEnvelope txs<>;\n//     } txsMaybeDiscountedFee;\n//   };\n//\n// ===========================================================================\nxdr.union(\"TxSetComponent\", {\n  switchOn: xdr.lookup(\"TxSetComponentType\"),\n  switchName: \"type\",\n  switches: [\n    [\"txsetCompTxsMaybeDiscountedFee\", \"txsMaybeDiscountedFee\"],\n  ],\n  arms: {\n    txsMaybeDiscountedFee: xdr.lookup(\"TxSetComponentTxsMaybeDiscountedFee\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   union TransactionPhase switch (int v)\n//   {\n//   case 0:\n//       TxSetComponent v0Components<>;\n//   };\n//\n// ===========================================================================\nxdr.union(\"TransactionPhase\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, \"v0Components\"],\n  ],\n  arms: {\n    v0Components: xdr.varArray(xdr.lookup(\"TxSetComponent\"), 2147483647),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct TransactionSet\n//   {\n//       Hash previousLedgerHash;\n//       TransactionEnvelope txs<>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionSet\", [\n  [\"previousLedgerHash\", xdr.lookup(\"Hash\")],\n  [\"txes\", xdr.varArray(xdr.lookup(\"TransactionEnvelope\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct TransactionSetV1\n//   {\n//       Hash previousLedgerHash;\n//       TransactionPhase phases<>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionSetV1\", [\n  [\"previousLedgerHash\", xdr.lookup(\"Hash\")],\n  [\"phases\", xdr.varArray(xdr.lookup(\"TransactionPhase\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   union GeneralizedTransactionSet switch (int v)\n//   {\n//   // We consider the legacy TransactionSet to be v0.\n//   case 1:\n//       TransactionSetV1 v1TxSet;\n//   };\n//\n// ===========================================================================\nxdr.union(\"GeneralizedTransactionSet\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [1, \"v1TxSet\"],\n  ],\n  arms: {\n    v1TxSet: xdr.lookup(\"TransactionSetV1\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct TransactionResultPair\n//   {\n//       Hash transactionHash;\n//       TransactionResult result; // result for the transaction\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionResultPair\", [\n  [\"transactionHash\", xdr.lookup(\"Hash\")],\n  [\"result\", xdr.lookup(\"TransactionResult\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct TransactionResultSet\n//   {\n//       TransactionResultPair results<>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionResultSet\", [\n  [\"results\", xdr.varArray(xdr.lookup(\"TransactionResultPair\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           GeneralizedTransactionSet generalizedTxSet;\n//       }\n//\n// ===========================================================================\nxdr.union(\"TransactionHistoryEntryExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n    [1, \"generalizedTxSet\"],\n  ],\n  arms: {\n    generalizedTxSet: xdr.lookup(\"GeneralizedTransactionSet\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct TransactionHistoryEntry\n//   {\n//       uint32 ledgerSeq;\n//       TransactionSet txSet;\n//   \n//       // when v != 0, txSet must be empty\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           GeneralizedTransactionSet generalizedTxSet;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionHistoryEntry\", [\n  [\"ledgerSeq\", xdr.lookup(\"Uint32\")],\n  [\"txSet\", xdr.lookup(\"TransactionSet\")],\n  [\"ext\", xdr.lookup(\"TransactionHistoryEntryExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"TransactionHistoryResultEntryExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct TransactionHistoryResultEntry\n//   {\n//       uint32 ledgerSeq;\n//       TransactionResultSet txResultSet;\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionHistoryResultEntry\", [\n  [\"ledgerSeq\", xdr.lookup(\"Uint32\")],\n  [\"txResultSet\", xdr.lookup(\"TransactionResultSet\")],\n  [\"ext\", xdr.lookup(\"TransactionHistoryResultEntryExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"LedgerHeaderHistoryEntryExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct LedgerHeaderHistoryEntry\n//   {\n//       Hash hash;\n//       LedgerHeader header;\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LedgerHeaderHistoryEntry\", [\n  [\"hash\", xdr.lookup(\"Hash\")],\n  [\"header\", xdr.lookup(\"LedgerHeader\")],\n  [\"ext\", xdr.lookup(\"LedgerHeaderHistoryEntryExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct LedgerSCPMessages\n//   {\n//       uint32 ledgerSeq;\n//       SCPEnvelope messages<>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LedgerScpMessages\", [\n  [\"ledgerSeq\", xdr.lookup(\"Uint32\")],\n  [\"messages\", xdr.varArray(xdr.lookup(\"ScpEnvelope\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SCPHistoryEntryV0\n//   {\n//       SCPQuorumSet quorumSets<>; // additional quorum sets used by ledgerMessages\n//       LedgerSCPMessages ledgerMessages;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScpHistoryEntryV0\", [\n  [\"quorumSets\", xdr.varArray(xdr.lookup(\"ScpQuorumSet\"), 2147483647)],\n  [\"ledgerMessages\", xdr.lookup(\"LedgerScpMessages\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union SCPHistoryEntry switch (int v)\n//   {\n//   case 0:\n//       SCPHistoryEntryV0 v0;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ScpHistoryEntry\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, \"v0\"],\n  ],\n  arms: {\n    v0: xdr.lookup(\"ScpHistoryEntryV0\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum LedgerEntryChangeType\n//   {\n//       LEDGER_ENTRY_CREATED = 0, // entry was added to the ledger\n//       LEDGER_ENTRY_UPDATED = 1, // entry was modified in the ledger\n//       LEDGER_ENTRY_REMOVED = 2, // entry was removed from the ledger\n//       LEDGER_ENTRY_STATE = 3    // value of the entry\n//   };\n//\n// ===========================================================================\nxdr.enum(\"LedgerEntryChangeType\", {\n  ledgerEntryCreated: 0,\n  ledgerEntryUpdated: 1,\n  ledgerEntryRemoved: 2,\n  ledgerEntryState: 3,\n});\n\n// === xdr source ============================================================\n//\n//   union LedgerEntryChange switch (LedgerEntryChangeType type)\n//   {\n//   case LEDGER_ENTRY_CREATED:\n//       LedgerEntry created;\n//   case LEDGER_ENTRY_UPDATED:\n//       LedgerEntry updated;\n//   case LEDGER_ENTRY_REMOVED:\n//       LedgerKey removed;\n//   case LEDGER_ENTRY_STATE:\n//       LedgerEntry state;\n//   };\n//\n// ===========================================================================\nxdr.union(\"LedgerEntryChange\", {\n  switchOn: xdr.lookup(\"LedgerEntryChangeType\"),\n  switchName: \"type\",\n  switches: [\n    [\"ledgerEntryCreated\", \"created\"],\n    [\"ledgerEntryUpdated\", \"updated\"],\n    [\"ledgerEntryRemoved\", \"removed\"],\n    [\"ledgerEntryState\", \"state\"],\n  ],\n  arms: {\n    created: xdr.lookup(\"LedgerEntry\"),\n    updated: xdr.lookup(\"LedgerEntry\"),\n    removed: xdr.lookup(\"LedgerKey\"),\n    state: xdr.lookup(\"LedgerEntry\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   typedef LedgerEntryChange LedgerEntryChanges<>;\n//\n// ===========================================================================\nxdr.typedef(\"LedgerEntryChanges\", xdr.varArray(xdr.lookup(\"LedgerEntryChange\"), 2147483647));\n\n// === xdr source ============================================================\n//\n//   struct OperationMeta\n//   {\n//       LedgerEntryChanges changes;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"OperationMeta\", [\n  [\"changes\", xdr.lookup(\"LedgerEntryChanges\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct TransactionMetaV1\n//   {\n//       LedgerEntryChanges txChanges; // tx level changes if any\n//       OperationMeta operations<>;   // meta for each operation\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionMetaV1\", [\n  [\"txChanges\", xdr.lookup(\"LedgerEntryChanges\")],\n  [\"operations\", xdr.varArray(xdr.lookup(\"OperationMeta\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct TransactionMetaV2\n//   {\n//       LedgerEntryChanges txChangesBefore; // tx level changes before operations\n//                                           // are applied if any\n//       OperationMeta operations<>;         // meta for each operation\n//       LedgerEntryChanges txChangesAfter;  // tx level changes after operations are\n//                                           // applied if any\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionMetaV2\", [\n  [\"txChangesBefore\", xdr.lookup(\"LedgerEntryChanges\")],\n  [\"operations\", xdr.varArray(xdr.lookup(\"OperationMeta\"), 2147483647)],\n  [\"txChangesAfter\", xdr.lookup(\"LedgerEntryChanges\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum ContractEventType\n//   {\n//       SYSTEM = 0,\n//       CONTRACT = 1,\n//       DIAGNOSTIC = 2\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ContractEventType\", {\n  system: 0,\n  contract: 1,\n  diagnostic: 2,\n});\n\n// === xdr source ============================================================\n//\n//   struct\n//           {\n//               SCVal topics<>;\n//               SCVal data;\n//           }\n//\n// ===========================================================================\nxdr.struct(\"ContractEventV0\", [\n  [\"topics\", xdr.varArray(xdr.lookup(\"ScVal\"), 2147483647)],\n  [\"data\", xdr.lookup(\"ScVal\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           struct\n//           {\n//               SCVal topics<>;\n//               SCVal data;\n//           } v0;\n//       }\n//\n// ===========================================================================\nxdr.union(\"ContractEventBody\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, \"v0\"],\n  ],\n  arms: {\n    v0: xdr.lookup(\"ContractEventV0\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct ContractEvent\n//   {\n//       // We can use this to add more fields, or because it\n//       // is first, to change ContractEvent into a union.\n//       ExtensionPoint ext;\n//   \n//       Hash* contractID;\n//       ContractEventType type;\n//   \n//       union switch (int v)\n//       {\n//       case 0:\n//           struct\n//           {\n//               SCVal topics<>;\n//               SCVal data;\n//           } v0;\n//       }\n//       body;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ContractEvent\", [\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\n  [\"contractId\", xdr.option(xdr.lookup(\"Hash\"))],\n  [\"type\", xdr.lookup(\"ContractEventType\")],\n  [\"body\", xdr.lookup(\"ContractEventBody\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct DiagnosticEvent\n//   {\n//       bool inSuccessfulContractCall;\n//       ContractEvent event;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"DiagnosticEvent\", [\n  [\"inSuccessfulContractCall\", xdr.bool()],\n  [\"event\", xdr.lookup(\"ContractEvent\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SorobanTransactionMetaExtV1\n//   {\n//       ExtensionPoint ext;\n//   \n//       // The following are the components of the overall Soroban resource fee\n//       // charged for the transaction.\n//       // The following relation holds:\n//       // `resourceFeeCharged = totalNonRefundableResourceFeeCharged + totalRefundableResourceFeeCharged`\n//       // where `resourceFeeCharged` is the overall fee charged for the \n//       // transaction. Also, `resourceFeeCharged` <= `sorobanData.resourceFee` \n//       // i.e.we never charge more than the declared resource fee.\n//       // The inclusion fee for charged the Soroban transaction can be found using \n//       // the following equation:\n//       // `result.feeCharged = resourceFeeCharged + inclusionFeeCharged`.\n//   \n//       // Total amount (in stroops) that has been charged for non-refundable\n//       // Soroban resources.\n//       // Non-refundable resources are charged based on the usage declared in\n//       // the transaction envelope (such as `instructions`, `readBytes` etc.) and \n//       // is charged regardless of the success of the transaction.\n//       int64 totalNonRefundableResourceFeeCharged;\n//       // Total amount (in stroops) that has been charged for refundable\n//       // Soroban resource fees.\n//       // Currently this comprises the rent fee (`rentFeeCharged`) and the\n//       // fee for the events and return value.\n//       // Refundable resources are charged based on the actual resources usage.\n//       // Since currently refundable resources are only used for the successful\n//       // transactions, this will be `0` for failed transactions.\n//       int64 totalRefundableResourceFeeCharged;\n//       // Amount (in stroops) that has been charged for rent.\n//       // This is a part of `totalNonRefundableResourceFeeCharged`.\n//       int64 rentFeeCharged;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SorobanTransactionMetaExtV1\", [\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\n  [\"totalNonRefundableResourceFeeCharged\", xdr.lookup(\"Int64\")],\n  [\"totalRefundableResourceFeeCharged\", xdr.lookup(\"Int64\")],\n  [\"rentFeeCharged\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union SorobanTransactionMetaExt switch (int v)\n//   {\n//   case 0:\n//       void;\n//   case 1:\n//       SorobanTransactionMetaExtV1 v1;\n//   };\n//\n// ===========================================================================\nxdr.union(\"SorobanTransactionMetaExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n    [1, \"v1\"],\n  ],\n  arms: {\n    v1: xdr.lookup(\"SorobanTransactionMetaExtV1\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct SorobanTransactionMeta \n//   {\n//       SorobanTransactionMetaExt ext;\n//   \n//       ContractEvent events<>;             // custom events populated by the\n//                                           // contracts themselves.\n//       SCVal returnValue;                  // return value of the host fn invocation\n//   \n//       // Diagnostics events that are not hashed.\n//       // This will contain all contract and diagnostic events. Even ones\n//       // that were emitted in a failed contract call.\n//       DiagnosticEvent diagnosticEvents<>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SorobanTransactionMeta\", [\n  [\"ext\", xdr.lookup(\"SorobanTransactionMetaExt\")],\n  [\"events\", xdr.varArray(xdr.lookup(\"ContractEvent\"), 2147483647)],\n  [\"returnValue\", xdr.lookup(\"ScVal\")],\n  [\"diagnosticEvents\", xdr.varArray(xdr.lookup(\"DiagnosticEvent\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct TransactionMetaV3\n//   {\n//       ExtensionPoint ext;\n//   \n//       LedgerEntryChanges txChangesBefore;  // tx level changes before operations\n//                                            // are applied if any\n//       OperationMeta operations<>;          // meta for each operation\n//       LedgerEntryChanges txChangesAfter;   // tx level changes after operations are\n//                                            // applied if any\n//       SorobanTransactionMeta* sorobanMeta; // Soroban-specific meta (only for \n//                                            // Soroban transactions).\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionMetaV3\", [\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\n  [\"txChangesBefore\", xdr.lookup(\"LedgerEntryChanges\")],\n  [\"operations\", xdr.varArray(xdr.lookup(\"OperationMeta\"), 2147483647)],\n  [\"txChangesAfter\", xdr.lookup(\"LedgerEntryChanges\")],\n  [\"sorobanMeta\", xdr.option(xdr.lookup(\"SorobanTransactionMeta\"))],\n]);\n\n// === xdr source ============================================================\n//\n//   struct InvokeHostFunctionSuccessPreImage\n//   {\n//       SCVal returnValue;\n//       ContractEvent events<>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"InvokeHostFunctionSuccessPreImage\", [\n  [\"returnValue\", xdr.lookup(\"ScVal\")],\n  [\"events\", xdr.varArray(xdr.lookup(\"ContractEvent\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   union TransactionMeta switch (int v)\n//   {\n//   case 0:\n//       OperationMeta operations<>;\n//   case 1:\n//       TransactionMetaV1 v1;\n//   case 2:\n//       TransactionMetaV2 v2;\n//   case 3:\n//       TransactionMetaV3 v3;\n//   };\n//\n// ===========================================================================\nxdr.union(\"TransactionMeta\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, \"operations\"],\n    [1, \"v1\"],\n    [2, \"v2\"],\n    [3, \"v3\"],\n  ],\n  arms: {\n    operations: xdr.varArray(xdr.lookup(\"OperationMeta\"), 2147483647),\n    v1: xdr.lookup(\"TransactionMetaV1\"),\n    v2: xdr.lookup(\"TransactionMetaV2\"),\n    v3: xdr.lookup(\"TransactionMetaV3\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct TransactionResultMeta\n//   {\n//       TransactionResultPair result;\n//       LedgerEntryChanges feeProcessing;\n//       TransactionMeta txApplyProcessing;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionResultMeta\", [\n  [\"result\", xdr.lookup(\"TransactionResultPair\")],\n  [\"feeProcessing\", xdr.lookup(\"LedgerEntryChanges\")],\n  [\"txApplyProcessing\", xdr.lookup(\"TransactionMeta\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct UpgradeEntryMeta\n//   {\n//       LedgerUpgrade upgrade;\n//       LedgerEntryChanges changes;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"UpgradeEntryMeta\", [\n  [\"upgrade\", xdr.lookup(\"LedgerUpgrade\")],\n  [\"changes\", xdr.lookup(\"LedgerEntryChanges\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct LedgerCloseMetaV0\n//   {\n//       LedgerHeaderHistoryEntry ledgerHeader;\n//       // NB: txSet is sorted in \"Hash order\"\n//       TransactionSet txSet;\n//   \n//       // NB: transactions are sorted in apply order here\n//       // fees for all transactions are processed first\n//       // followed by applying transactions\n//       TransactionResultMeta txProcessing<>;\n//   \n//       // upgrades are applied last\n//       UpgradeEntryMeta upgradesProcessing<>;\n//   \n//       // other misc information attached to the ledger close\n//       SCPHistoryEntry scpInfo<>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LedgerCloseMetaV0\", [\n  [\"ledgerHeader\", xdr.lookup(\"LedgerHeaderHistoryEntry\")],\n  [\"txSet\", xdr.lookup(\"TransactionSet\")],\n  [\"txProcessing\", xdr.varArray(xdr.lookup(\"TransactionResultMeta\"), 2147483647)],\n  [\"upgradesProcessing\", xdr.varArray(xdr.lookup(\"UpgradeEntryMeta\"), 2147483647)],\n  [\"scpInfo\", xdr.varArray(xdr.lookup(\"ScpHistoryEntry\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct LedgerCloseMetaExtV1\n//   {\n//       ExtensionPoint ext;\n//       int64 sorobanFeeWrite1KB;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LedgerCloseMetaExtV1\", [\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\n  [\"sorobanFeeWrite1Kb\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union LedgerCloseMetaExt switch (int v)\n//   {\n//   case 0:\n//       void;\n//   case 1:\n//       LedgerCloseMetaExtV1 v1;\n//   };\n//\n// ===========================================================================\nxdr.union(\"LedgerCloseMetaExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n    [1, \"v1\"],\n  ],\n  arms: {\n    v1: xdr.lookup(\"LedgerCloseMetaExtV1\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct LedgerCloseMetaV1\n//   {\n//       LedgerCloseMetaExt ext;\n//   \n//       LedgerHeaderHistoryEntry ledgerHeader;\n//   \n//       GeneralizedTransactionSet txSet;\n//   \n//       // NB: transactions are sorted in apply order here\n//       // fees for all transactions are processed first\n//       // followed by applying transactions\n//       TransactionResultMeta txProcessing<>;\n//   \n//       // upgrades are applied last\n//       UpgradeEntryMeta upgradesProcessing<>;\n//   \n//       // other misc information attached to the ledger close\n//       SCPHistoryEntry scpInfo<>;\n//   \n//       // Size in bytes of BucketList, to support downstream\n//       // systems calculating storage fees correctly.\n//       uint64 totalByteSizeOfBucketList;\n//   \n//       // Temp keys that are being evicted at this ledger.\n//       LedgerKey evictedTemporaryLedgerKeys<>;\n//   \n//       // Archived restorable ledger entries that are being\n//       // evicted at this ledger.\n//       LedgerEntry evictedPersistentLedgerEntries<>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LedgerCloseMetaV1\", [\n  [\"ext\", xdr.lookup(\"LedgerCloseMetaExt\")],\n  [\"ledgerHeader\", xdr.lookup(\"LedgerHeaderHistoryEntry\")],\n  [\"txSet\", xdr.lookup(\"GeneralizedTransactionSet\")],\n  [\"txProcessing\", xdr.varArray(xdr.lookup(\"TransactionResultMeta\"), 2147483647)],\n  [\"upgradesProcessing\", xdr.varArray(xdr.lookup(\"UpgradeEntryMeta\"), 2147483647)],\n  [\"scpInfo\", xdr.varArray(xdr.lookup(\"ScpHistoryEntry\"), 2147483647)],\n  [\"totalByteSizeOfBucketList\", xdr.lookup(\"Uint64\")],\n  [\"evictedTemporaryLedgerKeys\", xdr.varArray(xdr.lookup(\"LedgerKey\"), 2147483647)],\n  [\"evictedPersistentLedgerEntries\", xdr.varArray(xdr.lookup(\"LedgerEntry\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   union LedgerCloseMeta switch (int v)\n//   {\n//   case 0:\n//       LedgerCloseMetaV0 v0;\n//   case 1:\n//       LedgerCloseMetaV1 v1;\n//   };\n//\n// ===========================================================================\nxdr.union(\"LedgerCloseMeta\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, \"v0\"],\n    [1, \"v1\"],\n  ],\n  arms: {\n    v0: xdr.lookup(\"LedgerCloseMetaV0\"),\n    v1: xdr.lookup(\"LedgerCloseMetaV1\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum ErrorCode\n//   {\n//       ERR_MISC = 0, // Unspecific error\n//       ERR_DATA = 1, // Malformed data\n//       ERR_CONF = 2, // Misconfiguration error\n//       ERR_AUTH = 3, // Authentication failure\n//       ERR_LOAD = 4  // System overloaded\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ErrorCode\", {\n  errMisc: 0,\n  errData: 1,\n  errConf: 2,\n  errAuth: 3,\n  errLoad: 4,\n});\n\n// === xdr source ============================================================\n//\n//   struct Error\n//   {\n//       ErrorCode code;\n//       string msg<100>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"Error\", [\n  [\"code\", xdr.lookup(\"ErrorCode\")],\n  [\"msg\", xdr.string(100)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SendMore\n//   {\n//       uint32 numMessages;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SendMore\", [\n  [\"numMessages\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SendMoreExtended\n//   {\n//       uint32 numMessages;\n//       uint32 numBytes;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SendMoreExtended\", [\n  [\"numMessages\", xdr.lookup(\"Uint32\")],\n  [\"numBytes\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct AuthCert\n//   {\n//       Dilithium2Public pubkey;\n//       uint64 expiration;\n//       Signature sig;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"AuthCert\", [\n  [\"pubkey\", xdr.lookup(\"Dilithium2Public\")],\n  [\"expiration\", xdr.lookup(\"Uint64\")],\n  [\"sig\", xdr.lookup(\"Signature\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct Hello\n//   {\n//       uint32 ledgerVersion;\n//       uint32 overlayVersion;\n//       uint32 overlayMinVersion;\n//       Hash networkID;\n//       string versionStr<100>;\n//       int listeningPort;\n//       NodeID peerID;\n//       AuthCert cert;\n//       uint256 nonce;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"Hello\", [\n  [\"ledgerVersion\", xdr.lookup(\"Uint32\")],\n  [\"overlayVersion\", xdr.lookup(\"Uint32\")],\n  [\"overlayMinVersion\", xdr.lookup(\"Uint32\")],\n  [\"networkId\", xdr.lookup(\"Hash\")],\n  [\"versionStr\", xdr.string(100)],\n  [\"listeningPort\", xdr.int()],\n  [\"peerId\", xdr.lookup(\"NodeId\")],\n  [\"cert\", xdr.lookup(\"AuthCert\")],\n  [\"nonce\", xdr.lookup(\"Uint256\")],\n]);\n\n// === xdr source ============================================================\n//\n//   const AUTH_MSG_FLAG_FLOW_CONTROL_BYTES_REQUESTED = 200;\n//\n// ===========================================================================\nxdr.const(\"AUTH_MSG_FLAG_FLOW_CONTROL_BYTES_REQUESTED\", 200);\n\n// === xdr source ============================================================\n//\n//   struct Auth\n//   {\n//       int flags;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"Auth\", [\n  [\"flags\", xdr.int()],\n]);\n\n// === xdr source ============================================================\n//\n//   enum IPAddrType\n//   {\n//       IPv4 = 0,\n//       IPv6 = 1\n//   };\n//\n// ===========================================================================\nxdr.enum(\"IpAddrType\", {\n  iPv4: 0,\n  iPv6: 1,\n});\n\n// === xdr source ============================================================\n//\n//   union switch (IPAddrType type)\n//       {\n//       case IPv4:\n//           opaque ipv4[4];\n//       case IPv6:\n//           opaque ipv6[16];\n//       }\n//\n// ===========================================================================\nxdr.union(\"PeerAddressIp\", {\n  switchOn: xdr.lookup(\"IpAddrType\"),\n  switchName: \"type\",\n  switches: [\n    [\"iPv4\", \"ipv4\"],\n    [\"iPv6\", \"ipv6\"],\n  ],\n  arms: {\n    ipv4: xdr.opaque(4),\n    ipv6: xdr.opaque(16),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct PeerAddress\n//   {\n//       union switch (IPAddrType type)\n//       {\n//       case IPv4:\n//           opaque ipv4[4];\n//       case IPv6:\n//           opaque ipv6[16];\n//       }\n//       ip;\n//       uint32 port;\n//       uint32 numFailures;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"PeerAddress\", [\n  [\"ip\", xdr.lookup(\"PeerAddressIp\")],\n  [\"port\", xdr.lookup(\"Uint32\")],\n  [\"numFailures\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum MessageType\n//   {\n//       ERROR_MSG = 0,\n//       AUTH = 2,\n//       DONT_HAVE = 3,\n//   \n//       GET_PEERS = 4, // gets a list of peers this guy knows about\n//       PEERS = 5,\n//   \n//       GET_TX_SET = 6, // gets a particular txset by hash\n//       TX_SET = 7,\n//       GENERALIZED_TX_SET = 17,\n//   \n//       TRANSACTION = 8, // pass on a tx you have heard about\n//   \n//       // SCP\n//       GET_SCP_QUORUMSET = 9,\n//       SCP_QUORUMSET = 10,\n//       SCP_MESSAGE = 11,\n//       GET_SCP_STATE = 12,\n//   \n//       // new messages\n//       HELLO = 13,\n//   \n//       SURVEY_REQUEST = 14,\n//       SURVEY_RESPONSE = 15,\n//   \n//       SEND_MORE = 16,\n//       SEND_MORE_EXTENDED = 20,\n//   \n//       FLOOD_ADVERT = 18,\n//       FLOOD_DEMAND = 19\n//   };\n//\n// ===========================================================================\nxdr.enum(\"MessageType\", {\n  errorMsg: 0,\n  auth: 2,\n  dontHave: 3,\n  getPeers: 4,\n  peers: 5,\n  getTxSet: 6,\n  txSet: 7,\n  generalizedTxSet: 17,\n  transaction: 8,\n  getScpQuorumset: 9,\n  scpQuorumset: 10,\n  scpMessage: 11,\n  getScpState: 12,\n  hello: 13,\n  surveyRequest: 14,\n  surveyResponse: 15,\n  sendMore: 16,\n  sendMoreExtended: 20,\n  floodAdvert: 18,\n  floodDemand: 19,\n});\n\n// === xdr source ============================================================\n//\n//   struct DontHave\n//   {\n//       MessageType type;\n//       uint256 reqHash;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"DontHave\", [\n  [\"type\", xdr.lookup(\"MessageType\")],\n  [\"reqHash\", xdr.lookup(\"Uint256\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum SurveyMessageCommandType\n//   {\n//       SURVEY_TOPOLOGY = 0\n//   };\n//\n// ===========================================================================\nxdr.enum(\"SurveyMessageCommandType\", {\n  surveyTopology: 0,\n});\n\n// === xdr source ============================================================\n//\n//   enum SurveyMessageResponseType\n//   {\n//       SURVEY_TOPOLOGY_RESPONSE_V0 = 0,\n//       SURVEY_TOPOLOGY_RESPONSE_V1 = 1\n//   };\n//\n// ===========================================================================\nxdr.enum(\"SurveyMessageResponseType\", {\n  surveyTopologyResponseV0: 0,\n  surveyTopologyResponseV1: 1,\n});\n\n// === xdr source ============================================================\n//\n//   struct SurveyRequestMessage\n//   {\n//       NodeID surveyorPeerID;\n//       NodeID surveyedPeerID;\n//       uint32 ledgerNum;\n//       Dilithium2Public encryptionKey;\n//       SurveyMessageCommandType commandType;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SurveyRequestMessage\", [\n  [\"surveyorPeerId\", xdr.lookup(\"NodeId\")],\n  [\"surveyedPeerId\", xdr.lookup(\"NodeId\")],\n  [\"ledgerNum\", xdr.lookup(\"Uint32\")],\n  [\"encryptionKey\", xdr.lookup(\"Dilithium2Public\")],\n  [\"commandType\", xdr.lookup(\"SurveyMessageCommandType\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SignedSurveyRequestMessage\n//   {\n//       Signature requestSignature;\n//       SurveyRequestMessage request;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SignedSurveyRequestMessage\", [\n  [\"requestSignature\", xdr.lookup(\"Signature\")],\n  [\"request\", xdr.lookup(\"SurveyRequestMessage\")],\n]);\n\n// === xdr source ============================================================\n//\n//   typedef opaque EncryptedBody<64000>;\n//\n// ===========================================================================\nxdr.typedef(\"EncryptedBody\", xdr.varOpaque(64000));\n\n// === xdr source ============================================================\n//\n//   struct SurveyResponseMessage\n//   {\n//       NodeID surveyorPeerID;\n//       NodeID surveyedPeerID;\n//       uint32 ledgerNum;\n//       SurveyMessageCommandType commandType;\n//       EncryptedBody encryptedBody;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SurveyResponseMessage\", [\n  [\"surveyorPeerId\", xdr.lookup(\"NodeId\")],\n  [\"surveyedPeerId\", xdr.lookup(\"NodeId\")],\n  [\"ledgerNum\", xdr.lookup(\"Uint32\")],\n  [\"commandType\", xdr.lookup(\"SurveyMessageCommandType\")],\n  [\"encryptedBody\", xdr.lookup(\"EncryptedBody\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SignedSurveyResponseMessage\n//   {\n//       Signature responseSignature;\n//       SurveyResponseMessage response;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SignedSurveyResponseMessage\", [\n  [\"responseSignature\", xdr.lookup(\"Signature\")],\n  [\"response\", xdr.lookup(\"SurveyResponseMessage\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct PeerStats\n//   {\n//       NodeID id;\n//       string versionStr<100>;\n//       uint64 messagesRead;\n//       uint64 messagesWritten;\n//       uint64 bytesRead;\n//       uint64 bytesWritten;\n//       uint64 secondsConnected;\n//   \n//       uint64 uniqueFloodBytesRecv;\n//       uint64 duplicateFloodBytesRecv;\n//       uint64 uniqueFetchBytesRecv;\n//       uint64 duplicateFetchBytesRecv;\n//   \n//       uint64 uniqueFloodMessageRecv;\n//       uint64 duplicateFloodMessageRecv;\n//       uint64 uniqueFetchMessageRecv;\n//       uint64 duplicateFetchMessageRecv;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"PeerStats\", [\n  [\"id\", xdr.lookup(\"NodeId\")],\n  [\"versionStr\", xdr.string(100)],\n  [\"messagesRead\", xdr.lookup(\"Uint64\")],\n  [\"messagesWritten\", xdr.lookup(\"Uint64\")],\n  [\"bytesRead\", xdr.lookup(\"Uint64\")],\n  [\"bytesWritten\", xdr.lookup(\"Uint64\")],\n  [\"secondsConnected\", xdr.lookup(\"Uint64\")],\n  [\"uniqueFloodBytesRecv\", xdr.lookup(\"Uint64\")],\n  [\"duplicateFloodBytesRecv\", xdr.lookup(\"Uint64\")],\n  [\"uniqueFetchBytesRecv\", xdr.lookup(\"Uint64\")],\n  [\"duplicateFetchBytesRecv\", xdr.lookup(\"Uint64\")],\n  [\"uniqueFloodMessageRecv\", xdr.lookup(\"Uint64\")],\n  [\"duplicateFloodMessageRecv\", xdr.lookup(\"Uint64\")],\n  [\"uniqueFetchMessageRecv\", xdr.lookup(\"Uint64\")],\n  [\"duplicateFetchMessageRecv\", xdr.lookup(\"Uint64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   typedef PeerStats PeerStatList<25>;\n//\n// ===========================================================================\nxdr.typedef(\"PeerStatList\", xdr.varArray(xdr.lookup(\"PeerStats\"), 25));\n\n// === xdr source ============================================================\n//\n//   struct TopologyResponseBodyV0\n//   {\n//       PeerStatList inboundPeers;\n//       PeerStatList outboundPeers;\n//   \n//       uint32 totalInboundPeerCount;\n//       uint32 totalOutboundPeerCount;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TopologyResponseBodyV0\", [\n  [\"inboundPeers\", xdr.lookup(\"PeerStatList\")],\n  [\"outboundPeers\", xdr.lookup(\"PeerStatList\")],\n  [\"totalInboundPeerCount\", xdr.lookup(\"Uint32\")],\n  [\"totalOutboundPeerCount\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct TopologyResponseBodyV1\n//   {\n//       PeerStatList inboundPeers;\n//       PeerStatList outboundPeers;\n//   \n//       uint32 totalInboundPeerCount;\n//       uint32 totalOutboundPeerCount;\n//   \n//       uint32 maxInboundPeerCount;\n//       uint32 maxOutboundPeerCount;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TopologyResponseBodyV1\", [\n  [\"inboundPeers\", xdr.lookup(\"PeerStatList\")],\n  [\"outboundPeers\", xdr.lookup(\"PeerStatList\")],\n  [\"totalInboundPeerCount\", xdr.lookup(\"Uint32\")],\n  [\"totalOutboundPeerCount\", xdr.lookup(\"Uint32\")],\n  [\"maxInboundPeerCount\", xdr.lookup(\"Uint32\")],\n  [\"maxOutboundPeerCount\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union SurveyResponseBody switch (SurveyMessageResponseType type)\n//   {\n//   case SURVEY_TOPOLOGY_RESPONSE_V0:\n//       TopologyResponseBodyV0 topologyResponseBodyV0;\n//   case SURVEY_TOPOLOGY_RESPONSE_V1:\n//       TopologyResponseBodyV1 topologyResponseBodyV1;\n//   };\n//\n// ===========================================================================\nxdr.union(\"SurveyResponseBody\", {\n  switchOn: xdr.lookup(\"SurveyMessageResponseType\"),\n  switchName: \"type\",\n  switches: [\n    [\"surveyTopologyResponseV0\", \"topologyResponseBodyV0\"],\n    [\"surveyTopologyResponseV1\", \"topologyResponseBodyV1\"],\n  ],\n  arms: {\n    topologyResponseBodyV0: xdr.lookup(\"TopologyResponseBodyV0\"),\n    topologyResponseBodyV1: xdr.lookup(\"TopologyResponseBodyV1\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   const TX_ADVERT_VECTOR_MAX_SIZE = 1000;\n//\n// ===========================================================================\nxdr.const(\"TX_ADVERT_VECTOR_MAX_SIZE\", 1000);\n\n// === xdr source ============================================================\n//\n//   typedef Hash TxAdvertVector<TX_ADVERT_VECTOR_MAX_SIZE>;\n//\n// ===========================================================================\nxdr.typedef(\"TxAdvertVector\", xdr.varArray(xdr.lookup(\"Hash\"), xdr.lookup(\"TX_ADVERT_VECTOR_MAX_SIZE\")));\n\n// === xdr source ============================================================\n//\n//   struct FloodAdvert\n//   {\n//       TxAdvertVector txHashes;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"FloodAdvert\", [\n  [\"txHashes\", xdr.lookup(\"TxAdvertVector\")],\n]);\n\n// === xdr source ============================================================\n//\n//   const TX_DEMAND_VECTOR_MAX_SIZE = 1000;\n//\n// ===========================================================================\nxdr.const(\"TX_DEMAND_VECTOR_MAX_SIZE\", 1000);\n\n// === xdr source ============================================================\n//\n//   typedef Hash TxDemandVector<TX_DEMAND_VECTOR_MAX_SIZE>;\n//\n// ===========================================================================\nxdr.typedef(\"TxDemandVector\", xdr.varArray(xdr.lookup(\"Hash\"), xdr.lookup(\"TX_DEMAND_VECTOR_MAX_SIZE\")));\n\n// === xdr source ============================================================\n//\n//   struct FloodDemand\n//   {\n//       TxDemandVector txHashes;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"FloodDemand\", [\n  [\"txHashes\", xdr.lookup(\"TxDemandVector\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union StellarMessage switch (MessageType type)\n//   {\n//   case ERROR_MSG:\n//       Error error;\n//   case HELLO:\n//       Hello hello;\n//   case AUTH:\n//       Auth auth;\n//   case DONT_HAVE:\n//       DontHave dontHave;\n//   case GET_PEERS:\n//       void;\n//   case PEERS:\n//       PeerAddress peers<100>;\n//   \n//   case GET_TX_SET:\n//       uint256 txSetHash;\n//   case TX_SET:\n//       TransactionSet txSet;\n//   case GENERALIZED_TX_SET:\n//       GeneralizedTransactionSet generalizedTxSet;\n//   \n//   case TRANSACTION:\n//       TransactionEnvelope transaction;\n//   \n//   case SURVEY_REQUEST:\n//       SignedSurveyRequestMessage signedSurveyRequestMessage;\n//   \n//   case SURVEY_RESPONSE:\n//       SignedSurveyResponseMessage signedSurveyResponseMessage;\n//   \n//   // SCP\n//   case GET_SCP_QUORUMSET:\n//       uint256 qSetHash;\n//   case SCP_QUORUMSET:\n//       SCPQuorumSet qSet;\n//   case SCP_MESSAGE:\n//       SCPEnvelope envelope;\n//   case GET_SCP_STATE:\n//       uint32 getSCPLedgerSeq; // ledger seq requested ; if 0, requests the latest\n//   case SEND_MORE:\n//       SendMore sendMoreMessage;\n//   case SEND_MORE_EXTENDED:\n//       SendMoreExtended sendMoreExtendedMessage;\n//   // Pull mode\n//   case FLOOD_ADVERT:\n//        FloodAdvert floodAdvert;\n//   case FLOOD_DEMAND:\n//        FloodDemand floodDemand;\n//   };\n//\n// ===========================================================================\nxdr.union(\"StellarMessage\", {\n  switchOn: xdr.lookup(\"MessageType\"),\n  switchName: \"type\",\n  switches: [\n    [\"errorMsg\", \"error\"],\n    [\"hello\", \"hello\"],\n    [\"auth\", \"auth\"],\n    [\"dontHave\", \"dontHave\"],\n    [\"getPeers\", xdr.void()],\n    [\"peers\", \"peers\"],\n    [\"getTxSet\", \"txSetHash\"],\n    [\"txSet\", \"txSet\"],\n    [\"generalizedTxSet\", \"generalizedTxSet\"],\n    [\"transaction\", \"transaction\"],\n    [\"surveyRequest\", \"signedSurveyRequestMessage\"],\n    [\"surveyResponse\", \"signedSurveyResponseMessage\"],\n    [\"getScpQuorumset\", \"qSetHash\"],\n    [\"scpQuorumset\", \"qSet\"],\n    [\"scpMessage\", \"envelope\"],\n    [\"getScpState\", \"getScpLedgerSeq\"],\n    [\"sendMore\", \"sendMoreMessage\"],\n    [\"sendMoreExtended\", \"sendMoreExtendedMessage\"],\n    [\"floodAdvert\", \"floodAdvert\"],\n    [\"floodDemand\", \"floodDemand\"],\n  ],\n  arms: {\n    error: xdr.lookup(\"Error\"),\n    hello: xdr.lookup(\"Hello\"),\n    auth: xdr.lookup(\"Auth\"),\n    dontHave: xdr.lookup(\"DontHave\"),\n    peers: xdr.varArray(xdr.lookup(\"PeerAddress\"), 100),\n    txSetHash: xdr.lookup(\"Uint256\"),\n    txSet: xdr.lookup(\"TransactionSet\"),\n    generalizedTxSet: xdr.lookup(\"GeneralizedTransactionSet\"),\n    transaction: xdr.lookup(\"TransactionEnvelope\"),\n    signedSurveyRequestMessage: xdr.lookup(\"SignedSurveyRequestMessage\"),\n    signedSurveyResponseMessage: xdr.lookup(\"SignedSurveyResponseMessage\"),\n    qSetHash: xdr.lookup(\"Uint256\"),\n    qSet: xdr.lookup(\"ScpQuorumSet\"),\n    envelope: xdr.lookup(\"ScpEnvelope\"),\n    getScpLedgerSeq: xdr.lookup(\"Uint32\"),\n    sendMoreMessage: xdr.lookup(\"SendMore\"),\n    sendMoreExtendedMessage: xdr.lookup(\"SendMoreExtended\"),\n    floodAdvert: xdr.lookup(\"FloodAdvert\"),\n    floodDemand: xdr.lookup(\"FloodDemand\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           uint64 sequence;\n//           StellarMessage message;\n//           HmacSha256Mac mac;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"AuthenticatedMessageV0\", [\n  [\"sequence\", xdr.lookup(\"Uint64\")],\n  [\"message\", xdr.lookup(\"StellarMessage\")],\n  [\"mac\", xdr.lookup(\"HmacSha256Mac\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union AuthenticatedMessage switch (uint32 v)\n//   {\n//   case 0:\n//       struct\n//       {\n//           uint64 sequence;\n//           StellarMessage message;\n//           HmacSha256Mac mac;\n//       } v0;\n//   };\n//\n// ===========================================================================\nxdr.union(\"AuthenticatedMessage\", {\n  switchOn: xdr.lookup(\"Uint32\"),\n  switchName: \"v\",\n  switches: [\n    [0, \"v0\"],\n  ],\n  arms: {\n    v0: xdr.lookup(\"AuthenticatedMessageV0\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   const MAX_OPS_PER_TX = 100;\n//\n// ===========================================================================\nxdr.const(\"MAX_OPS_PER_TX\", 100);\n\n// === xdr source ============================================================\n//\n//   union LiquidityPoolParameters switch (LiquidityPoolType type)\n//   {\n//   case LIQUIDITY_POOL_CONSTANT_PRODUCT:\n//       LiquidityPoolConstantProductParameters constantProduct;\n//   };\n//\n// ===========================================================================\nxdr.union(\"LiquidityPoolParameters\", {\n  switchOn: xdr.lookup(\"LiquidityPoolType\"),\n  switchName: \"type\",\n  switches: [\n    [\"liquidityPoolConstantProduct\", \"constantProduct\"],\n  ],\n  arms: {\n    constantProduct: xdr.lookup(\"LiquidityPoolConstantProductParameters\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           uint64 id;\n//           opaque dilithium2[1312];\n//       }\n//\n// ===========================================================================\nxdr.struct(\"MuxedAccountMdilithium2\", [\n  [\"id\", xdr.lookup(\"Uint64\")],\n  [\"dilithium2\", xdr.opaque(1312)],\n]);\n\n// === xdr source ============================================================\n//\n//   union MuxedAccount switch (CryptoKeyType type)\n//   {\n//   case KEY_TYPE_DILITHIUM2:\n//       opaque dilithium2[1312];\n//   case KEY_TYPE_MUXED_DILITHIUM2:\n//       struct\n//       {\n//           uint64 id;\n//           opaque dilithium2[1312];\n//       } mdilithium2;\n//   };\n//\n// ===========================================================================\nxdr.union(\"MuxedAccount\", {\n  switchOn: xdr.lookup(\"CryptoKeyType\"),\n  switchName: \"type\",\n  switches: [\n    [\"keyTypeDilithium2\", \"dilithium2\"],\n    [\"keyTypeMuxedDilithium2\", \"mdilithium2\"],\n  ],\n  arms: {\n    dilithium2: xdr.opaque(1312),\n    mdilithium2: xdr.lookup(\"MuxedAccountMdilithium2\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct DecoratedSignature\n//   {\n//       SignatureHint hint;  // last 4 bytes of the public key, used as a hint\n//       Signature signature; // actual signature\n//   };\n//\n// ===========================================================================\nxdr.struct(\"DecoratedSignature\", [\n  [\"hint\", xdr.lookup(\"SignatureHint\")],\n  [\"signature\", xdr.lookup(\"Signature\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum OperationType\n//   {\n//       CREATE_ACCOUNT = 0,\n//       PAYMENT = 1,\n//       PATH_PAYMENT_STRICT_RECEIVE = 2,\n//       MANAGE_SELL_OFFER = 3,\n//       CREATE_PASSIVE_SELL_OFFER = 4,\n//       SET_OPTIONS = 5,\n//       CHANGE_TRUST = 6,\n//       ALLOW_TRUST = 7,\n//       ACCOUNT_MERGE = 8,\n//       INFLATION = 9,\n//       MANAGE_DATA = 10,\n//       BUMP_SEQUENCE = 11,\n//       MANAGE_BUY_OFFER = 12,\n//       PATH_PAYMENT_STRICT_SEND = 13,\n//       CREATE_CLAIMABLE_BALANCE = 14,\n//       CLAIM_CLAIMABLE_BALANCE = 15,\n//       BEGIN_SPONSORING_FUTURE_RESERVES = 16,\n//       END_SPONSORING_FUTURE_RESERVES = 17,\n//       REVOKE_SPONSORSHIP = 18,\n//       CLAWBACK = 19,\n//       CLAWBACK_CLAIMABLE_BALANCE = 20,\n//       SET_TRUST_LINE_FLAGS = 21,\n//       LIQUIDITY_POOL_DEPOSIT = 22,\n//       LIQUIDITY_POOL_WITHDRAW = 23,\n//       INVOKE_HOST_FUNCTION = 24,\n//       EXTEND_FOOTPRINT_TTL = 25,\n//       RESTORE_FOOTPRINT = 26\n//   };\n//\n// ===========================================================================\nxdr.enum(\"OperationType\", {\n  createAccount: 0,\n  payment: 1,\n  pathPaymentStrictReceive: 2,\n  manageSellOffer: 3,\n  createPassiveSellOffer: 4,\n  setOptions: 5,\n  changeTrust: 6,\n  allowTrust: 7,\n  accountMerge: 8,\n  inflation: 9,\n  manageData: 10,\n  bumpSequence: 11,\n  manageBuyOffer: 12,\n  pathPaymentStrictSend: 13,\n  createClaimableBalance: 14,\n  claimClaimableBalance: 15,\n  beginSponsoringFutureReserves: 16,\n  endSponsoringFutureReserves: 17,\n  revokeSponsorship: 18,\n  clawback: 19,\n  clawbackClaimableBalance: 20,\n  setTrustLineFlags: 21,\n  liquidityPoolDeposit: 22,\n  liquidityPoolWithdraw: 23,\n  invokeHostFunction: 24,\n  extendFootprintTtl: 25,\n  restoreFootprint: 26,\n});\n\n// === xdr source ============================================================\n//\n//   struct CreateAccountOp\n//   {\n//       AccountID destination; // account to create\n//       int64 startingBalance; // amount they end up with\n//   };\n//\n// ===========================================================================\nxdr.struct(\"CreateAccountOp\", [\n  [\"destination\", xdr.lookup(\"AccountId\")],\n  [\"startingBalance\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct PaymentOp\n//   {\n//       MuxedAccount destination; // recipient of the payment\n//       Asset asset;              // what they end up with\n//       int64 amount;             // amount they end up with\n//   };\n//\n// ===========================================================================\nxdr.struct(\"PaymentOp\", [\n  [\"destination\", xdr.lookup(\"MuxedAccount\")],\n  [\"asset\", xdr.lookup(\"Asset\")],\n  [\"amount\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct PathPaymentStrictReceiveOp\n//   {\n//       Asset sendAsset; // asset we pay with\n//       int64 sendMax;   // the maximum amount of sendAsset to\n//                        // send (excluding fees).\n//                        // The operation will fail if can't be met\n//   \n//       MuxedAccount destination; // recipient of the payment\n//       Asset destAsset;          // what they end up with\n//       int64 destAmount;         // amount they end up with\n//   \n//       Asset path<5>; // additional hops it must go through to get there\n//   };\n//\n// ===========================================================================\nxdr.struct(\"PathPaymentStrictReceiveOp\", [\n  [\"sendAsset\", xdr.lookup(\"Asset\")],\n  [\"sendMax\", xdr.lookup(\"Int64\")],\n  [\"destination\", xdr.lookup(\"MuxedAccount\")],\n  [\"destAsset\", xdr.lookup(\"Asset\")],\n  [\"destAmount\", xdr.lookup(\"Int64\")],\n  [\"path\", xdr.varArray(xdr.lookup(\"Asset\"), 5)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct PathPaymentStrictSendOp\n//   {\n//       Asset sendAsset;  // asset we pay with\n//       int64 sendAmount; // amount of sendAsset to send (excluding fees)\n//   \n//       MuxedAccount destination; // recipient of the payment\n//       Asset destAsset;          // what they end up with\n//       int64 destMin;            // the minimum amount of dest asset to\n//                                 // be received\n//                                 // The operation will fail if it can't be met\n//   \n//       Asset path<5>; // additional hops it must go through to get there\n//   };\n//\n// ===========================================================================\nxdr.struct(\"PathPaymentStrictSendOp\", [\n  [\"sendAsset\", xdr.lookup(\"Asset\")],\n  [\"sendAmount\", xdr.lookup(\"Int64\")],\n  [\"destination\", xdr.lookup(\"MuxedAccount\")],\n  [\"destAsset\", xdr.lookup(\"Asset\")],\n  [\"destMin\", xdr.lookup(\"Int64\")],\n  [\"path\", xdr.varArray(xdr.lookup(\"Asset\"), 5)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct ManageSellOfferOp\n//   {\n//       Asset selling;\n//       Asset buying;\n//       int64 amount; // amount being sold. if set to 0, delete the offer\n//       Price price;  // price of thing being sold in terms of what you are buying\n//   \n//       // 0=create a new offer, otherwise edit an existing offer\n//       int64 offerID;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ManageSellOfferOp\", [\n  [\"selling\", xdr.lookup(\"Asset\")],\n  [\"buying\", xdr.lookup(\"Asset\")],\n  [\"amount\", xdr.lookup(\"Int64\")],\n  [\"price\", xdr.lookup(\"Price\")],\n  [\"offerId\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct ManageBuyOfferOp\n//   {\n//       Asset selling;\n//       Asset buying;\n//       int64 buyAmount; // amount being bought. if set to 0, delete the offer\n//       Price price;     // price of thing being bought in terms of what you are\n//                        // selling\n//   \n//       // 0=create a new offer, otherwise edit an existing offer\n//       int64 offerID;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ManageBuyOfferOp\", [\n  [\"selling\", xdr.lookup(\"Asset\")],\n  [\"buying\", xdr.lookup(\"Asset\")],\n  [\"buyAmount\", xdr.lookup(\"Int64\")],\n  [\"price\", xdr.lookup(\"Price\")],\n  [\"offerId\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct CreatePassiveSellOfferOp\n//   {\n//       Asset selling; // A\n//       Asset buying;  // B\n//       int64 amount;  // amount taker gets\n//       Price price;   // cost of A in terms of B\n//   };\n//\n// ===========================================================================\nxdr.struct(\"CreatePassiveSellOfferOp\", [\n  [\"selling\", xdr.lookup(\"Asset\")],\n  [\"buying\", xdr.lookup(\"Asset\")],\n  [\"amount\", xdr.lookup(\"Int64\")],\n  [\"price\", xdr.lookup(\"Price\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SetOptionsOp\n//   {\n//       AccountID* inflationDest; // sets the inflation destination\n//   \n//       uint32* clearFlags; // which flags to clear\n//       uint32* setFlags;   // which flags to set\n//   \n//       // account threshold manipulation\n//       uint32* masterWeight; // weight of the master account\n//       uint32* lowThreshold;\n//       uint32* medThreshold;\n//       uint32* highThreshold;\n//   \n//       string32* homeDomain; // sets the home domain\n//   \n//       // Add, update or remove a signer for the account\n//       // signer is deleted if the weight is 0\n//       Signer* signer;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SetOptionsOp\", [\n  [\"inflationDest\", xdr.option(xdr.lookup(\"AccountId\"))],\n  [\"clearFlags\", xdr.option(xdr.lookup(\"Uint32\"))],\n  [\"setFlags\", xdr.option(xdr.lookup(\"Uint32\"))],\n  [\"masterWeight\", xdr.option(xdr.lookup(\"Uint32\"))],\n  [\"lowThreshold\", xdr.option(xdr.lookup(\"Uint32\"))],\n  [\"medThreshold\", xdr.option(xdr.lookup(\"Uint32\"))],\n  [\"highThreshold\", xdr.option(xdr.lookup(\"Uint32\"))],\n  [\"homeDomain\", xdr.option(xdr.lookup(\"String32\"))],\n  [\"signer\", xdr.option(xdr.lookup(\"Signer\"))],\n]);\n\n// === xdr source ============================================================\n//\n//   union ChangeTrustAsset switch (AssetType type)\n//   {\n//   case ASSET_TYPE_NATIVE: // Not credit\n//       void;\n//   \n//   case ASSET_TYPE_CREDIT_ALPHANUM4:\n//       AlphaNum4 alphaNum4;\n//   \n//   case ASSET_TYPE_CREDIT_ALPHANUM12:\n//       AlphaNum12 alphaNum12;\n//   \n//   case ASSET_TYPE_POOL_SHARE:\n//       LiquidityPoolParameters liquidityPool;\n//   \n//       // add other asset types here in the future\n//   };\n//\n// ===========================================================================\nxdr.union(\"ChangeTrustAsset\", {\n  switchOn: xdr.lookup(\"AssetType\"),\n  switchName: \"type\",\n  switches: [\n    [\"assetTypeNative\", xdr.void()],\n    [\"assetTypeCreditAlphanum4\", \"alphaNum4\"],\n    [\"assetTypeCreditAlphanum12\", \"alphaNum12\"],\n    [\"assetTypePoolShare\", \"liquidityPool\"],\n  ],\n  arms: {\n    alphaNum4: xdr.lookup(\"AlphaNum4\"),\n    alphaNum12: xdr.lookup(\"AlphaNum12\"),\n    liquidityPool: xdr.lookup(\"LiquidityPoolParameters\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct ChangeTrustOp\n//   {\n//       ChangeTrustAsset line;\n//   \n//       // if limit is set to 0, deletes the trust line\n//       int64 limit;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ChangeTrustOp\", [\n  [\"line\", xdr.lookup(\"ChangeTrustAsset\")],\n  [\"limit\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct AllowTrustOp\n//   {\n//       AccountID trustor;\n//       AssetCode asset;\n//   \n//       // One of 0, AUTHORIZED_FLAG, or AUTHORIZED_TO_MAINTAIN_LIABILITIES_FLAG\n//       uint32 authorize;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"AllowTrustOp\", [\n  [\"trustor\", xdr.lookup(\"AccountId\")],\n  [\"asset\", xdr.lookup(\"AssetCode\")],\n  [\"authorize\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct ManageDataOp\n//   {\n//       string64 dataName;\n//       DataValue* dataValue; // set to null to clear\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ManageDataOp\", [\n  [\"dataName\", xdr.lookup(\"String64\")],\n  [\"dataValue\", xdr.option(xdr.lookup(\"DataValue\"))],\n]);\n\n// === xdr source ============================================================\n//\n//   struct BumpSequenceOp\n//   {\n//       SequenceNumber bumpTo;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"BumpSequenceOp\", [\n  [\"bumpTo\", xdr.lookup(\"SequenceNumber\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct CreateClaimableBalanceOp\n//   {\n//       Asset asset;\n//       int64 amount;\n//       Claimant claimants<10>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"CreateClaimableBalanceOp\", [\n  [\"asset\", xdr.lookup(\"Asset\")],\n  [\"amount\", xdr.lookup(\"Int64\")],\n  [\"claimants\", xdr.varArray(xdr.lookup(\"Claimant\"), 10)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct ClaimClaimableBalanceOp\n//   {\n//       ClaimableBalanceID balanceID;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ClaimClaimableBalanceOp\", [\n  [\"balanceId\", xdr.lookup(\"ClaimableBalanceId\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct BeginSponsoringFutureReservesOp\n//   {\n//       AccountID sponsoredID;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"BeginSponsoringFutureReservesOp\", [\n  [\"sponsoredId\", xdr.lookup(\"AccountId\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum RevokeSponsorshipType\n//   {\n//       REVOKE_SPONSORSHIP_LEDGER_ENTRY = 0,\n//       REVOKE_SPONSORSHIP_SIGNER = 1\n//   };\n//\n// ===========================================================================\nxdr.enum(\"RevokeSponsorshipType\", {\n  revokeSponsorshipLedgerEntry: 0,\n  revokeSponsorshipSigner: 1,\n});\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           AccountID accountID;\n//           SignerKey signerKey;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"RevokeSponsorshipOpSigner\", [\n  [\"accountId\", xdr.lookup(\"AccountId\")],\n  [\"signerKey\", xdr.lookup(\"SignerKey\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union RevokeSponsorshipOp switch (RevokeSponsorshipType type)\n//   {\n//   case REVOKE_SPONSORSHIP_LEDGER_ENTRY:\n//       LedgerKey ledgerKey;\n//   case REVOKE_SPONSORSHIP_SIGNER:\n//       struct\n//       {\n//           AccountID accountID;\n//           SignerKey signerKey;\n//       } signer;\n//   };\n//\n// ===========================================================================\nxdr.union(\"RevokeSponsorshipOp\", {\n  switchOn: xdr.lookup(\"RevokeSponsorshipType\"),\n  switchName: \"type\",\n  switches: [\n    [\"revokeSponsorshipLedgerEntry\", \"ledgerKey\"],\n    [\"revokeSponsorshipSigner\", \"signer\"],\n  ],\n  arms: {\n    ledgerKey: xdr.lookup(\"LedgerKey\"),\n    signer: xdr.lookup(\"RevokeSponsorshipOpSigner\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct ClawbackOp\n//   {\n//       Asset asset;\n//       MuxedAccount from;\n//       int64 amount;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ClawbackOp\", [\n  [\"asset\", xdr.lookup(\"Asset\")],\n  [\"from\", xdr.lookup(\"MuxedAccount\")],\n  [\"amount\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct ClawbackClaimableBalanceOp\n//   {\n//       ClaimableBalanceID balanceID;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ClawbackClaimableBalanceOp\", [\n  [\"balanceId\", xdr.lookup(\"ClaimableBalanceId\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SetTrustLineFlagsOp\n//   {\n//       AccountID trustor;\n//       Asset asset;\n//   \n//       uint32 clearFlags; // which flags to clear\n//       uint32 setFlags;   // which flags to set\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SetTrustLineFlagsOp\", [\n  [\"trustor\", xdr.lookup(\"AccountId\")],\n  [\"asset\", xdr.lookup(\"Asset\")],\n  [\"clearFlags\", xdr.lookup(\"Uint32\")],\n  [\"setFlags\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   const LIQUIDITY_POOL_FEE_V18 = 30;\n//\n// ===========================================================================\nxdr.const(\"LIQUIDITY_POOL_FEE_V18\", 30);\n\n// === xdr source ============================================================\n//\n//   struct LiquidityPoolDepositOp\n//   {\n//       PoolID liquidityPoolID;\n//       int64 maxAmountA; // maximum amount of first asset to deposit\n//       int64 maxAmountB; // maximum amount of second asset to deposit\n//       Price minPrice;   // minimum depositA/depositB\n//       Price maxPrice;   // maximum depositA/depositB\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LiquidityPoolDepositOp\", [\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\n  [\"maxAmountA\", xdr.lookup(\"Int64\")],\n  [\"maxAmountB\", xdr.lookup(\"Int64\")],\n  [\"minPrice\", xdr.lookup(\"Price\")],\n  [\"maxPrice\", xdr.lookup(\"Price\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct LiquidityPoolWithdrawOp\n//   {\n//       PoolID liquidityPoolID;\n//       int64 amount;     // amount of pool shares to withdraw\n//       int64 minAmountA; // minimum amount of first asset to withdraw\n//       int64 minAmountB; // minimum amount of second asset to withdraw\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LiquidityPoolWithdrawOp\", [\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\n  [\"amount\", xdr.lookup(\"Int64\")],\n  [\"minAmountA\", xdr.lookup(\"Int64\")],\n  [\"minAmountB\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum HostFunctionType\n//   {\n//       HOST_FUNCTION_TYPE_INVOKE_CONTRACT = 0,\n//       HOST_FUNCTION_TYPE_CREATE_CONTRACT = 1,\n//       HOST_FUNCTION_TYPE_UPLOAD_CONTRACT_WASM = 2\n//   };\n//\n// ===========================================================================\nxdr.enum(\"HostFunctionType\", {\n  hostFunctionTypeInvokeContract: 0,\n  hostFunctionTypeCreateContract: 1,\n  hostFunctionTypeUploadContractWasm: 2,\n});\n\n// === xdr source ============================================================\n//\n//   enum ContractIDPreimageType\n//   {\n//       CONTRACT_ID_PREIMAGE_FROM_ADDRESS = 0,\n//       CONTRACT_ID_PREIMAGE_FROM_ASSET = 1\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ContractIdPreimageType\", {\n  contractIdPreimageFromAddress: 0,\n  contractIdPreimageFromAsset: 1,\n});\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           SCAddress address;\n//           uint256 salt;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"ContractIdPreimageFromAddress\", [\n  [\"address\", xdr.lookup(\"ScAddress\")],\n  [\"salt\", xdr.lookup(\"Uint256\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union ContractIDPreimage switch (ContractIDPreimageType type)\n//   {\n//   case CONTRACT_ID_PREIMAGE_FROM_ADDRESS:\n//       struct\n//       {\n//           SCAddress address;\n//           uint256 salt;\n//       } fromAddress;\n//   case CONTRACT_ID_PREIMAGE_FROM_ASSET:\n//       Asset fromAsset;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ContractIdPreimage\", {\n  switchOn: xdr.lookup(\"ContractIdPreimageType\"),\n  switchName: \"type\",\n  switches: [\n    [\"contractIdPreimageFromAddress\", \"fromAddress\"],\n    [\"contractIdPreimageFromAsset\", \"fromAsset\"],\n  ],\n  arms: {\n    fromAddress: xdr.lookup(\"ContractIdPreimageFromAddress\"),\n    fromAsset: xdr.lookup(\"Asset\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct CreateContractArgs\n//   {\n//       ContractIDPreimage contractIDPreimage;\n//       ContractExecutable executable;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"CreateContractArgs\", [\n  [\"contractIdPreimage\", xdr.lookup(\"ContractIdPreimage\")],\n  [\"executable\", xdr.lookup(\"ContractExecutable\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct InvokeContractArgs {\n//       SCAddress contractAddress;\n//       SCSymbol functionName;\n//       SCVal args<>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"InvokeContractArgs\", [\n  [\"contractAddress\", xdr.lookup(\"ScAddress\")],\n  [\"functionName\", xdr.lookup(\"ScSymbol\")],\n  [\"args\", xdr.varArray(xdr.lookup(\"ScVal\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   union HostFunction switch (HostFunctionType type)\n//   {\n//   case HOST_FUNCTION_TYPE_INVOKE_CONTRACT:\n//       InvokeContractArgs invokeContract;\n//   case HOST_FUNCTION_TYPE_CREATE_CONTRACT:\n//       CreateContractArgs createContract;\n//   case HOST_FUNCTION_TYPE_UPLOAD_CONTRACT_WASM:\n//       opaque wasm<>;\n//   };\n//\n// ===========================================================================\nxdr.union(\"HostFunction\", {\n  switchOn: xdr.lookup(\"HostFunctionType\"),\n  switchName: \"type\",\n  switches: [\n    [\"hostFunctionTypeInvokeContract\", \"invokeContract\"],\n    [\"hostFunctionTypeCreateContract\", \"createContract\"],\n    [\"hostFunctionTypeUploadContractWasm\", \"wasm\"],\n  ],\n  arms: {\n    invokeContract: xdr.lookup(\"InvokeContractArgs\"),\n    createContract: xdr.lookup(\"CreateContractArgs\"),\n    wasm: xdr.varOpaque(),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum SorobanAuthorizedFunctionType\n//   {\n//       SOROBAN_AUTHORIZED_FUNCTION_TYPE_CONTRACT_FN = 0,\n//       SOROBAN_AUTHORIZED_FUNCTION_TYPE_CREATE_CONTRACT_HOST_FN = 1\n//   };\n//\n// ===========================================================================\nxdr.enum(\"SorobanAuthorizedFunctionType\", {\n  sorobanAuthorizedFunctionTypeContractFn: 0,\n  sorobanAuthorizedFunctionTypeCreateContractHostFn: 1,\n});\n\n// === xdr source ============================================================\n//\n//   union SorobanAuthorizedFunction switch (SorobanAuthorizedFunctionType type)\n//   {\n//   case SOROBAN_AUTHORIZED_FUNCTION_TYPE_CONTRACT_FN:\n//       InvokeContractArgs contractFn;\n//   case SOROBAN_AUTHORIZED_FUNCTION_TYPE_CREATE_CONTRACT_HOST_FN:\n//       CreateContractArgs createContractHostFn;\n//   };\n//\n// ===========================================================================\nxdr.union(\"SorobanAuthorizedFunction\", {\n  switchOn: xdr.lookup(\"SorobanAuthorizedFunctionType\"),\n  switchName: \"type\",\n  switches: [\n    [\"sorobanAuthorizedFunctionTypeContractFn\", \"contractFn\"],\n    [\"sorobanAuthorizedFunctionTypeCreateContractHostFn\", \"createContractHostFn\"],\n  ],\n  arms: {\n    contractFn: xdr.lookup(\"InvokeContractArgs\"),\n    createContractHostFn: xdr.lookup(\"CreateContractArgs\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct SorobanAuthorizedInvocation\n//   {\n//       SorobanAuthorizedFunction function;\n//       SorobanAuthorizedInvocation subInvocations<>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SorobanAuthorizedInvocation\", [\n  [\"function\", xdr.lookup(\"SorobanAuthorizedFunction\")],\n  [\"subInvocations\", xdr.varArray(xdr.lookup(\"SorobanAuthorizedInvocation\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SorobanAddressCredentials\n//   {\n//       SCAddress address;\n//       int64 nonce;\n//       uint32 signatureExpirationLedger;    \n//       SCVal signature;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SorobanAddressCredentials\", [\n  [\"address\", xdr.lookup(\"ScAddress\")],\n  [\"nonce\", xdr.lookup(\"Int64\")],\n  [\"signatureExpirationLedger\", xdr.lookup(\"Uint32\")],\n  [\"signature\", xdr.lookup(\"ScVal\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum SorobanCredentialsType\n//   {\n//       SOROBAN_CREDENTIALS_SOURCE_ACCOUNT = 0,\n//       SOROBAN_CREDENTIALS_ADDRESS = 1\n//   };\n//\n// ===========================================================================\nxdr.enum(\"SorobanCredentialsType\", {\n  sorobanCredentialsSourceAccount: 0,\n  sorobanCredentialsAddress: 1,\n});\n\n// === xdr source ============================================================\n//\n//   union SorobanCredentials switch (SorobanCredentialsType type)\n//   {\n//   case SOROBAN_CREDENTIALS_SOURCE_ACCOUNT:\n//       void;\n//   case SOROBAN_CREDENTIALS_ADDRESS:\n//       SorobanAddressCredentials address;\n//   };\n//\n// ===========================================================================\nxdr.union(\"SorobanCredentials\", {\n  switchOn: xdr.lookup(\"SorobanCredentialsType\"),\n  switchName: \"type\",\n  switches: [\n    [\"sorobanCredentialsSourceAccount\", xdr.void()],\n    [\"sorobanCredentialsAddress\", \"address\"],\n  ],\n  arms: {\n    address: xdr.lookup(\"SorobanAddressCredentials\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct SorobanAuthorizationEntry\n//   {\n//       SorobanCredentials credentials;\n//       SorobanAuthorizedInvocation rootInvocation;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SorobanAuthorizationEntry\", [\n  [\"credentials\", xdr.lookup(\"SorobanCredentials\")],\n  [\"rootInvocation\", xdr.lookup(\"SorobanAuthorizedInvocation\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct InvokeHostFunctionOp\n//   {\n//       // Host function to invoke.\n//       HostFunction hostFunction;\n//       // Per-address authorizations for this host function.\n//       SorobanAuthorizationEntry auth<>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"InvokeHostFunctionOp\", [\n  [\"hostFunction\", xdr.lookup(\"HostFunction\")],\n  [\"auth\", xdr.varArray(xdr.lookup(\"SorobanAuthorizationEntry\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct ExtendFootprintTTLOp\n//   {\n//       ExtensionPoint ext;\n//       uint32 extendTo;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ExtendFootprintTtlOp\", [\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\n  [\"extendTo\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct RestoreFootprintOp\n//   {\n//       ExtensionPoint ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"RestoreFootprintOp\", [\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (OperationType type)\n//       {\n//       case CREATE_ACCOUNT:\n//           CreateAccountOp createAccountOp;\n//       case PAYMENT:\n//           PaymentOp paymentOp;\n//       case PATH_PAYMENT_STRICT_RECEIVE:\n//           PathPaymentStrictReceiveOp pathPaymentStrictReceiveOp;\n//       case MANAGE_SELL_OFFER:\n//           ManageSellOfferOp manageSellOfferOp;\n//       case CREATE_PASSIVE_SELL_OFFER:\n//           CreatePassiveSellOfferOp createPassiveSellOfferOp;\n//       case SET_OPTIONS:\n//           SetOptionsOp setOptionsOp;\n//       case CHANGE_TRUST:\n//           ChangeTrustOp changeTrustOp;\n//       case ALLOW_TRUST:\n//           AllowTrustOp allowTrustOp;\n//       case ACCOUNT_MERGE:\n//           MuxedAccount destination;\n//       case INFLATION:\n//           void;\n//       case MANAGE_DATA:\n//           ManageDataOp manageDataOp;\n//       case BUMP_SEQUENCE:\n//           BumpSequenceOp bumpSequenceOp;\n//       case MANAGE_BUY_OFFER:\n//           ManageBuyOfferOp manageBuyOfferOp;\n//       case PATH_PAYMENT_STRICT_SEND:\n//           PathPaymentStrictSendOp pathPaymentStrictSendOp;\n//       case CREATE_CLAIMABLE_BALANCE:\n//           CreateClaimableBalanceOp createClaimableBalanceOp;\n//       case CLAIM_CLAIMABLE_BALANCE:\n//           ClaimClaimableBalanceOp claimClaimableBalanceOp;\n//       case BEGIN_SPONSORING_FUTURE_RESERVES:\n//           BeginSponsoringFutureReservesOp beginSponsoringFutureReservesOp;\n//       case END_SPONSORING_FUTURE_RESERVES:\n//           void;\n//       case REVOKE_SPONSORSHIP:\n//           RevokeSponsorshipOp revokeSponsorshipOp;\n//       case CLAWBACK:\n//           ClawbackOp clawbackOp;\n//       case CLAWBACK_CLAIMABLE_BALANCE:\n//           ClawbackClaimableBalanceOp clawbackClaimableBalanceOp;\n//       case SET_TRUST_LINE_FLAGS:\n//           SetTrustLineFlagsOp setTrustLineFlagsOp;\n//       case LIQUIDITY_POOL_DEPOSIT:\n//           LiquidityPoolDepositOp liquidityPoolDepositOp;\n//       case LIQUIDITY_POOL_WITHDRAW:\n//           LiquidityPoolWithdrawOp liquidityPoolWithdrawOp;\n//       case INVOKE_HOST_FUNCTION:\n//           InvokeHostFunctionOp invokeHostFunctionOp;\n//       case EXTEND_FOOTPRINT_TTL:\n//           ExtendFootprintTTLOp extendFootprintTTLOp;\n//       case RESTORE_FOOTPRINT:\n//           RestoreFootprintOp restoreFootprintOp;\n//       }\n//\n// ===========================================================================\nxdr.union(\"OperationBody\", {\n  switchOn: xdr.lookup(\"OperationType\"),\n  switchName: \"type\",\n  switches: [\n    [\"createAccount\", \"createAccountOp\"],\n    [\"payment\", \"paymentOp\"],\n    [\"pathPaymentStrictReceive\", \"pathPaymentStrictReceiveOp\"],\n    [\"manageSellOffer\", \"manageSellOfferOp\"],\n    [\"createPassiveSellOffer\", \"createPassiveSellOfferOp\"],\n    [\"setOptions\", \"setOptionsOp\"],\n    [\"changeTrust\", \"changeTrustOp\"],\n    [\"allowTrust\", \"allowTrustOp\"],\n    [\"accountMerge\", \"destination\"],\n    [\"inflation\", xdr.void()],\n    [\"manageData\", \"manageDataOp\"],\n    [\"bumpSequence\", \"bumpSequenceOp\"],\n    [\"manageBuyOffer\", \"manageBuyOfferOp\"],\n    [\"pathPaymentStrictSend\", \"pathPaymentStrictSendOp\"],\n    [\"createClaimableBalance\", \"createClaimableBalanceOp\"],\n    [\"claimClaimableBalance\", \"claimClaimableBalanceOp\"],\n    [\"beginSponsoringFutureReserves\", \"beginSponsoringFutureReservesOp\"],\n    [\"endSponsoringFutureReserves\", xdr.void()],\n    [\"revokeSponsorship\", \"revokeSponsorshipOp\"],\n    [\"clawback\", \"clawbackOp\"],\n    [\"clawbackClaimableBalance\", \"clawbackClaimableBalanceOp\"],\n    [\"setTrustLineFlags\", \"setTrustLineFlagsOp\"],\n    [\"liquidityPoolDeposit\", \"liquidityPoolDepositOp\"],\n    [\"liquidityPoolWithdraw\", \"liquidityPoolWithdrawOp\"],\n    [\"invokeHostFunction\", \"invokeHostFunctionOp\"],\n    [\"extendFootprintTtl\", \"extendFootprintTtlOp\"],\n    [\"restoreFootprint\", \"restoreFootprintOp\"],\n  ],\n  arms: {\n    createAccountOp: xdr.lookup(\"CreateAccountOp\"),\n    paymentOp: xdr.lookup(\"PaymentOp\"),\n    pathPaymentStrictReceiveOp: xdr.lookup(\"PathPaymentStrictReceiveOp\"),\n    manageSellOfferOp: xdr.lookup(\"ManageSellOfferOp\"),\n    createPassiveSellOfferOp: xdr.lookup(\"CreatePassiveSellOfferOp\"),\n    setOptionsOp: xdr.lookup(\"SetOptionsOp\"),\n    changeTrustOp: xdr.lookup(\"ChangeTrustOp\"),\n    allowTrustOp: xdr.lookup(\"AllowTrustOp\"),\n    destination: xdr.lookup(\"MuxedAccount\"),\n    manageDataOp: xdr.lookup(\"ManageDataOp\"),\n    bumpSequenceOp: xdr.lookup(\"BumpSequenceOp\"),\n    manageBuyOfferOp: xdr.lookup(\"ManageBuyOfferOp\"),\n    pathPaymentStrictSendOp: xdr.lookup(\"PathPaymentStrictSendOp\"),\n    createClaimableBalanceOp: xdr.lookup(\"CreateClaimableBalanceOp\"),\n    claimClaimableBalanceOp: xdr.lookup(\"ClaimClaimableBalanceOp\"),\n    beginSponsoringFutureReservesOp: xdr.lookup(\"BeginSponsoringFutureReservesOp\"),\n    revokeSponsorshipOp: xdr.lookup(\"RevokeSponsorshipOp\"),\n    clawbackOp: xdr.lookup(\"ClawbackOp\"),\n    clawbackClaimableBalanceOp: xdr.lookup(\"ClawbackClaimableBalanceOp\"),\n    setTrustLineFlagsOp: xdr.lookup(\"SetTrustLineFlagsOp\"),\n    liquidityPoolDepositOp: xdr.lookup(\"LiquidityPoolDepositOp\"),\n    liquidityPoolWithdrawOp: xdr.lookup(\"LiquidityPoolWithdrawOp\"),\n    invokeHostFunctionOp: xdr.lookup(\"InvokeHostFunctionOp\"),\n    extendFootprintTtlOp: xdr.lookup(\"ExtendFootprintTtlOp\"),\n    restoreFootprintOp: xdr.lookup(\"RestoreFootprintOp\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct Operation\n//   {\n//       // sourceAccount is the account used to run the operation\n//       // if not set, the runtime defaults to \"sourceAccount\" specified at\n//       // the transaction level\n//       MuxedAccount* sourceAccount;\n//   \n//       union switch (OperationType type)\n//       {\n//       case CREATE_ACCOUNT:\n//           CreateAccountOp createAccountOp;\n//       case PAYMENT:\n//           PaymentOp paymentOp;\n//       case PATH_PAYMENT_STRICT_RECEIVE:\n//           PathPaymentStrictReceiveOp pathPaymentStrictReceiveOp;\n//       case MANAGE_SELL_OFFER:\n//           ManageSellOfferOp manageSellOfferOp;\n//       case CREATE_PASSIVE_SELL_OFFER:\n//           CreatePassiveSellOfferOp createPassiveSellOfferOp;\n//       case SET_OPTIONS:\n//           SetOptionsOp setOptionsOp;\n//       case CHANGE_TRUST:\n//           ChangeTrustOp changeTrustOp;\n//       case ALLOW_TRUST:\n//           AllowTrustOp allowTrustOp;\n//       case ACCOUNT_MERGE:\n//           MuxedAccount destination;\n//       case INFLATION:\n//           void;\n//       case MANAGE_DATA:\n//           ManageDataOp manageDataOp;\n//       case BUMP_SEQUENCE:\n//           BumpSequenceOp bumpSequenceOp;\n//       case MANAGE_BUY_OFFER:\n//           ManageBuyOfferOp manageBuyOfferOp;\n//       case PATH_PAYMENT_STRICT_SEND:\n//           PathPaymentStrictSendOp pathPaymentStrictSendOp;\n//       case CREATE_CLAIMABLE_BALANCE:\n//           CreateClaimableBalanceOp createClaimableBalanceOp;\n//       case CLAIM_CLAIMABLE_BALANCE:\n//           ClaimClaimableBalanceOp claimClaimableBalanceOp;\n//       case BEGIN_SPONSORING_FUTURE_RESERVES:\n//           BeginSponsoringFutureReservesOp beginSponsoringFutureReservesOp;\n//       case END_SPONSORING_FUTURE_RESERVES:\n//           void;\n//       case REVOKE_SPONSORSHIP:\n//           RevokeSponsorshipOp revokeSponsorshipOp;\n//       case CLAWBACK:\n//           ClawbackOp clawbackOp;\n//       case CLAWBACK_CLAIMABLE_BALANCE:\n//           ClawbackClaimableBalanceOp clawbackClaimableBalanceOp;\n//       case SET_TRUST_LINE_FLAGS:\n//           SetTrustLineFlagsOp setTrustLineFlagsOp;\n//       case LIQUIDITY_POOL_DEPOSIT:\n//           LiquidityPoolDepositOp liquidityPoolDepositOp;\n//       case LIQUIDITY_POOL_WITHDRAW:\n//           LiquidityPoolWithdrawOp liquidityPoolWithdrawOp;\n//       case INVOKE_HOST_FUNCTION:\n//           InvokeHostFunctionOp invokeHostFunctionOp;\n//       case EXTEND_FOOTPRINT_TTL:\n//           ExtendFootprintTTLOp extendFootprintTTLOp;\n//       case RESTORE_FOOTPRINT:\n//           RestoreFootprintOp restoreFootprintOp;\n//       }\n//       body;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"Operation\", [\n  [\"sourceAccount\", xdr.option(xdr.lookup(\"MuxedAccount\"))],\n  [\"body\", xdr.lookup(\"OperationBody\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           AccountID sourceAccount;\n//           SequenceNumber seqNum;\n//           uint32 opNum;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"HashIdPreimageOperationId\", [\n  [\"sourceAccount\", xdr.lookup(\"AccountId\")],\n  [\"seqNum\", xdr.lookup(\"SequenceNumber\")],\n  [\"opNum\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           AccountID sourceAccount;\n//           SequenceNumber seqNum; \n//           uint32 opNum;\n//           PoolID liquidityPoolID;\n//           Asset asset;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"HashIdPreimageRevokeId\", [\n  [\"sourceAccount\", xdr.lookup(\"AccountId\")],\n  [\"seqNum\", xdr.lookup(\"SequenceNumber\")],\n  [\"opNum\", xdr.lookup(\"Uint32\")],\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\n  [\"asset\", xdr.lookup(\"Asset\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           Hash networkID;\n//           ContractIDPreimage contractIDPreimage;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"HashIdPreimageContractId\", [\n  [\"networkId\", xdr.lookup(\"Hash\")],\n  [\"contractIdPreimage\", xdr.lookup(\"ContractIdPreimage\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           Hash networkID;\n//           int64 nonce;\n//           uint32 signatureExpirationLedger;\n//           SorobanAuthorizedInvocation invocation;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"HashIdPreimageSorobanAuthorization\", [\n  [\"networkId\", xdr.lookup(\"Hash\")],\n  [\"nonce\", xdr.lookup(\"Int64\")],\n  [\"signatureExpirationLedger\", xdr.lookup(\"Uint32\")],\n  [\"invocation\", xdr.lookup(\"SorobanAuthorizedInvocation\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union HashIDPreimage switch (EnvelopeType type)\n//   {\n//   case ENVELOPE_TYPE_OP_ID:\n//       struct\n//       {\n//           AccountID sourceAccount;\n//           SequenceNumber seqNum;\n//           uint32 opNum;\n//       } operationID;\n//   case ENVELOPE_TYPE_POOL_REVOKE_OP_ID:\n//       struct\n//       {\n//           AccountID sourceAccount;\n//           SequenceNumber seqNum; \n//           uint32 opNum;\n//           PoolID liquidityPoolID;\n//           Asset asset;\n//       } revokeID;\n//   case ENVELOPE_TYPE_CONTRACT_ID:\n//       struct\n//       {\n//           Hash networkID;\n//           ContractIDPreimage contractIDPreimage;\n//       } contractID;\n//   case ENVELOPE_TYPE_SOROBAN_AUTHORIZATION:\n//       struct\n//       {\n//           Hash networkID;\n//           int64 nonce;\n//           uint32 signatureExpirationLedger;\n//           SorobanAuthorizedInvocation invocation;\n//       } sorobanAuthorization;\n//   };\n//\n// ===========================================================================\nxdr.union(\"HashIdPreimage\", {\n  switchOn: xdr.lookup(\"EnvelopeType\"),\n  switchName: \"type\",\n  switches: [\n    [\"envelopeTypeOpId\", \"operationId\"],\n    [\"envelopeTypePoolRevokeOpId\", \"revokeId\"],\n    [\"envelopeTypeContractId\", \"contractId\"],\n    [\"envelopeTypeSorobanAuthorization\", \"sorobanAuthorization\"],\n  ],\n  arms: {\n    operationId: xdr.lookup(\"HashIdPreimageOperationId\"),\n    revokeId: xdr.lookup(\"HashIdPreimageRevokeId\"),\n    contractId: xdr.lookup(\"HashIdPreimageContractId\"),\n    sorobanAuthorization: xdr.lookup(\"HashIdPreimageSorobanAuthorization\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum MemoType\n//   {\n//       MEMO_NONE = 0,\n//       MEMO_TEXT = 1,\n//       MEMO_ID = 2,\n//       MEMO_HASH = 3,\n//       MEMO_RETURN = 4\n//   };\n//\n// ===========================================================================\nxdr.enum(\"MemoType\", {\n  memoNone: 0,\n  memoText: 1,\n  memoId: 2,\n  memoHash: 3,\n  memoReturn: 4,\n});\n\n// === xdr source ============================================================\n//\n//   union Memo switch (MemoType type)\n//   {\n//   case MEMO_NONE:\n//       void;\n//   case MEMO_TEXT:\n//       string text<28>;\n//   case MEMO_ID:\n//       uint64 id;\n//   case MEMO_HASH:\n//       Hash hash; // the hash of what to pull from the content server\n//   case MEMO_RETURN:\n//       Hash retHash; // the hash of the tx you are rejecting\n//   };\n//\n// ===========================================================================\nxdr.union(\"Memo\", {\n  switchOn: xdr.lookup(\"MemoType\"),\n  switchName: \"type\",\n  switches: [\n    [\"memoNone\", xdr.void()],\n    [\"memoText\", \"text\"],\n    [\"memoId\", \"id\"],\n    [\"memoHash\", \"hash\"],\n    [\"memoReturn\", \"retHash\"],\n  ],\n  arms: {\n    text: xdr.string(28),\n    id: xdr.lookup(\"Uint64\"),\n    hash: xdr.lookup(\"Hash\"),\n    retHash: xdr.lookup(\"Hash\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct TimeBounds\n//   {\n//       TimePoint minTime;\n//       TimePoint maxTime; // 0 here means no maxTime\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TimeBounds\", [\n  [\"minTime\", xdr.lookup(\"TimePoint\")],\n  [\"maxTime\", xdr.lookup(\"TimePoint\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct LedgerBounds\n//   {\n//       uint32 minLedger;\n//       uint32 maxLedger; // 0 here means no maxLedger\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LedgerBounds\", [\n  [\"minLedger\", xdr.lookup(\"Uint32\")],\n  [\"maxLedger\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct PreconditionsV2\n//   {\n//       TimeBounds* timeBounds;\n//   \n//       // Transaction only valid for ledger numbers n such that\n//       // minLedger <= n < maxLedger (if maxLedger == 0, then\n//       // only minLedger is checked)\n//       LedgerBounds* ledgerBounds;\n//   \n//       // If NULL, only valid when sourceAccount's sequence number\n//       // is seqNum - 1.  Otherwise, valid when sourceAccount's\n//       // sequence number n satisfies minSeqNum <= n < tx.seqNum.\n//       // Note that after execution the account's sequence number\n//       // is always raised to tx.seqNum, and a transaction is not\n//       // valid if tx.seqNum is too high to ensure replay protection.\n//       SequenceNumber* minSeqNum;\n//   \n//       // For the transaction to be valid, the current ledger time must\n//       // be at least minSeqAge greater than sourceAccount's seqTime.\n//       Duration minSeqAge;\n//   \n//       // For the transaction to be valid, the current ledger number\n//       // must be at least minSeqLedgerGap greater than sourceAccount's\n//       // seqLedger.\n//       uint32 minSeqLedgerGap;\n//   \n//       // For the transaction to be valid, there must be a signature\n//       // corresponding to every Signer in this array, even if the\n//       // signature is not otherwise required by the sourceAccount or\n//       // operations.\n//       SignerKey extraSigners<2>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"PreconditionsV2\", [\n  [\"timeBounds\", xdr.option(xdr.lookup(\"TimeBounds\"))],\n  [\"ledgerBounds\", xdr.option(xdr.lookup(\"LedgerBounds\"))],\n  [\"minSeqNum\", xdr.option(xdr.lookup(\"SequenceNumber\"))],\n  [\"minSeqAge\", xdr.lookup(\"Duration\")],\n  [\"minSeqLedgerGap\", xdr.lookup(\"Uint32\")],\n  [\"extraSigners\", xdr.varArray(xdr.lookup(\"SignerKey\"), 2)],\n]);\n\n// === xdr source ============================================================\n//\n//   enum PreconditionType\n//   {\n//       PRECOND_NONE = 0,\n//       PRECOND_TIME = 1,\n//       PRECOND_V2 = 2\n//   };\n//\n// ===========================================================================\nxdr.enum(\"PreconditionType\", {\n  precondNone: 0,\n  precondTime: 1,\n  precondV2: 2,\n});\n\n// === xdr source ============================================================\n//\n//   union Preconditions switch (PreconditionType type)\n//   {\n//   case PRECOND_NONE:\n//       void;\n//   case PRECOND_TIME:\n//       TimeBounds timeBounds;\n//   case PRECOND_V2:\n//       PreconditionsV2 v2;\n//   };\n//\n// ===========================================================================\nxdr.union(\"Preconditions\", {\n  switchOn: xdr.lookup(\"PreconditionType\"),\n  switchName: \"type\",\n  switches: [\n    [\"precondNone\", xdr.void()],\n    [\"precondTime\", \"timeBounds\"],\n    [\"precondV2\", \"v2\"],\n  ],\n  arms: {\n    timeBounds: xdr.lookup(\"TimeBounds\"),\n    v2: xdr.lookup(\"PreconditionsV2\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct LedgerFootprint\n//   {\n//       LedgerKey readOnly<>;\n//       LedgerKey readWrite<>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LedgerFootprint\", [\n  [\"readOnly\", xdr.varArray(xdr.lookup(\"LedgerKey\"), 2147483647)],\n  [\"readWrite\", xdr.varArray(xdr.lookup(\"LedgerKey\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SorobanResources\n//   {   \n//       // The ledger footprint of the transaction.\n//       LedgerFootprint footprint;\n//       // The maximum number of instructions this transaction can use\n//       uint32 instructions; \n//   \n//       // The maximum number of bytes this transaction can read from ledger\n//       uint32 readBytes;\n//       // The maximum number of bytes this transaction can write to ledger\n//       uint32 writeBytes;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SorobanResources\", [\n  [\"footprint\", xdr.lookup(\"LedgerFootprint\")],\n  [\"instructions\", xdr.lookup(\"Uint32\")],\n  [\"readBytes\", xdr.lookup(\"Uint32\")],\n  [\"writeBytes\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SorobanTransactionData\n//   {\n//       ExtensionPoint ext;\n//       SorobanResources resources;\n//       // Amount of the transaction `fee` allocated to the Soroban resource fees.\n//       // The fraction of `resourceFee` corresponding to `resources` specified \n//       // above is *not* refundable (i.e. fees for instructions, ledger I/O), as\n//       // well as fees for the transaction size.\n//       // The remaining part of the fee is refundable and the charged value is\n//       // based on the actual consumption of refundable resources (events, ledger\n//       // rent bumps).\n//       // The `inclusionFee` used for prioritization of the transaction is defined\n//       // as `tx.fee - resourceFee`.\n//       int64 resourceFee;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SorobanTransactionData\", [\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\n  [\"resources\", xdr.lookup(\"SorobanResources\")],\n  [\"resourceFee\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"TransactionV0Ext\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct TransactionV0\n//   {\n//       opaque sourceAccountDilithium2[1312];\n//       uint32 fee;\n//       SequenceNumber seqNum;\n//       TimeBounds* timeBounds;\n//       Memo memo;\n//       Operation operations<MAX_OPS_PER_TX>;\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionV0\", [\n  [\"sourceAccountDilithium2\", xdr.opaque(1312)],\n  [\"fee\", xdr.lookup(\"Uint32\")],\n  [\"seqNum\", xdr.lookup(\"SequenceNumber\")],\n  [\"timeBounds\", xdr.option(xdr.lookup(\"TimeBounds\"))],\n  [\"memo\", xdr.lookup(\"Memo\")],\n  [\"operations\", xdr.varArray(xdr.lookup(\"Operation\"), xdr.lookup(\"MAX_OPS_PER_TX\"))],\n  [\"ext\", xdr.lookup(\"TransactionV0Ext\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct TransactionV0Envelope\n//   {\n//       TransactionV0 tx;\n//       /* Each decorated signature is a signature over the SHA256 hash of\n//        * a TransactionSignaturePayload */\n//       DecoratedSignature signatures<20>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionV0Envelope\", [\n  [\"tx\", xdr.lookup(\"TransactionV0\")],\n  [\"signatures\", xdr.varArray(xdr.lookup(\"DecoratedSignature\"), 20)],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           SorobanTransactionData sorobanData;\n//       }\n//\n// ===========================================================================\nxdr.union(\"TransactionExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n    [1, \"sorobanData\"],\n  ],\n  arms: {\n    sorobanData: xdr.lookup(\"SorobanTransactionData\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct Transaction\n//   {\n//       // account used to run the transaction\n//       MuxedAccount sourceAccount;\n//   \n//       // the fee the sourceAccount will pay\n//       uint32 fee;\n//   \n//       // sequence number to consume in the account\n//       SequenceNumber seqNum;\n//   \n//       // validity conditions\n//       Preconditions cond;\n//   \n//       Memo memo;\n//   \n//       Operation operations<MAX_OPS_PER_TX>;\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           SorobanTransactionData sorobanData;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"Transaction\", [\n  [\"sourceAccount\", xdr.lookup(\"MuxedAccount\")],\n  [\"fee\", xdr.lookup(\"Uint32\")],\n  [\"seqNum\", xdr.lookup(\"SequenceNumber\")],\n  [\"cond\", xdr.lookup(\"Preconditions\")],\n  [\"memo\", xdr.lookup(\"Memo\")],\n  [\"operations\", xdr.varArray(xdr.lookup(\"Operation\"), xdr.lookup(\"MAX_OPS_PER_TX\"))],\n  [\"ext\", xdr.lookup(\"TransactionExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct TransactionV1Envelope\n//   {\n//       Transaction tx;\n//       /* Each decorated signature is a signature over the SHA256 hash of\n//        * a TransactionSignaturePayload */\n//       DecoratedSignature signatures<20>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionV1Envelope\", [\n  [\"tx\", xdr.lookup(\"Transaction\")],\n  [\"signatures\", xdr.varArray(xdr.lookup(\"DecoratedSignature\"), 20)],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (EnvelopeType type)\n//       {\n//       case ENVELOPE_TYPE_TX:\n//           TransactionV1Envelope v1;\n//       }\n//\n// ===========================================================================\nxdr.union(\"FeeBumpTransactionInnerTx\", {\n  switchOn: xdr.lookup(\"EnvelopeType\"),\n  switchName: \"type\",\n  switches: [\n    [\"envelopeTypeTx\", \"v1\"],\n  ],\n  arms: {\n    v1: xdr.lookup(\"TransactionV1Envelope\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"FeeBumpTransactionExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct FeeBumpTransaction\n//   {\n//       MuxedAccount feeSource;\n//       int64 fee;\n//       union switch (EnvelopeType type)\n//       {\n//       case ENVELOPE_TYPE_TX:\n//           TransactionV1Envelope v1;\n//       }\n//       innerTx;\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"FeeBumpTransaction\", [\n  [\"feeSource\", xdr.lookup(\"MuxedAccount\")],\n  [\"fee\", xdr.lookup(\"Int64\")],\n  [\"innerTx\", xdr.lookup(\"FeeBumpTransactionInnerTx\")],\n  [\"ext\", xdr.lookup(\"FeeBumpTransactionExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct FeeBumpTransactionEnvelope\n//   {\n//       FeeBumpTransaction tx;\n//       /* Each decorated signature is a signature over the SHA256 hash of\n//        * a TransactionSignaturePayload */\n//       DecoratedSignature signatures<20>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"FeeBumpTransactionEnvelope\", [\n  [\"tx\", xdr.lookup(\"FeeBumpTransaction\")],\n  [\"signatures\", xdr.varArray(xdr.lookup(\"DecoratedSignature\"), 20)],\n]);\n\n// === xdr source ============================================================\n//\n//   union TransactionEnvelope switch (EnvelopeType type)\n//   {\n//   case ENVELOPE_TYPE_TX_V0:\n//       TransactionV0Envelope v0;\n//   case ENVELOPE_TYPE_TX:\n//       TransactionV1Envelope v1;\n//   case ENVELOPE_TYPE_TX_FEE_BUMP:\n//       FeeBumpTransactionEnvelope feeBump;\n//   };\n//\n// ===========================================================================\nxdr.union(\"TransactionEnvelope\", {\n  switchOn: xdr.lookup(\"EnvelopeType\"),\n  switchName: \"type\",\n  switches: [\n    [\"envelopeTypeTxV0\", \"v0\"],\n    [\"envelopeTypeTx\", \"v1\"],\n    [\"envelopeTypeTxFeeBump\", \"feeBump\"],\n  ],\n  arms: {\n    v0: xdr.lookup(\"TransactionV0Envelope\"),\n    v1: xdr.lookup(\"TransactionV1Envelope\"),\n    feeBump: xdr.lookup(\"FeeBumpTransactionEnvelope\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   union switch (EnvelopeType type)\n//       {\n//       // Backwards Compatibility: Use ENVELOPE_TYPE_TX to sign ENVELOPE_TYPE_TX_V0\n//       case ENVELOPE_TYPE_TX:\n//           Transaction tx;\n//       case ENVELOPE_TYPE_TX_FEE_BUMP:\n//           FeeBumpTransaction feeBump;\n//       }\n//\n// ===========================================================================\nxdr.union(\"TransactionSignaturePayloadTaggedTransaction\", {\n  switchOn: xdr.lookup(\"EnvelopeType\"),\n  switchName: \"type\",\n  switches: [\n    [\"envelopeTypeTx\", \"tx\"],\n    [\"envelopeTypeTxFeeBump\", \"feeBump\"],\n  ],\n  arms: {\n    tx: xdr.lookup(\"Transaction\"),\n    feeBump: xdr.lookup(\"FeeBumpTransaction\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct TransactionSignaturePayload\n//   {\n//       Hash networkId;\n//       union switch (EnvelopeType type)\n//       {\n//       // Backwards Compatibility: Use ENVELOPE_TYPE_TX to sign ENVELOPE_TYPE_TX_V0\n//       case ENVELOPE_TYPE_TX:\n//           Transaction tx;\n//       case ENVELOPE_TYPE_TX_FEE_BUMP:\n//           FeeBumpTransaction feeBump;\n//       }\n//       taggedTransaction;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionSignaturePayload\", [\n  [\"networkId\", xdr.lookup(\"Hash\")],\n  [\"taggedTransaction\", xdr.lookup(\"TransactionSignaturePayloadTaggedTransaction\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum ClaimAtomType\n//   {\n//       CLAIM_ATOM_TYPE_V0 = 0,\n//       CLAIM_ATOM_TYPE_ORDER_BOOK = 1,\n//       CLAIM_ATOM_TYPE_LIQUIDITY_POOL = 2\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ClaimAtomType\", {\n  claimAtomTypeV0: 0,\n  claimAtomTypeOrderBook: 1,\n  claimAtomTypeLiquidityPool: 2,\n});\n\n// === xdr source ============================================================\n//\n//   struct ClaimOfferAtomV0\n//   {\n//       // emitted to identify the offer\n//       opaque sellerDilithium2[1312]; // Account that owns the offer\n//       int64 offerID;\n//   \n//       // amount and asset taken from the owner\n//       Asset assetSold;\n//       int64 amountSold;\n//   \n//       // amount and asset sent to the owner\n//       Asset assetBought;\n//       int64 amountBought;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ClaimOfferAtomV0\", [\n  [\"sellerDilithium2\", xdr.opaque(1312)],\n  [\"offerId\", xdr.lookup(\"Int64\")],\n  [\"assetSold\", xdr.lookup(\"Asset\")],\n  [\"amountSold\", xdr.lookup(\"Int64\")],\n  [\"assetBought\", xdr.lookup(\"Asset\")],\n  [\"amountBought\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct ClaimOfferAtom\n//   {\n//       // emitted to identify the offer\n//       AccountID sellerID; // Account that owns the offer\n//       int64 offerID;\n//   \n//       // amount and asset taken from the owner\n//       Asset assetSold;\n//       int64 amountSold;\n//   \n//       // amount and asset sent to the owner\n//       Asset assetBought;\n//       int64 amountBought;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ClaimOfferAtom\", [\n  [\"sellerId\", xdr.lookup(\"AccountId\")],\n  [\"offerId\", xdr.lookup(\"Int64\")],\n  [\"assetSold\", xdr.lookup(\"Asset\")],\n  [\"amountSold\", xdr.lookup(\"Int64\")],\n  [\"assetBought\", xdr.lookup(\"Asset\")],\n  [\"amountBought\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct ClaimLiquidityAtom\n//   {\n//       PoolID liquidityPoolID;\n//   \n//       // amount and asset taken from the pool\n//       Asset assetSold;\n//       int64 amountSold;\n//   \n//       // amount and asset sent to the pool\n//       Asset assetBought;\n//       int64 amountBought;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ClaimLiquidityAtom\", [\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\n  [\"assetSold\", xdr.lookup(\"Asset\")],\n  [\"amountSold\", xdr.lookup(\"Int64\")],\n  [\"assetBought\", xdr.lookup(\"Asset\")],\n  [\"amountBought\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union ClaimAtom switch (ClaimAtomType type)\n//   {\n//   case CLAIM_ATOM_TYPE_V0:\n//       ClaimOfferAtomV0 v0;\n//   case CLAIM_ATOM_TYPE_ORDER_BOOK:\n//       ClaimOfferAtom orderBook;\n//   case CLAIM_ATOM_TYPE_LIQUIDITY_POOL:\n//       ClaimLiquidityAtom liquidityPool;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ClaimAtom\", {\n  switchOn: xdr.lookup(\"ClaimAtomType\"),\n  switchName: \"type\",\n  switches: [\n    [\"claimAtomTypeV0\", \"v0\"],\n    [\"claimAtomTypeOrderBook\", \"orderBook\"],\n    [\"claimAtomTypeLiquidityPool\", \"liquidityPool\"],\n  ],\n  arms: {\n    v0: xdr.lookup(\"ClaimOfferAtomV0\"),\n    orderBook: xdr.lookup(\"ClaimOfferAtom\"),\n    liquidityPool: xdr.lookup(\"ClaimLiquidityAtom\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum CreateAccountResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       CREATE_ACCOUNT_SUCCESS = 0, // account was created\n//   \n//       // codes considered as \"failure\" for the operation\n//       CREATE_ACCOUNT_MALFORMED = -1,   // invalid destination\n//       CREATE_ACCOUNT_UNDERFUNDED = -2, // not enough funds in source account\n//       CREATE_ACCOUNT_LOW_RESERVE =\n//           -3, // would create an account below the min reserve\n//       CREATE_ACCOUNT_ALREADY_EXIST = -4 // account already exists\n//   };\n//\n// ===========================================================================\nxdr.enum(\"CreateAccountResultCode\", {\n  createAccountSuccess: 0,\n  createAccountMalformed: -1,\n  createAccountUnderfunded: -2,\n  createAccountLowReserve: -3,\n  createAccountAlreadyExist: -4,\n});\n\n// === xdr source ============================================================\n//\n//   union CreateAccountResult switch (CreateAccountResultCode code)\n//   {\n//   case CREATE_ACCOUNT_SUCCESS:\n//       void;\n//   case CREATE_ACCOUNT_MALFORMED:\n//   case CREATE_ACCOUNT_UNDERFUNDED:\n//   case CREATE_ACCOUNT_LOW_RESERVE:\n//   case CREATE_ACCOUNT_ALREADY_EXIST:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"CreateAccountResult\", {\n  switchOn: xdr.lookup(\"CreateAccountResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"createAccountSuccess\", xdr.void()],\n    [\"createAccountMalformed\", xdr.void()],\n    [\"createAccountUnderfunded\", xdr.void()],\n    [\"createAccountLowReserve\", xdr.void()],\n    [\"createAccountAlreadyExist\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum PaymentResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       PAYMENT_SUCCESS = 0, // payment successfully completed\n//   \n//       // codes considered as \"failure\" for the operation\n//       PAYMENT_MALFORMED = -1,          // bad input\n//       PAYMENT_UNDERFUNDED = -2,        // not enough funds in source account\n//       PAYMENT_SRC_NO_TRUST = -3,       // no trust line on source account\n//       PAYMENT_SRC_NOT_AUTHORIZED = -4, // source not authorized to transfer\n//       PAYMENT_NO_DESTINATION = -5,     // destination account does not exist\n//       PAYMENT_NO_TRUST = -6,       // destination missing a trust line for asset\n//       PAYMENT_NOT_AUTHORIZED = -7, // destination not authorized to hold asset\n//       PAYMENT_LINE_FULL = -8,      // destination would go above their limit\n//       PAYMENT_NO_ISSUER = -9       // missing issuer on asset\n//   };\n//\n// ===========================================================================\nxdr.enum(\"PaymentResultCode\", {\n  paymentSuccess: 0,\n  paymentMalformed: -1,\n  paymentUnderfunded: -2,\n  paymentSrcNoTrust: -3,\n  paymentSrcNotAuthorized: -4,\n  paymentNoDestination: -5,\n  paymentNoTrust: -6,\n  paymentNotAuthorized: -7,\n  paymentLineFull: -8,\n  paymentNoIssuer: -9,\n});\n\n// === xdr source ============================================================\n//\n//   union PaymentResult switch (PaymentResultCode code)\n//   {\n//   case PAYMENT_SUCCESS:\n//       void;\n//   case PAYMENT_MALFORMED:\n//   case PAYMENT_UNDERFUNDED:\n//   case PAYMENT_SRC_NO_TRUST:\n//   case PAYMENT_SRC_NOT_AUTHORIZED:\n//   case PAYMENT_NO_DESTINATION:\n//   case PAYMENT_NO_TRUST:\n//   case PAYMENT_NOT_AUTHORIZED:\n//   case PAYMENT_LINE_FULL:\n//   case PAYMENT_NO_ISSUER:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"PaymentResult\", {\n  switchOn: xdr.lookup(\"PaymentResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"paymentSuccess\", xdr.void()],\n    [\"paymentMalformed\", xdr.void()],\n    [\"paymentUnderfunded\", xdr.void()],\n    [\"paymentSrcNoTrust\", xdr.void()],\n    [\"paymentSrcNotAuthorized\", xdr.void()],\n    [\"paymentNoDestination\", xdr.void()],\n    [\"paymentNoTrust\", xdr.void()],\n    [\"paymentNotAuthorized\", xdr.void()],\n    [\"paymentLineFull\", xdr.void()],\n    [\"paymentNoIssuer\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum PathPaymentStrictReceiveResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       PATH_PAYMENT_STRICT_RECEIVE_SUCCESS = 0, // success\n//   \n//       // codes considered as \"failure\" for the operation\n//       PATH_PAYMENT_STRICT_RECEIVE_MALFORMED = -1, // bad input\n//       PATH_PAYMENT_STRICT_RECEIVE_UNDERFUNDED =\n//           -2, // not enough funds in source account\n//       PATH_PAYMENT_STRICT_RECEIVE_SRC_NO_TRUST =\n//           -3, // no trust line on source account\n//       PATH_PAYMENT_STRICT_RECEIVE_SRC_NOT_AUTHORIZED =\n//           -4, // source not authorized to transfer\n//       PATH_PAYMENT_STRICT_RECEIVE_NO_DESTINATION =\n//           -5, // destination account does not exist\n//       PATH_PAYMENT_STRICT_RECEIVE_NO_TRUST =\n//           -6, // dest missing a trust line for asset\n//       PATH_PAYMENT_STRICT_RECEIVE_NOT_AUTHORIZED =\n//           -7, // dest not authorized to hold asset\n//       PATH_PAYMENT_STRICT_RECEIVE_LINE_FULL =\n//           -8, // dest would go above their limit\n//       PATH_PAYMENT_STRICT_RECEIVE_NO_ISSUER = -9, // missing issuer on one asset\n//       PATH_PAYMENT_STRICT_RECEIVE_TOO_FEW_OFFERS =\n//           -10, // not enough offers to satisfy path\n//       PATH_PAYMENT_STRICT_RECEIVE_OFFER_CROSS_SELF =\n//           -11, // would cross one of its own offers\n//       PATH_PAYMENT_STRICT_RECEIVE_OVER_SENDMAX = -12 // could not satisfy sendmax\n//   };\n//\n// ===========================================================================\nxdr.enum(\"PathPaymentStrictReceiveResultCode\", {\n  pathPaymentStrictReceiveSuccess: 0,\n  pathPaymentStrictReceiveMalformed: -1,\n  pathPaymentStrictReceiveUnderfunded: -2,\n  pathPaymentStrictReceiveSrcNoTrust: -3,\n  pathPaymentStrictReceiveSrcNotAuthorized: -4,\n  pathPaymentStrictReceiveNoDestination: -5,\n  pathPaymentStrictReceiveNoTrust: -6,\n  pathPaymentStrictReceiveNotAuthorized: -7,\n  pathPaymentStrictReceiveLineFull: -8,\n  pathPaymentStrictReceiveNoIssuer: -9,\n  pathPaymentStrictReceiveTooFewOffers: -10,\n  pathPaymentStrictReceiveOfferCrossSelf: -11,\n  pathPaymentStrictReceiveOverSendmax: -12,\n});\n\n// === xdr source ============================================================\n//\n//   struct SimplePaymentResult\n//   {\n//       AccountID destination;\n//       Asset asset;\n//       int64 amount;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SimplePaymentResult\", [\n  [\"destination\", xdr.lookup(\"AccountId\")],\n  [\"asset\", xdr.lookup(\"Asset\")],\n  [\"amount\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           ClaimAtom offers<>;\n//           SimplePaymentResult last;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"PathPaymentStrictReceiveResultSuccess\", [\n  [\"offers\", xdr.varArray(xdr.lookup(\"ClaimAtom\"), 2147483647)],\n  [\"last\", xdr.lookup(\"SimplePaymentResult\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union PathPaymentStrictReceiveResult switch (\n//       PathPaymentStrictReceiveResultCode code)\n//   {\n//   case PATH_PAYMENT_STRICT_RECEIVE_SUCCESS:\n//       struct\n//       {\n//           ClaimAtom offers<>;\n//           SimplePaymentResult last;\n//       } success;\n//   case PATH_PAYMENT_STRICT_RECEIVE_MALFORMED:\n//   case PATH_PAYMENT_STRICT_RECEIVE_UNDERFUNDED:\n//   case PATH_PAYMENT_STRICT_RECEIVE_SRC_NO_TRUST:\n//   case PATH_PAYMENT_STRICT_RECEIVE_SRC_NOT_AUTHORIZED:\n//   case PATH_PAYMENT_STRICT_RECEIVE_NO_DESTINATION:\n//   case PATH_PAYMENT_STRICT_RECEIVE_NO_TRUST:\n//   case PATH_PAYMENT_STRICT_RECEIVE_NOT_AUTHORIZED:\n//   case PATH_PAYMENT_STRICT_RECEIVE_LINE_FULL:\n//       void;\n//   case PATH_PAYMENT_STRICT_RECEIVE_NO_ISSUER:\n//       Asset noIssuer; // the asset that caused the error\n//   case PATH_PAYMENT_STRICT_RECEIVE_TOO_FEW_OFFERS:\n//   case PATH_PAYMENT_STRICT_RECEIVE_OFFER_CROSS_SELF:\n//   case PATH_PAYMENT_STRICT_RECEIVE_OVER_SENDMAX:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"PathPaymentStrictReceiveResult\", {\n  switchOn: xdr.lookup(\"PathPaymentStrictReceiveResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"pathPaymentStrictReceiveSuccess\", \"success\"],\n    [\"pathPaymentStrictReceiveMalformed\", xdr.void()],\n    [\"pathPaymentStrictReceiveUnderfunded\", xdr.void()],\n    [\"pathPaymentStrictReceiveSrcNoTrust\", xdr.void()],\n    [\"pathPaymentStrictReceiveSrcNotAuthorized\", xdr.void()],\n    [\"pathPaymentStrictReceiveNoDestination\", xdr.void()],\n    [\"pathPaymentStrictReceiveNoTrust\", xdr.void()],\n    [\"pathPaymentStrictReceiveNotAuthorized\", xdr.void()],\n    [\"pathPaymentStrictReceiveLineFull\", xdr.void()],\n    [\"pathPaymentStrictReceiveNoIssuer\", \"noIssuer\"],\n    [\"pathPaymentStrictReceiveTooFewOffers\", xdr.void()],\n    [\"pathPaymentStrictReceiveOfferCrossSelf\", xdr.void()],\n    [\"pathPaymentStrictReceiveOverSendmax\", xdr.void()],\n  ],\n  arms: {\n    success: xdr.lookup(\"PathPaymentStrictReceiveResultSuccess\"),\n    noIssuer: xdr.lookup(\"Asset\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum PathPaymentStrictSendResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       PATH_PAYMENT_STRICT_SEND_SUCCESS = 0, // success\n//   \n//       // codes considered as \"failure\" for the operation\n//       PATH_PAYMENT_STRICT_SEND_MALFORMED = -1, // bad input\n//       PATH_PAYMENT_STRICT_SEND_UNDERFUNDED =\n//           -2, // not enough funds in source account\n//       PATH_PAYMENT_STRICT_SEND_SRC_NO_TRUST =\n//           -3, // no trust line on source account\n//       PATH_PAYMENT_STRICT_SEND_SRC_NOT_AUTHORIZED =\n//           -4, // source not authorized to transfer\n//       PATH_PAYMENT_STRICT_SEND_NO_DESTINATION =\n//           -5, // destination account does not exist\n//       PATH_PAYMENT_STRICT_SEND_NO_TRUST =\n//           -6, // dest missing a trust line for asset\n//       PATH_PAYMENT_STRICT_SEND_NOT_AUTHORIZED =\n//           -7, // dest not authorized to hold asset\n//       PATH_PAYMENT_STRICT_SEND_LINE_FULL = -8, // dest would go above their limit\n//       PATH_PAYMENT_STRICT_SEND_NO_ISSUER = -9, // missing issuer on one asset\n//       PATH_PAYMENT_STRICT_SEND_TOO_FEW_OFFERS =\n//           -10, // not enough offers to satisfy path\n//       PATH_PAYMENT_STRICT_SEND_OFFER_CROSS_SELF =\n//           -11, // would cross one of its own offers\n//       PATH_PAYMENT_STRICT_SEND_UNDER_DESTMIN = -12 // could not satisfy destMin\n//   };\n//\n// ===========================================================================\nxdr.enum(\"PathPaymentStrictSendResultCode\", {\n  pathPaymentStrictSendSuccess: 0,\n  pathPaymentStrictSendMalformed: -1,\n  pathPaymentStrictSendUnderfunded: -2,\n  pathPaymentStrictSendSrcNoTrust: -3,\n  pathPaymentStrictSendSrcNotAuthorized: -4,\n  pathPaymentStrictSendNoDestination: -5,\n  pathPaymentStrictSendNoTrust: -6,\n  pathPaymentStrictSendNotAuthorized: -7,\n  pathPaymentStrictSendLineFull: -8,\n  pathPaymentStrictSendNoIssuer: -9,\n  pathPaymentStrictSendTooFewOffers: -10,\n  pathPaymentStrictSendOfferCrossSelf: -11,\n  pathPaymentStrictSendUnderDestmin: -12,\n});\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           ClaimAtom offers<>;\n//           SimplePaymentResult last;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"PathPaymentStrictSendResultSuccess\", [\n  [\"offers\", xdr.varArray(xdr.lookup(\"ClaimAtom\"), 2147483647)],\n  [\"last\", xdr.lookup(\"SimplePaymentResult\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union PathPaymentStrictSendResult switch (PathPaymentStrictSendResultCode code)\n//   {\n//   case PATH_PAYMENT_STRICT_SEND_SUCCESS:\n//       struct\n//       {\n//           ClaimAtom offers<>;\n//           SimplePaymentResult last;\n//       } success;\n//   case PATH_PAYMENT_STRICT_SEND_MALFORMED:\n//   case PATH_PAYMENT_STRICT_SEND_UNDERFUNDED:\n//   case PATH_PAYMENT_STRICT_SEND_SRC_NO_TRUST:\n//   case PATH_PAYMENT_STRICT_SEND_SRC_NOT_AUTHORIZED:\n//   case PATH_PAYMENT_STRICT_SEND_NO_DESTINATION:\n//   case PATH_PAYMENT_STRICT_SEND_NO_TRUST:\n//   case PATH_PAYMENT_STRICT_SEND_NOT_AUTHORIZED:\n//   case PATH_PAYMENT_STRICT_SEND_LINE_FULL:\n//       void;\n//   case PATH_PAYMENT_STRICT_SEND_NO_ISSUER:\n//       Asset noIssuer; // the asset that caused the error\n//   case PATH_PAYMENT_STRICT_SEND_TOO_FEW_OFFERS:\n//   case PATH_PAYMENT_STRICT_SEND_OFFER_CROSS_SELF:\n//   case PATH_PAYMENT_STRICT_SEND_UNDER_DESTMIN:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"PathPaymentStrictSendResult\", {\n  switchOn: xdr.lookup(\"PathPaymentStrictSendResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"pathPaymentStrictSendSuccess\", \"success\"],\n    [\"pathPaymentStrictSendMalformed\", xdr.void()],\n    [\"pathPaymentStrictSendUnderfunded\", xdr.void()],\n    [\"pathPaymentStrictSendSrcNoTrust\", xdr.void()],\n    [\"pathPaymentStrictSendSrcNotAuthorized\", xdr.void()],\n    [\"pathPaymentStrictSendNoDestination\", xdr.void()],\n    [\"pathPaymentStrictSendNoTrust\", xdr.void()],\n    [\"pathPaymentStrictSendNotAuthorized\", xdr.void()],\n    [\"pathPaymentStrictSendLineFull\", xdr.void()],\n    [\"pathPaymentStrictSendNoIssuer\", \"noIssuer\"],\n    [\"pathPaymentStrictSendTooFewOffers\", xdr.void()],\n    [\"pathPaymentStrictSendOfferCrossSelf\", xdr.void()],\n    [\"pathPaymentStrictSendUnderDestmin\", xdr.void()],\n  ],\n  arms: {\n    success: xdr.lookup(\"PathPaymentStrictSendResultSuccess\"),\n    noIssuer: xdr.lookup(\"Asset\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum ManageSellOfferResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       MANAGE_SELL_OFFER_SUCCESS = 0,\n//   \n//       // codes considered as \"failure\" for the operation\n//       MANAGE_SELL_OFFER_MALFORMED = -1, // generated offer would be invalid\n//       MANAGE_SELL_OFFER_SELL_NO_TRUST =\n//           -2,                              // no trust line for what we're selling\n//       MANAGE_SELL_OFFER_BUY_NO_TRUST = -3, // no trust line for what we're buying\n//       MANAGE_SELL_OFFER_SELL_NOT_AUTHORIZED = -4, // not authorized to sell\n//       MANAGE_SELL_OFFER_BUY_NOT_AUTHORIZED = -5,  // not authorized to buy\n//       MANAGE_SELL_OFFER_LINE_FULL = -6, // can't receive more of what it's buying\n//       MANAGE_SELL_OFFER_UNDERFUNDED = -7, // doesn't hold what it's trying to sell\n//       MANAGE_SELL_OFFER_CROSS_SELF =\n//           -8, // would cross an offer from the same user\n//       MANAGE_SELL_OFFER_SELL_NO_ISSUER = -9, // no issuer for what we're selling\n//       MANAGE_SELL_OFFER_BUY_NO_ISSUER = -10, // no issuer for what we're buying\n//   \n//       // update errors\n//       MANAGE_SELL_OFFER_NOT_FOUND =\n//           -11, // offerID does not match an existing offer\n//   \n//       MANAGE_SELL_OFFER_LOW_RESERVE =\n//           -12 // not enough funds to create a new Offer\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ManageSellOfferResultCode\", {\n  manageSellOfferSuccess: 0,\n  manageSellOfferMalformed: -1,\n  manageSellOfferSellNoTrust: -2,\n  manageSellOfferBuyNoTrust: -3,\n  manageSellOfferSellNotAuthorized: -4,\n  manageSellOfferBuyNotAuthorized: -5,\n  manageSellOfferLineFull: -6,\n  manageSellOfferUnderfunded: -7,\n  manageSellOfferCrossSelf: -8,\n  manageSellOfferSellNoIssuer: -9,\n  manageSellOfferBuyNoIssuer: -10,\n  manageSellOfferNotFound: -11,\n  manageSellOfferLowReserve: -12,\n});\n\n// === xdr source ============================================================\n//\n//   enum ManageOfferEffect\n//   {\n//       MANAGE_OFFER_CREATED = 0,\n//       MANAGE_OFFER_UPDATED = 1,\n//       MANAGE_OFFER_DELETED = 2\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ManageOfferEffect\", {\n  manageOfferCreated: 0,\n  manageOfferUpdated: 1,\n  manageOfferDeleted: 2,\n});\n\n// === xdr source ============================================================\n//\n//   union switch (ManageOfferEffect effect)\n//       {\n//       case MANAGE_OFFER_CREATED:\n//       case MANAGE_OFFER_UPDATED:\n//           OfferEntry offer;\n//       case MANAGE_OFFER_DELETED:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"ManageOfferSuccessResultOffer\", {\n  switchOn: xdr.lookup(\"ManageOfferEffect\"),\n  switchName: \"effect\",\n  switches: [\n    [\"manageOfferCreated\", \"offer\"],\n    [\"manageOfferUpdated\", \"offer\"],\n    [\"manageOfferDeleted\", xdr.void()],\n  ],\n  arms: {\n    offer: xdr.lookup(\"OfferEntry\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct ManageOfferSuccessResult\n//   {\n//       // offers that got claimed while creating this offer\n//       ClaimAtom offersClaimed<>;\n//   \n//       union switch (ManageOfferEffect effect)\n//       {\n//       case MANAGE_OFFER_CREATED:\n//       case MANAGE_OFFER_UPDATED:\n//           OfferEntry offer;\n//       case MANAGE_OFFER_DELETED:\n//           void;\n//       }\n//       offer;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ManageOfferSuccessResult\", [\n  [\"offersClaimed\", xdr.varArray(xdr.lookup(\"ClaimAtom\"), 2147483647)],\n  [\"offer\", xdr.lookup(\"ManageOfferSuccessResultOffer\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union ManageSellOfferResult switch (ManageSellOfferResultCode code)\n//   {\n//   case MANAGE_SELL_OFFER_SUCCESS:\n//       ManageOfferSuccessResult success;\n//   case MANAGE_SELL_OFFER_MALFORMED:\n//   case MANAGE_SELL_OFFER_SELL_NO_TRUST:\n//   case MANAGE_SELL_OFFER_BUY_NO_TRUST:\n//   case MANAGE_SELL_OFFER_SELL_NOT_AUTHORIZED:\n//   case MANAGE_SELL_OFFER_BUY_NOT_AUTHORIZED:\n//   case MANAGE_SELL_OFFER_LINE_FULL:\n//   case MANAGE_SELL_OFFER_UNDERFUNDED:\n//   case MANAGE_SELL_OFFER_CROSS_SELF:\n//   case MANAGE_SELL_OFFER_SELL_NO_ISSUER:\n//   case MANAGE_SELL_OFFER_BUY_NO_ISSUER:\n//   case MANAGE_SELL_OFFER_NOT_FOUND:\n//   case MANAGE_SELL_OFFER_LOW_RESERVE:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ManageSellOfferResult\", {\n  switchOn: xdr.lookup(\"ManageSellOfferResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"manageSellOfferSuccess\", \"success\"],\n    [\"manageSellOfferMalformed\", xdr.void()],\n    [\"manageSellOfferSellNoTrust\", xdr.void()],\n    [\"manageSellOfferBuyNoTrust\", xdr.void()],\n    [\"manageSellOfferSellNotAuthorized\", xdr.void()],\n    [\"manageSellOfferBuyNotAuthorized\", xdr.void()],\n    [\"manageSellOfferLineFull\", xdr.void()],\n    [\"manageSellOfferUnderfunded\", xdr.void()],\n    [\"manageSellOfferCrossSelf\", xdr.void()],\n    [\"manageSellOfferSellNoIssuer\", xdr.void()],\n    [\"manageSellOfferBuyNoIssuer\", xdr.void()],\n    [\"manageSellOfferNotFound\", xdr.void()],\n    [\"manageSellOfferLowReserve\", xdr.void()],\n  ],\n  arms: {\n    success: xdr.lookup(\"ManageOfferSuccessResult\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum ManageBuyOfferResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       MANAGE_BUY_OFFER_SUCCESS = 0,\n//   \n//       // codes considered as \"failure\" for the operation\n//       MANAGE_BUY_OFFER_MALFORMED = -1,     // generated offer would be invalid\n//       MANAGE_BUY_OFFER_SELL_NO_TRUST = -2, // no trust line for what we're selling\n//       MANAGE_BUY_OFFER_BUY_NO_TRUST = -3,  // no trust line for what we're buying\n//       MANAGE_BUY_OFFER_SELL_NOT_AUTHORIZED = -4, // not authorized to sell\n//       MANAGE_BUY_OFFER_BUY_NOT_AUTHORIZED = -5,  // not authorized to buy\n//       MANAGE_BUY_OFFER_LINE_FULL = -6,   // can't receive more of what it's buying\n//       MANAGE_BUY_OFFER_UNDERFUNDED = -7, // doesn't hold what it's trying to sell\n//       MANAGE_BUY_OFFER_CROSS_SELF = -8, // would cross an offer from the same user\n//       MANAGE_BUY_OFFER_SELL_NO_ISSUER = -9, // no issuer for what we're selling\n//       MANAGE_BUY_OFFER_BUY_NO_ISSUER = -10, // no issuer for what we're buying\n//   \n//       // update errors\n//       MANAGE_BUY_OFFER_NOT_FOUND =\n//           -11, // offerID does not match an existing offer\n//   \n//       MANAGE_BUY_OFFER_LOW_RESERVE = -12 // not enough funds to create a new Offer\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ManageBuyOfferResultCode\", {\n  manageBuyOfferSuccess: 0,\n  manageBuyOfferMalformed: -1,\n  manageBuyOfferSellNoTrust: -2,\n  manageBuyOfferBuyNoTrust: -3,\n  manageBuyOfferSellNotAuthorized: -4,\n  manageBuyOfferBuyNotAuthorized: -5,\n  manageBuyOfferLineFull: -6,\n  manageBuyOfferUnderfunded: -7,\n  manageBuyOfferCrossSelf: -8,\n  manageBuyOfferSellNoIssuer: -9,\n  manageBuyOfferBuyNoIssuer: -10,\n  manageBuyOfferNotFound: -11,\n  manageBuyOfferLowReserve: -12,\n});\n\n// === xdr source ============================================================\n//\n//   union ManageBuyOfferResult switch (ManageBuyOfferResultCode code)\n//   {\n//   case MANAGE_BUY_OFFER_SUCCESS:\n//       ManageOfferSuccessResult success;\n//   case MANAGE_BUY_OFFER_MALFORMED:\n//   case MANAGE_BUY_OFFER_SELL_NO_TRUST:\n//   case MANAGE_BUY_OFFER_BUY_NO_TRUST:\n//   case MANAGE_BUY_OFFER_SELL_NOT_AUTHORIZED:\n//   case MANAGE_BUY_OFFER_BUY_NOT_AUTHORIZED:\n//   case MANAGE_BUY_OFFER_LINE_FULL:\n//   case MANAGE_BUY_OFFER_UNDERFUNDED:\n//   case MANAGE_BUY_OFFER_CROSS_SELF:\n//   case MANAGE_BUY_OFFER_SELL_NO_ISSUER:\n//   case MANAGE_BUY_OFFER_BUY_NO_ISSUER:\n//   case MANAGE_BUY_OFFER_NOT_FOUND:\n//   case MANAGE_BUY_OFFER_LOW_RESERVE:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ManageBuyOfferResult\", {\n  switchOn: xdr.lookup(\"ManageBuyOfferResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"manageBuyOfferSuccess\", \"success\"],\n    [\"manageBuyOfferMalformed\", xdr.void()],\n    [\"manageBuyOfferSellNoTrust\", xdr.void()],\n    [\"manageBuyOfferBuyNoTrust\", xdr.void()],\n    [\"manageBuyOfferSellNotAuthorized\", xdr.void()],\n    [\"manageBuyOfferBuyNotAuthorized\", xdr.void()],\n    [\"manageBuyOfferLineFull\", xdr.void()],\n    [\"manageBuyOfferUnderfunded\", xdr.void()],\n    [\"manageBuyOfferCrossSelf\", xdr.void()],\n    [\"manageBuyOfferSellNoIssuer\", xdr.void()],\n    [\"manageBuyOfferBuyNoIssuer\", xdr.void()],\n    [\"manageBuyOfferNotFound\", xdr.void()],\n    [\"manageBuyOfferLowReserve\", xdr.void()],\n  ],\n  arms: {\n    success: xdr.lookup(\"ManageOfferSuccessResult\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum SetOptionsResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       SET_OPTIONS_SUCCESS = 0,\n//       // codes considered as \"failure\" for the operation\n//       SET_OPTIONS_LOW_RESERVE = -1,      // not enough funds to add a signer\n//       SET_OPTIONS_TOO_MANY_SIGNERS = -2, // max number of signers already reached\n//       SET_OPTIONS_BAD_FLAGS = -3,        // invalid combination of clear/set flags\n//       SET_OPTIONS_INVALID_INFLATION = -4,      // inflation account does not exist\n//       SET_OPTIONS_CANT_CHANGE = -5,            // can no longer change this option\n//       SET_OPTIONS_UNKNOWN_FLAG = -6,           // can't set an unknown flag\n//       SET_OPTIONS_THRESHOLD_OUT_OF_RANGE = -7, // bad value for weight/threshold\n//       SET_OPTIONS_BAD_SIGNER = -8,             // signer cannot be masterkey\n//       SET_OPTIONS_INVALID_HOME_DOMAIN = -9,    // malformed home domain\n//       SET_OPTIONS_AUTH_REVOCABLE_REQUIRED =\n//           -10 // auth revocable is required for clawback\n//   };\n//\n// ===========================================================================\nxdr.enum(\"SetOptionsResultCode\", {\n  setOptionsSuccess: 0,\n  setOptionsLowReserve: -1,\n  setOptionsTooManySigners: -2,\n  setOptionsBadFlags: -3,\n  setOptionsInvalidInflation: -4,\n  setOptionsCantChange: -5,\n  setOptionsUnknownFlag: -6,\n  setOptionsThresholdOutOfRange: -7,\n  setOptionsBadSigner: -8,\n  setOptionsInvalidHomeDomain: -9,\n  setOptionsAuthRevocableRequired: -10,\n});\n\n// === xdr source ============================================================\n//\n//   union SetOptionsResult switch (SetOptionsResultCode code)\n//   {\n//   case SET_OPTIONS_SUCCESS:\n//       void;\n//   case SET_OPTIONS_LOW_RESERVE:\n//   case SET_OPTIONS_TOO_MANY_SIGNERS:\n//   case SET_OPTIONS_BAD_FLAGS:\n//   case SET_OPTIONS_INVALID_INFLATION:\n//   case SET_OPTIONS_CANT_CHANGE:\n//   case SET_OPTIONS_UNKNOWN_FLAG:\n//   case SET_OPTIONS_THRESHOLD_OUT_OF_RANGE:\n//   case SET_OPTIONS_BAD_SIGNER:\n//   case SET_OPTIONS_INVALID_HOME_DOMAIN:\n//   case SET_OPTIONS_AUTH_REVOCABLE_REQUIRED:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"SetOptionsResult\", {\n  switchOn: xdr.lookup(\"SetOptionsResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"setOptionsSuccess\", xdr.void()],\n    [\"setOptionsLowReserve\", xdr.void()],\n    [\"setOptionsTooManySigners\", xdr.void()],\n    [\"setOptionsBadFlags\", xdr.void()],\n    [\"setOptionsInvalidInflation\", xdr.void()],\n    [\"setOptionsCantChange\", xdr.void()],\n    [\"setOptionsUnknownFlag\", xdr.void()],\n    [\"setOptionsThresholdOutOfRange\", xdr.void()],\n    [\"setOptionsBadSigner\", xdr.void()],\n    [\"setOptionsInvalidHomeDomain\", xdr.void()],\n    [\"setOptionsAuthRevocableRequired\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum ChangeTrustResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       CHANGE_TRUST_SUCCESS = 0,\n//       // codes considered as \"failure\" for the operation\n//       CHANGE_TRUST_MALFORMED = -1,     // bad input\n//       CHANGE_TRUST_NO_ISSUER = -2,     // could not find issuer\n//       CHANGE_TRUST_INVALID_LIMIT = -3, // cannot drop limit below balance\n//                                        // cannot create with a limit of 0\n//       CHANGE_TRUST_LOW_RESERVE =\n//           -4, // not enough funds to create a new trust line,\n//       CHANGE_TRUST_SELF_NOT_ALLOWED = -5,   // trusting self is not allowed\n//       CHANGE_TRUST_TRUST_LINE_MISSING = -6, // Asset trustline is missing for pool\n//       CHANGE_TRUST_CANNOT_DELETE =\n//           -7, // Asset trustline is still referenced in a pool\n//       CHANGE_TRUST_NOT_AUTH_MAINTAIN_LIABILITIES =\n//           -8 // Asset trustline is deauthorized\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ChangeTrustResultCode\", {\n  changeTrustSuccess: 0,\n  changeTrustMalformed: -1,\n  changeTrustNoIssuer: -2,\n  changeTrustInvalidLimit: -3,\n  changeTrustLowReserve: -4,\n  changeTrustSelfNotAllowed: -5,\n  changeTrustTrustLineMissing: -6,\n  changeTrustCannotDelete: -7,\n  changeTrustNotAuthMaintainLiabilities: -8,\n});\n\n// === xdr source ============================================================\n//\n//   union ChangeTrustResult switch (ChangeTrustResultCode code)\n//   {\n//   case CHANGE_TRUST_SUCCESS:\n//       void;\n//   case CHANGE_TRUST_MALFORMED:\n//   case CHANGE_TRUST_NO_ISSUER:\n//   case CHANGE_TRUST_INVALID_LIMIT:\n//   case CHANGE_TRUST_LOW_RESERVE:\n//   case CHANGE_TRUST_SELF_NOT_ALLOWED:\n//   case CHANGE_TRUST_TRUST_LINE_MISSING:\n//   case CHANGE_TRUST_CANNOT_DELETE:\n//   case CHANGE_TRUST_NOT_AUTH_MAINTAIN_LIABILITIES:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ChangeTrustResult\", {\n  switchOn: xdr.lookup(\"ChangeTrustResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"changeTrustSuccess\", xdr.void()],\n    [\"changeTrustMalformed\", xdr.void()],\n    [\"changeTrustNoIssuer\", xdr.void()],\n    [\"changeTrustInvalidLimit\", xdr.void()],\n    [\"changeTrustLowReserve\", xdr.void()],\n    [\"changeTrustSelfNotAllowed\", xdr.void()],\n    [\"changeTrustTrustLineMissing\", xdr.void()],\n    [\"changeTrustCannotDelete\", xdr.void()],\n    [\"changeTrustNotAuthMaintainLiabilities\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum AllowTrustResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       ALLOW_TRUST_SUCCESS = 0,\n//       // codes considered as \"failure\" for the operation\n//       ALLOW_TRUST_MALFORMED = -1,     // asset is not ASSET_TYPE_ALPHANUM\n//       ALLOW_TRUST_NO_TRUST_LINE = -2, // trustor does not have a trustline\n//                                       // source account does not require trust\n//       ALLOW_TRUST_TRUST_NOT_REQUIRED = -3,\n//       ALLOW_TRUST_CANT_REVOKE = -4,      // source account can't revoke trust,\n//       ALLOW_TRUST_SELF_NOT_ALLOWED = -5, // trusting self is not allowed\n//       ALLOW_TRUST_LOW_RESERVE = -6       // claimable balances can't be created\n//                                          // on revoke due to low reserves\n//   };\n//\n// ===========================================================================\nxdr.enum(\"AllowTrustResultCode\", {\n  allowTrustSuccess: 0,\n  allowTrustMalformed: -1,\n  allowTrustNoTrustLine: -2,\n  allowTrustTrustNotRequired: -3,\n  allowTrustCantRevoke: -4,\n  allowTrustSelfNotAllowed: -5,\n  allowTrustLowReserve: -6,\n});\n\n// === xdr source ============================================================\n//\n//   union AllowTrustResult switch (AllowTrustResultCode code)\n//   {\n//   case ALLOW_TRUST_SUCCESS:\n//       void;\n//   case ALLOW_TRUST_MALFORMED:\n//   case ALLOW_TRUST_NO_TRUST_LINE:\n//   case ALLOW_TRUST_TRUST_NOT_REQUIRED:\n//   case ALLOW_TRUST_CANT_REVOKE:\n//   case ALLOW_TRUST_SELF_NOT_ALLOWED:\n//   case ALLOW_TRUST_LOW_RESERVE:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"AllowTrustResult\", {\n  switchOn: xdr.lookup(\"AllowTrustResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"allowTrustSuccess\", xdr.void()],\n    [\"allowTrustMalformed\", xdr.void()],\n    [\"allowTrustNoTrustLine\", xdr.void()],\n    [\"allowTrustTrustNotRequired\", xdr.void()],\n    [\"allowTrustCantRevoke\", xdr.void()],\n    [\"allowTrustSelfNotAllowed\", xdr.void()],\n    [\"allowTrustLowReserve\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum AccountMergeResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       ACCOUNT_MERGE_SUCCESS = 0,\n//       // codes considered as \"failure\" for the operation\n//       ACCOUNT_MERGE_MALFORMED = -1,       // can't merge onto itself\n//       ACCOUNT_MERGE_NO_ACCOUNT = -2,      // destination does not exist\n//       ACCOUNT_MERGE_IMMUTABLE_SET = -3,   // source account has AUTH_IMMUTABLE set\n//       ACCOUNT_MERGE_HAS_SUB_ENTRIES = -4, // account has trust lines/offers\n//       ACCOUNT_MERGE_SEQNUM_TOO_FAR = -5,  // sequence number is over max allowed\n//       ACCOUNT_MERGE_DEST_FULL = -6,       // can't add source balance to\n//                                           // destination balance\n//       ACCOUNT_MERGE_IS_SPONSOR = -7       // can't merge account that is a sponsor\n//   };\n//\n// ===========================================================================\nxdr.enum(\"AccountMergeResultCode\", {\n  accountMergeSuccess: 0,\n  accountMergeMalformed: -1,\n  accountMergeNoAccount: -2,\n  accountMergeImmutableSet: -3,\n  accountMergeHasSubEntries: -4,\n  accountMergeSeqnumTooFar: -5,\n  accountMergeDestFull: -6,\n  accountMergeIsSponsor: -7,\n});\n\n// === xdr source ============================================================\n//\n//   union AccountMergeResult switch (AccountMergeResultCode code)\n//   {\n//   case ACCOUNT_MERGE_SUCCESS:\n//       int64 sourceAccountBalance; // how much got transferred from source account\n//   case ACCOUNT_MERGE_MALFORMED:\n//   case ACCOUNT_MERGE_NO_ACCOUNT:\n//   case ACCOUNT_MERGE_IMMUTABLE_SET:\n//   case ACCOUNT_MERGE_HAS_SUB_ENTRIES:\n//   case ACCOUNT_MERGE_SEQNUM_TOO_FAR:\n//   case ACCOUNT_MERGE_DEST_FULL:\n//   case ACCOUNT_MERGE_IS_SPONSOR:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"AccountMergeResult\", {\n  switchOn: xdr.lookup(\"AccountMergeResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"accountMergeSuccess\", \"sourceAccountBalance\"],\n    [\"accountMergeMalformed\", xdr.void()],\n    [\"accountMergeNoAccount\", xdr.void()],\n    [\"accountMergeImmutableSet\", xdr.void()],\n    [\"accountMergeHasSubEntries\", xdr.void()],\n    [\"accountMergeSeqnumTooFar\", xdr.void()],\n    [\"accountMergeDestFull\", xdr.void()],\n    [\"accountMergeIsSponsor\", xdr.void()],\n  ],\n  arms: {\n    sourceAccountBalance: xdr.lookup(\"Int64\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum InflationResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       INFLATION_SUCCESS = 0,\n//       // codes considered as \"failure\" for the operation\n//       INFLATION_NOT_TIME = -1\n//   };\n//\n// ===========================================================================\nxdr.enum(\"InflationResultCode\", {\n  inflationSuccess: 0,\n  inflationNotTime: -1,\n});\n\n// === xdr source ============================================================\n//\n//   struct InflationPayout // or use PaymentResultAtom to limit types?\n//   {\n//       AccountID destination;\n//       int64 amount;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"InflationPayout\", [\n  [\"destination\", xdr.lookup(\"AccountId\")],\n  [\"amount\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union InflationResult switch (InflationResultCode code)\n//   {\n//   case INFLATION_SUCCESS:\n//       InflationPayout payouts<>;\n//   case INFLATION_NOT_TIME:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"InflationResult\", {\n  switchOn: xdr.lookup(\"InflationResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"inflationSuccess\", \"payouts\"],\n    [\"inflationNotTime\", xdr.void()],\n  ],\n  arms: {\n    payouts: xdr.varArray(xdr.lookup(\"InflationPayout\"), 2147483647),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum ManageDataResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       MANAGE_DATA_SUCCESS = 0,\n//       // codes considered as \"failure\" for the operation\n//       MANAGE_DATA_NOT_SUPPORTED_YET =\n//           -1, // The network hasn't moved to this protocol change yet\n//       MANAGE_DATA_NAME_NOT_FOUND =\n//           -2, // Trying to remove a Data Entry that isn't there\n//       MANAGE_DATA_LOW_RESERVE = -3, // not enough funds to create a new Data Entry\n//       MANAGE_DATA_INVALID_NAME = -4 // Name not a valid string\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ManageDataResultCode\", {\n  manageDataSuccess: 0,\n  manageDataNotSupportedYet: -1,\n  manageDataNameNotFound: -2,\n  manageDataLowReserve: -3,\n  manageDataInvalidName: -4,\n});\n\n// === xdr source ============================================================\n//\n//   union ManageDataResult switch (ManageDataResultCode code)\n//   {\n//   case MANAGE_DATA_SUCCESS:\n//       void;\n//   case MANAGE_DATA_NOT_SUPPORTED_YET:\n//   case MANAGE_DATA_NAME_NOT_FOUND:\n//   case MANAGE_DATA_LOW_RESERVE:\n//   case MANAGE_DATA_INVALID_NAME:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ManageDataResult\", {\n  switchOn: xdr.lookup(\"ManageDataResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"manageDataSuccess\", xdr.void()],\n    [\"manageDataNotSupportedYet\", xdr.void()],\n    [\"manageDataNameNotFound\", xdr.void()],\n    [\"manageDataLowReserve\", xdr.void()],\n    [\"manageDataInvalidName\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum BumpSequenceResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       BUMP_SEQUENCE_SUCCESS = 0,\n//       // codes considered as \"failure\" for the operation\n//       BUMP_SEQUENCE_BAD_SEQ = -1 // `bumpTo` is not within bounds\n//   };\n//\n// ===========================================================================\nxdr.enum(\"BumpSequenceResultCode\", {\n  bumpSequenceSuccess: 0,\n  bumpSequenceBadSeq: -1,\n});\n\n// === xdr source ============================================================\n//\n//   union BumpSequenceResult switch (BumpSequenceResultCode code)\n//   {\n//   case BUMP_SEQUENCE_SUCCESS:\n//       void;\n//   case BUMP_SEQUENCE_BAD_SEQ:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"BumpSequenceResult\", {\n  switchOn: xdr.lookup(\"BumpSequenceResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"bumpSequenceSuccess\", xdr.void()],\n    [\"bumpSequenceBadSeq\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum CreateClaimableBalanceResultCode\n//   {\n//       CREATE_CLAIMABLE_BALANCE_SUCCESS = 0,\n//       CREATE_CLAIMABLE_BALANCE_MALFORMED = -1,\n//       CREATE_CLAIMABLE_BALANCE_LOW_RESERVE = -2,\n//       CREATE_CLAIMABLE_BALANCE_NO_TRUST = -3,\n//       CREATE_CLAIMABLE_BALANCE_NOT_AUTHORIZED = -4,\n//       CREATE_CLAIMABLE_BALANCE_UNDERFUNDED = -5\n//   };\n//\n// ===========================================================================\nxdr.enum(\"CreateClaimableBalanceResultCode\", {\n  createClaimableBalanceSuccess: 0,\n  createClaimableBalanceMalformed: -1,\n  createClaimableBalanceLowReserve: -2,\n  createClaimableBalanceNoTrust: -3,\n  createClaimableBalanceNotAuthorized: -4,\n  createClaimableBalanceUnderfunded: -5,\n});\n\n// === xdr source ============================================================\n//\n//   union CreateClaimableBalanceResult switch (\n//       CreateClaimableBalanceResultCode code)\n//   {\n//   case CREATE_CLAIMABLE_BALANCE_SUCCESS:\n//       ClaimableBalanceID balanceID;\n//   case CREATE_CLAIMABLE_BALANCE_MALFORMED:\n//   case CREATE_CLAIMABLE_BALANCE_LOW_RESERVE:\n//   case CREATE_CLAIMABLE_BALANCE_NO_TRUST:\n//   case CREATE_CLAIMABLE_BALANCE_NOT_AUTHORIZED:\n//   case CREATE_CLAIMABLE_BALANCE_UNDERFUNDED:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"CreateClaimableBalanceResult\", {\n  switchOn: xdr.lookup(\"CreateClaimableBalanceResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"createClaimableBalanceSuccess\", \"balanceId\"],\n    [\"createClaimableBalanceMalformed\", xdr.void()],\n    [\"createClaimableBalanceLowReserve\", xdr.void()],\n    [\"createClaimableBalanceNoTrust\", xdr.void()],\n    [\"createClaimableBalanceNotAuthorized\", xdr.void()],\n    [\"createClaimableBalanceUnderfunded\", xdr.void()],\n  ],\n  arms: {\n    balanceId: xdr.lookup(\"ClaimableBalanceId\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum ClaimClaimableBalanceResultCode\n//   {\n//       CLAIM_CLAIMABLE_BALANCE_SUCCESS = 0,\n//       CLAIM_CLAIMABLE_BALANCE_DOES_NOT_EXIST = -1,\n//       CLAIM_CLAIMABLE_BALANCE_CANNOT_CLAIM = -2,\n//       CLAIM_CLAIMABLE_BALANCE_LINE_FULL = -3,\n//       CLAIM_CLAIMABLE_BALANCE_NO_TRUST = -4,\n//       CLAIM_CLAIMABLE_BALANCE_NOT_AUTHORIZED = -5\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ClaimClaimableBalanceResultCode\", {\n  claimClaimableBalanceSuccess: 0,\n  claimClaimableBalanceDoesNotExist: -1,\n  claimClaimableBalanceCannotClaim: -2,\n  claimClaimableBalanceLineFull: -3,\n  claimClaimableBalanceNoTrust: -4,\n  claimClaimableBalanceNotAuthorized: -5,\n});\n\n// === xdr source ============================================================\n//\n//   union ClaimClaimableBalanceResult switch (ClaimClaimableBalanceResultCode code)\n//   {\n//   case CLAIM_CLAIMABLE_BALANCE_SUCCESS:\n//       void;\n//   case CLAIM_CLAIMABLE_BALANCE_DOES_NOT_EXIST:\n//   case CLAIM_CLAIMABLE_BALANCE_CANNOT_CLAIM:\n//   case CLAIM_CLAIMABLE_BALANCE_LINE_FULL:\n//   case CLAIM_CLAIMABLE_BALANCE_NO_TRUST:\n//   case CLAIM_CLAIMABLE_BALANCE_NOT_AUTHORIZED:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ClaimClaimableBalanceResult\", {\n  switchOn: xdr.lookup(\"ClaimClaimableBalanceResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"claimClaimableBalanceSuccess\", xdr.void()],\n    [\"claimClaimableBalanceDoesNotExist\", xdr.void()],\n    [\"claimClaimableBalanceCannotClaim\", xdr.void()],\n    [\"claimClaimableBalanceLineFull\", xdr.void()],\n    [\"claimClaimableBalanceNoTrust\", xdr.void()],\n    [\"claimClaimableBalanceNotAuthorized\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum BeginSponsoringFutureReservesResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       BEGIN_SPONSORING_FUTURE_RESERVES_SUCCESS = 0,\n//   \n//       // codes considered as \"failure\" for the operation\n//       BEGIN_SPONSORING_FUTURE_RESERVES_MALFORMED = -1,\n//       BEGIN_SPONSORING_FUTURE_RESERVES_ALREADY_SPONSORED = -2,\n//       BEGIN_SPONSORING_FUTURE_RESERVES_RECURSIVE = -3\n//   };\n//\n// ===========================================================================\nxdr.enum(\"BeginSponsoringFutureReservesResultCode\", {\n  beginSponsoringFutureReservesSuccess: 0,\n  beginSponsoringFutureReservesMalformed: -1,\n  beginSponsoringFutureReservesAlreadySponsored: -2,\n  beginSponsoringFutureReservesRecursive: -3,\n});\n\n// === xdr source ============================================================\n//\n//   union BeginSponsoringFutureReservesResult switch (\n//       BeginSponsoringFutureReservesResultCode code)\n//   {\n//   case BEGIN_SPONSORING_FUTURE_RESERVES_SUCCESS:\n//       void;\n//   case BEGIN_SPONSORING_FUTURE_RESERVES_MALFORMED:\n//   case BEGIN_SPONSORING_FUTURE_RESERVES_ALREADY_SPONSORED:\n//   case BEGIN_SPONSORING_FUTURE_RESERVES_RECURSIVE:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"BeginSponsoringFutureReservesResult\", {\n  switchOn: xdr.lookup(\"BeginSponsoringFutureReservesResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"beginSponsoringFutureReservesSuccess\", xdr.void()],\n    [\"beginSponsoringFutureReservesMalformed\", xdr.void()],\n    [\"beginSponsoringFutureReservesAlreadySponsored\", xdr.void()],\n    [\"beginSponsoringFutureReservesRecursive\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum EndSponsoringFutureReservesResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       END_SPONSORING_FUTURE_RESERVES_SUCCESS = 0,\n//   \n//       // codes considered as \"failure\" for the operation\n//       END_SPONSORING_FUTURE_RESERVES_NOT_SPONSORED = -1\n//   };\n//\n// ===========================================================================\nxdr.enum(\"EndSponsoringFutureReservesResultCode\", {\n  endSponsoringFutureReservesSuccess: 0,\n  endSponsoringFutureReservesNotSponsored: -1,\n});\n\n// === xdr source ============================================================\n//\n//   union EndSponsoringFutureReservesResult switch (\n//       EndSponsoringFutureReservesResultCode code)\n//   {\n//   case END_SPONSORING_FUTURE_RESERVES_SUCCESS:\n//       void;\n//   case END_SPONSORING_FUTURE_RESERVES_NOT_SPONSORED:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"EndSponsoringFutureReservesResult\", {\n  switchOn: xdr.lookup(\"EndSponsoringFutureReservesResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"endSponsoringFutureReservesSuccess\", xdr.void()],\n    [\"endSponsoringFutureReservesNotSponsored\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum RevokeSponsorshipResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       REVOKE_SPONSORSHIP_SUCCESS = 0,\n//   \n//       // codes considered as \"failure\" for the operation\n//       REVOKE_SPONSORSHIP_DOES_NOT_EXIST = -1,\n//       REVOKE_SPONSORSHIP_NOT_SPONSOR = -2,\n//       REVOKE_SPONSORSHIP_LOW_RESERVE = -3,\n//       REVOKE_SPONSORSHIP_ONLY_TRANSFERABLE = -4,\n//       REVOKE_SPONSORSHIP_MALFORMED = -5\n//   };\n//\n// ===========================================================================\nxdr.enum(\"RevokeSponsorshipResultCode\", {\n  revokeSponsorshipSuccess: 0,\n  revokeSponsorshipDoesNotExist: -1,\n  revokeSponsorshipNotSponsor: -2,\n  revokeSponsorshipLowReserve: -3,\n  revokeSponsorshipOnlyTransferable: -4,\n  revokeSponsorshipMalformed: -5,\n});\n\n// === xdr source ============================================================\n//\n//   union RevokeSponsorshipResult switch (RevokeSponsorshipResultCode code)\n//   {\n//   case REVOKE_SPONSORSHIP_SUCCESS:\n//       void;\n//   case REVOKE_SPONSORSHIP_DOES_NOT_EXIST:\n//   case REVOKE_SPONSORSHIP_NOT_SPONSOR:\n//   case REVOKE_SPONSORSHIP_LOW_RESERVE:\n//   case REVOKE_SPONSORSHIP_ONLY_TRANSFERABLE:\n//   case REVOKE_SPONSORSHIP_MALFORMED:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"RevokeSponsorshipResult\", {\n  switchOn: xdr.lookup(\"RevokeSponsorshipResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"revokeSponsorshipSuccess\", xdr.void()],\n    [\"revokeSponsorshipDoesNotExist\", xdr.void()],\n    [\"revokeSponsorshipNotSponsor\", xdr.void()],\n    [\"revokeSponsorshipLowReserve\", xdr.void()],\n    [\"revokeSponsorshipOnlyTransferable\", xdr.void()],\n    [\"revokeSponsorshipMalformed\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum ClawbackResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       CLAWBACK_SUCCESS = 0,\n//   \n//       // codes considered as \"failure\" for the operation\n//       CLAWBACK_MALFORMED = -1,\n//       CLAWBACK_NOT_CLAWBACK_ENABLED = -2,\n//       CLAWBACK_NO_TRUST = -3,\n//       CLAWBACK_UNDERFUNDED = -4\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ClawbackResultCode\", {\n  clawbackSuccess: 0,\n  clawbackMalformed: -1,\n  clawbackNotClawbackEnabled: -2,\n  clawbackNoTrust: -3,\n  clawbackUnderfunded: -4,\n});\n\n// === xdr source ============================================================\n//\n//   union ClawbackResult switch (ClawbackResultCode code)\n//   {\n//   case CLAWBACK_SUCCESS:\n//       void;\n//   case CLAWBACK_MALFORMED:\n//   case CLAWBACK_NOT_CLAWBACK_ENABLED:\n//   case CLAWBACK_NO_TRUST:\n//   case CLAWBACK_UNDERFUNDED:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ClawbackResult\", {\n  switchOn: xdr.lookup(\"ClawbackResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"clawbackSuccess\", xdr.void()],\n    [\"clawbackMalformed\", xdr.void()],\n    [\"clawbackNotClawbackEnabled\", xdr.void()],\n    [\"clawbackNoTrust\", xdr.void()],\n    [\"clawbackUnderfunded\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum ClawbackClaimableBalanceResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       CLAWBACK_CLAIMABLE_BALANCE_SUCCESS = 0,\n//   \n//       // codes considered as \"failure\" for the operation\n//       CLAWBACK_CLAIMABLE_BALANCE_DOES_NOT_EXIST = -1,\n//       CLAWBACK_CLAIMABLE_BALANCE_NOT_ISSUER = -2,\n//       CLAWBACK_CLAIMABLE_BALANCE_NOT_CLAWBACK_ENABLED = -3\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ClawbackClaimableBalanceResultCode\", {\n  clawbackClaimableBalanceSuccess: 0,\n  clawbackClaimableBalanceDoesNotExist: -1,\n  clawbackClaimableBalanceNotIssuer: -2,\n  clawbackClaimableBalanceNotClawbackEnabled: -3,\n});\n\n// === xdr source ============================================================\n//\n//   union ClawbackClaimableBalanceResult switch (\n//       ClawbackClaimableBalanceResultCode code)\n//   {\n//   case CLAWBACK_CLAIMABLE_BALANCE_SUCCESS:\n//       void;\n//   case CLAWBACK_CLAIMABLE_BALANCE_DOES_NOT_EXIST:\n//   case CLAWBACK_CLAIMABLE_BALANCE_NOT_ISSUER:\n//   case CLAWBACK_CLAIMABLE_BALANCE_NOT_CLAWBACK_ENABLED:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ClawbackClaimableBalanceResult\", {\n  switchOn: xdr.lookup(\"ClawbackClaimableBalanceResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"clawbackClaimableBalanceSuccess\", xdr.void()],\n    [\"clawbackClaimableBalanceDoesNotExist\", xdr.void()],\n    [\"clawbackClaimableBalanceNotIssuer\", xdr.void()],\n    [\"clawbackClaimableBalanceNotClawbackEnabled\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum SetTrustLineFlagsResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       SET_TRUST_LINE_FLAGS_SUCCESS = 0,\n//   \n//       // codes considered as \"failure\" for the operation\n//       SET_TRUST_LINE_FLAGS_MALFORMED = -1,\n//       SET_TRUST_LINE_FLAGS_NO_TRUST_LINE = -2,\n//       SET_TRUST_LINE_FLAGS_CANT_REVOKE = -3,\n//       SET_TRUST_LINE_FLAGS_INVALID_STATE = -4,\n//       SET_TRUST_LINE_FLAGS_LOW_RESERVE = -5 // claimable balances can't be created\n//                                             // on revoke due to low reserves\n//   };\n//\n// ===========================================================================\nxdr.enum(\"SetTrustLineFlagsResultCode\", {\n  setTrustLineFlagsSuccess: 0,\n  setTrustLineFlagsMalformed: -1,\n  setTrustLineFlagsNoTrustLine: -2,\n  setTrustLineFlagsCantRevoke: -3,\n  setTrustLineFlagsInvalidState: -4,\n  setTrustLineFlagsLowReserve: -5,\n});\n\n// === xdr source ============================================================\n//\n//   union SetTrustLineFlagsResult switch (SetTrustLineFlagsResultCode code)\n//   {\n//   case SET_TRUST_LINE_FLAGS_SUCCESS:\n//       void;\n//   case SET_TRUST_LINE_FLAGS_MALFORMED:\n//   case SET_TRUST_LINE_FLAGS_NO_TRUST_LINE:\n//   case SET_TRUST_LINE_FLAGS_CANT_REVOKE:\n//   case SET_TRUST_LINE_FLAGS_INVALID_STATE:\n//   case SET_TRUST_LINE_FLAGS_LOW_RESERVE:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"SetTrustLineFlagsResult\", {\n  switchOn: xdr.lookup(\"SetTrustLineFlagsResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"setTrustLineFlagsSuccess\", xdr.void()],\n    [\"setTrustLineFlagsMalformed\", xdr.void()],\n    [\"setTrustLineFlagsNoTrustLine\", xdr.void()],\n    [\"setTrustLineFlagsCantRevoke\", xdr.void()],\n    [\"setTrustLineFlagsInvalidState\", xdr.void()],\n    [\"setTrustLineFlagsLowReserve\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum LiquidityPoolDepositResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       LIQUIDITY_POOL_DEPOSIT_SUCCESS = 0,\n//   \n//       // codes considered as \"failure\" for the operation\n//       LIQUIDITY_POOL_DEPOSIT_MALFORMED = -1,      // bad input\n//       LIQUIDITY_POOL_DEPOSIT_NO_TRUST = -2,       // no trust line for one of the\n//                                                   // assets\n//       LIQUIDITY_POOL_DEPOSIT_NOT_AUTHORIZED = -3, // not authorized for one of the\n//                                                   // assets\n//       LIQUIDITY_POOL_DEPOSIT_UNDERFUNDED = -4,    // not enough balance for one of\n//                                                   // the assets\n//       LIQUIDITY_POOL_DEPOSIT_LINE_FULL = -5,      // pool share trust line doesn't\n//                                                   // have sufficient limit\n//       LIQUIDITY_POOL_DEPOSIT_BAD_PRICE = -6,      // deposit price outside bounds\n//       LIQUIDITY_POOL_DEPOSIT_POOL_FULL = -7       // pool reserves are full\n//   };\n//\n// ===========================================================================\nxdr.enum(\"LiquidityPoolDepositResultCode\", {\n  liquidityPoolDepositSuccess: 0,\n  liquidityPoolDepositMalformed: -1,\n  liquidityPoolDepositNoTrust: -2,\n  liquidityPoolDepositNotAuthorized: -3,\n  liquidityPoolDepositUnderfunded: -4,\n  liquidityPoolDepositLineFull: -5,\n  liquidityPoolDepositBadPrice: -6,\n  liquidityPoolDepositPoolFull: -7,\n});\n\n// === xdr source ============================================================\n//\n//   union LiquidityPoolDepositResult switch (LiquidityPoolDepositResultCode code)\n//   {\n//   case LIQUIDITY_POOL_DEPOSIT_SUCCESS:\n//       void;\n//   case LIQUIDITY_POOL_DEPOSIT_MALFORMED:\n//   case LIQUIDITY_POOL_DEPOSIT_NO_TRUST:\n//   case LIQUIDITY_POOL_DEPOSIT_NOT_AUTHORIZED:\n//   case LIQUIDITY_POOL_DEPOSIT_UNDERFUNDED:\n//   case LIQUIDITY_POOL_DEPOSIT_LINE_FULL:\n//   case LIQUIDITY_POOL_DEPOSIT_BAD_PRICE:\n//   case LIQUIDITY_POOL_DEPOSIT_POOL_FULL:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"LiquidityPoolDepositResult\", {\n  switchOn: xdr.lookup(\"LiquidityPoolDepositResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"liquidityPoolDepositSuccess\", xdr.void()],\n    [\"liquidityPoolDepositMalformed\", xdr.void()],\n    [\"liquidityPoolDepositNoTrust\", xdr.void()],\n    [\"liquidityPoolDepositNotAuthorized\", xdr.void()],\n    [\"liquidityPoolDepositUnderfunded\", xdr.void()],\n    [\"liquidityPoolDepositLineFull\", xdr.void()],\n    [\"liquidityPoolDepositBadPrice\", xdr.void()],\n    [\"liquidityPoolDepositPoolFull\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum LiquidityPoolWithdrawResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       LIQUIDITY_POOL_WITHDRAW_SUCCESS = 0,\n//   \n//       // codes considered as \"failure\" for the operation\n//       LIQUIDITY_POOL_WITHDRAW_MALFORMED = -1,    // bad input\n//       LIQUIDITY_POOL_WITHDRAW_NO_TRUST = -2,     // no trust line for one of the\n//                                                  // assets\n//       LIQUIDITY_POOL_WITHDRAW_UNDERFUNDED = -3,  // not enough balance of the\n//                                                  // pool share\n//       LIQUIDITY_POOL_WITHDRAW_LINE_FULL = -4,    // would go above limit for one\n//                                                  // of the assets\n//       LIQUIDITY_POOL_WITHDRAW_UNDER_MINIMUM = -5 // didn't withdraw enough\n//   };\n//\n// ===========================================================================\nxdr.enum(\"LiquidityPoolWithdrawResultCode\", {\n  liquidityPoolWithdrawSuccess: 0,\n  liquidityPoolWithdrawMalformed: -1,\n  liquidityPoolWithdrawNoTrust: -2,\n  liquidityPoolWithdrawUnderfunded: -3,\n  liquidityPoolWithdrawLineFull: -4,\n  liquidityPoolWithdrawUnderMinimum: -5,\n});\n\n// === xdr source ============================================================\n//\n//   union LiquidityPoolWithdrawResult switch (LiquidityPoolWithdrawResultCode code)\n//   {\n//   case LIQUIDITY_POOL_WITHDRAW_SUCCESS:\n//       void;\n//   case LIQUIDITY_POOL_WITHDRAW_MALFORMED:\n//   case LIQUIDITY_POOL_WITHDRAW_NO_TRUST:\n//   case LIQUIDITY_POOL_WITHDRAW_UNDERFUNDED:\n//   case LIQUIDITY_POOL_WITHDRAW_LINE_FULL:\n//   case LIQUIDITY_POOL_WITHDRAW_UNDER_MINIMUM:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"LiquidityPoolWithdrawResult\", {\n  switchOn: xdr.lookup(\"LiquidityPoolWithdrawResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"liquidityPoolWithdrawSuccess\", xdr.void()],\n    [\"liquidityPoolWithdrawMalformed\", xdr.void()],\n    [\"liquidityPoolWithdrawNoTrust\", xdr.void()],\n    [\"liquidityPoolWithdrawUnderfunded\", xdr.void()],\n    [\"liquidityPoolWithdrawLineFull\", xdr.void()],\n    [\"liquidityPoolWithdrawUnderMinimum\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum InvokeHostFunctionResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       INVOKE_HOST_FUNCTION_SUCCESS = 0,\n//   \n//       // codes considered as \"failure\" for the operation\n//       INVOKE_HOST_FUNCTION_MALFORMED = -1,\n//       INVOKE_HOST_FUNCTION_TRAPPED = -2,\n//       INVOKE_HOST_FUNCTION_RESOURCE_LIMIT_EXCEEDED = -3,\n//       INVOKE_HOST_FUNCTION_ENTRY_ARCHIVED = -4,\n//       INVOKE_HOST_FUNCTION_INSUFFICIENT_REFUNDABLE_FEE = -5\n//   };\n//\n// ===========================================================================\nxdr.enum(\"InvokeHostFunctionResultCode\", {\n  invokeHostFunctionSuccess: 0,\n  invokeHostFunctionMalformed: -1,\n  invokeHostFunctionTrapped: -2,\n  invokeHostFunctionResourceLimitExceeded: -3,\n  invokeHostFunctionEntryArchived: -4,\n  invokeHostFunctionInsufficientRefundableFee: -5,\n});\n\n// === xdr source ============================================================\n//\n//   union InvokeHostFunctionResult switch (InvokeHostFunctionResultCode code)\n//   {\n//   case INVOKE_HOST_FUNCTION_SUCCESS:\n//       Hash success; // sha256(InvokeHostFunctionSuccessPreImage)\n//   case INVOKE_HOST_FUNCTION_MALFORMED:\n//   case INVOKE_HOST_FUNCTION_TRAPPED:\n//   case INVOKE_HOST_FUNCTION_RESOURCE_LIMIT_EXCEEDED:\n//   case INVOKE_HOST_FUNCTION_ENTRY_ARCHIVED:\n//   case INVOKE_HOST_FUNCTION_INSUFFICIENT_REFUNDABLE_FEE:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"InvokeHostFunctionResult\", {\n  switchOn: xdr.lookup(\"InvokeHostFunctionResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"invokeHostFunctionSuccess\", \"success\"],\n    [\"invokeHostFunctionMalformed\", xdr.void()],\n    [\"invokeHostFunctionTrapped\", xdr.void()],\n    [\"invokeHostFunctionResourceLimitExceeded\", xdr.void()],\n    [\"invokeHostFunctionEntryArchived\", xdr.void()],\n    [\"invokeHostFunctionInsufficientRefundableFee\", xdr.void()],\n  ],\n  arms: {\n    success: xdr.lookup(\"Hash\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum ExtendFootprintTTLResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       EXTEND_FOOTPRINT_TTL_SUCCESS = 0,\n//   \n//       // codes considered as \"failure\" for the operation\n//       EXTEND_FOOTPRINT_TTL_MALFORMED = -1,\n//       EXTEND_FOOTPRINT_TTL_RESOURCE_LIMIT_EXCEEDED = -2,\n//       EXTEND_FOOTPRINT_TTL_INSUFFICIENT_REFUNDABLE_FEE = -3\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ExtendFootprintTtlResultCode\", {\n  extendFootprintTtlSuccess: 0,\n  extendFootprintTtlMalformed: -1,\n  extendFootprintTtlResourceLimitExceeded: -2,\n  extendFootprintTtlInsufficientRefundableFee: -3,\n});\n\n// === xdr source ============================================================\n//\n//   union ExtendFootprintTTLResult switch (ExtendFootprintTTLResultCode code)\n//   {\n//   case EXTEND_FOOTPRINT_TTL_SUCCESS:\n//       void;\n//   case EXTEND_FOOTPRINT_TTL_MALFORMED:\n//   case EXTEND_FOOTPRINT_TTL_RESOURCE_LIMIT_EXCEEDED:\n//   case EXTEND_FOOTPRINT_TTL_INSUFFICIENT_REFUNDABLE_FEE:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ExtendFootprintTtlResult\", {\n  switchOn: xdr.lookup(\"ExtendFootprintTtlResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"extendFootprintTtlSuccess\", xdr.void()],\n    [\"extendFootprintTtlMalformed\", xdr.void()],\n    [\"extendFootprintTtlResourceLimitExceeded\", xdr.void()],\n    [\"extendFootprintTtlInsufficientRefundableFee\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum RestoreFootprintResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       RESTORE_FOOTPRINT_SUCCESS = 0,\n//   \n//       // codes considered as \"failure\" for the operation\n//       RESTORE_FOOTPRINT_MALFORMED = -1,\n//       RESTORE_FOOTPRINT_RESOURCE_LIMIT_EXCEEDED = -2,\n//       RESTORE_FOOTPRINT_INSUFFICIENT_REFUNDABLE_FEE = -3\n//   };\n//\n// ===========================================================================\nxdr.enum(\"RestoreFootprintResultCode\", {\n  restoreFootprintSuccess: 0,\n  restoreFootprintMalformed: -1,\n  restoreFootprintResourceLimitExceeded: -2,\n  restoreFootprintInsufficientRefundableFee: -3,\n});\n\n// === xdr source ============================================================\n//\n//   union RestoreFootprintResult switch (RestoreFootprintResultCode code)\n//   {\n//   case RESTORE_FOOTPRINT_SUCCESS:\n//       void;\n//   case RESTORE_FOOTPRINT_MALFORMED:\n//   case RESTORE_FOOTPRINT_RESOURCE_LIMIT_EXCEEDED:\n//   case RESTORE_FOOTPRINT_INSUFFICIENT_REFUNDABLE_FEE:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"RestoreFootprintResult\", {\n  switchOn: xdr.lookup(\"RestoreFootprintResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"restoreFootprintSuccess\", xdr.void()],\n    [\"restoreFootprintMalformed\", xdr.void()],\n    [\"restoreFootprintResourceLimitExceeded\", xdr.void()],\n    [\"restoreFootprintInsufficientRefundableFee\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum OperationResultCode\n//   {\n//       opINNER = 0, // inner object result is valid\n//   \n//       opBAD_AUTH = -1,            // too few valid signatures / wrong network\n//       opNO_ACCOUNT = -2,          // source account was not found\n//       opNOT_SUPPORTED = -3,       // operation not supported at this time\n//       opTOO_MANY_SUBENTRIES = -4, // max number of subentries already reached\n//       opEXCEEDED_WORK_LIMIT = -5, // operation did too much work\n//       opTOO_MANY_SPONSORING = -6  // account is sponsoring too many entries\n//   };\n//\n// ===========================================================================\nxdr.enum(\"OperationResultCode\", {\n  opInner: 0,\n  opBadAuth: -1,\n  opNoAccount: -2,\n  opNotSupported: -3,\n  opTooManySubentries: -4,\n  opExceededWorkLimit: -5,\n  opTooManySponsoring: -6,\n});\n\n// === xdr source ============================================================\n//\n//   union switch (OperationType type)\n//       {\n//       case CREATE_ACCOUNT:\n//           CreateAccountResult createAccountResult;\n//       case PAYMENT:\n//           PaymentResult paymentResult;\n//       case PATH_PAYMENT_STRICT_RECEIVE:\n//           PathPaymentStrictReceiveResult pathPaymentStrictReceiveResult;\n//       case MANAGE_SELL_OFFER:\n//           ManageSellOfferResult manageSellOfferResult;\n//       case CREATE_PASSIVE_SELL_OFFER:\n//           ManageSellOfferResult createPassiveSellOfferResult;\n//       case SET_OPTIONS:\n//           SetOptionsResult setOptionsResult;\n//       case CHANGE_TRUST:\n//           ChangeTrustResult changeTrustResult;\n//       case ALLOW_TRUST:\n//           AllowTrustResult allowTrustResult;\n//       case ACCOUNT_MERGE:\n//           AccountMergeResult accountMergeResult;\n//       case INFLATION:\n//           InflationResult inflationResult;\n//       case MANAGE_DATA:\n//           ManageDataResult manageDataResult;\n//       case BUMP_SEQUENCE:\n//           BumpSequenceResult bumpSeqResult;\n//       case MANAGE_BUY_OFFER:\n//           ManageBuyOfferResult manageBuyOfferResult;\n//       case PATH_PAYMENT_STRICT_SEND:\n//           PathPaymentStrictSendResult pathPaymentStrictSendResult;\n//       case CREATE_CLAIMABLE_BALANCE:\n//           CreateClaimableBalanceResult createClaimableBalanceResult;\n//       case CLAIM_CLAIMABLE_BALANCE:\n//           ClaimClaimableBalanceResult claimClaimableBalanceResult;\n//       case BEGIN_SPONSORING_FUTURE_RESERVES:\n//           BeginSponsoringFutureReservesResult beginSponsoringFutureReservesResult;\n//       case END_SPONSORING_FUTURE_RESERVES:\n//           EndSponsoringFutureReservesResult endSponsoringFutureReservesResult;\n//       case REVOKE_SPONSORSHIP:\n//           RevokeSponsorshipResult revokeSponsorshipResult;\n//       case CLAWBACK:\n//           ClawbackResult clawbackResult;\n//       case CLAWBACK_CLAIMABLE_BALANCE:\n//           ClawbackClaimableBalanceResult clawbackClaimableBalanceResult;\n//       case SET_TRUST_LINE_FLAGS:\n//           SetTrustLineFlagsResult setTrustLineFlagsResult;\n//       case LIQUIDITY_POOL_DEPOSIT:\n//           LiquidityPoolDepositResult liquidityPoolDepositResult;\n//       case LIQUIDITY_POOL_WITHDRAW:\n//           LiquidityPoolWithdrawResult liquidityPoolWithdrawResult;\n//       case INVOKE_HOST_FUNCTION:\n//           InvokeHostFunctionResult invokeHostFunctionResult;\n//       case EXTEND_FOOTPRINT_TTL:\n//           ExtendFootprintTTLResult extendFootprintTTLResult;\n//       case RESTORE_FOOTPRINT:\n//           RestoreFootprintResult restoreFootprintResult;\n//       }\n//\n// ===========================================================================\nxdr.union(\"OperationResultTr\", {\n  switchOn: xdr.lookup(\"OperationType\"),\n  switchName: \"type\",\n  switches: [\n    [\"createAccount\", \"createAccountResult\"],\n    [\"payment\", \"paymentResult\"],\n    [\"pathPaymentStrictReceive\", \"pathPaymentStrictReceiveResult\"],\n    [\"manageSellOffer\", \"manageSellOfferResult\"],\n    [\"createPassiveSellOffer\", \"createPassiveSellOfferResult\"],\n    [\"setOptions\", \"setOptionsResult\"],\n    [\"changeTrust\", \"changeTrustResult\"],\n    [\"allowTrust\", \"allowTrustResult\"],\n    [\"accountMerge\", \"accountMergeResult\"],\n    [\"inflation\", \"inflationResult\"],\n    [\"manageData\", \"manageDataResult\"],\n    [\"bumpSequence\", \"bumpSeqResult\"],\n    [\"manageBuyOffer\", \"manageBuyOfferResult\"],\n    [\"pathPaymentStrictSend\", \"pathPaymentStrictSendResult\"],\n    [\"createClaimableBalance\", \"createClaimableBalanceResult\"],\n    [\"claimClaimableBalance\", \"claimClaimableBalanceResult\"],\n    [\"beginSponsoringFutureReserves\", \"beginSponsoringFutureReservesResult\"],\n    [\"endSponsoringFutureReserves\", \"endSponsoringFutureReservesResult\"],\n    [\"revokeSponsorship\", \"revokeSponsorshipResult\"],\n    [\"clawback\", \"clawbackResult\"],\n    [\"clawbackClaimableBalance\", \"clawbackClaimableBalanceResult\"],\n    [\"setTrustLineFlags\", \"setTrustLineFlagsResult\"],\n    [\"liquidityPoolDeposit\", \"liquidityPoolDepositResult\"],\n    [\"liquidityPoolWithdraw\", \"liquidityPoolWithdrawResult\"],\n    [\"invokeHostFunction\", \"invokeHostFunctionResult\"],\n    [\"extendFootprintTtl\", \"extendFootprintTtlResult\"],\n    [\"restoreFootprint\", \"restoreFootprintResult\"],\n  ],\n  arms: {\n    createAccountResult: xdr.lookup(\"CreateAccountResult\"),\n    paymentResult: xdr.lookup(\"PaymentResult\"),\n    pathPaymentStrictReceiveResult: xdr.lookup(\"PathPaymentStrictReceiveResult\"),\n    manageSellOfferResult: xdr.lookup(\"ManageSellOfferResult\"),\n    createPassiveSellOfferResult: xdr.lookup(\"ManageSellOfferResult\"),\n    setOptionsResult: xdr.lookup(\"SetOptionsResult\"),\n    changeTrustResult: xdr.lookup(\"ChangeTrustResult\"),\n    allowTrustResult: xdr.lookup(\"AllowTrustResult\"),\n    accountMergeResult: xdr.lookup(\"AccountMergeResult\"),\n    inflationResult: xdr.lookup(\"InflationResult\"),\n    manageDataResult: xdr.lookup(\"ManageDataResult\"),\n    bumpSeqResult: xdr.lookup(\"BumpSequenceResult\"),\n    manageBuyOfferResult: xdr.lookup(\"ManageBuyOfferResult\"),\n    pathPaymentStrictSendResult: xdr.lookup(\"PathPaymentStrictSendResult\"),\n    createClaimableBalanceResult: xdr.lookup(\"CreateClaimableBalanceResult\"),\n    claimClaimableBalanceResult: xdr.lookup(\"ClaimClaimableBalanceResult\"),\n    beginSponsoringFutureReservesResult: xdr.lookup(\"BeginSponsoringFutureReservesResult\"),\n    endSponsoringFutureReservesResult: xdr.lookup(\"EndSponsoringFutureReservesResult\"),\n    revokeSponsorshipResult: xdr.lookup(\"RevokeSponsorshipResult\"),\n    clawbackResult: xdr.lookup(\"ClawbackResult\"),\n    clawbackClaimableBalanceResult: xdr.lookup(\"ClawbackClaimableBalanceResult\"),\n    setTrustLineFlagsResult: xdr.lookup(\"SetTrustLineFlagsResult\"),\n    liquidityPoolDepositResult: xdr.lookup(\"LiquidityPoolDepositResult\"),\n    liquidityPoolWithdrawResult: xdr.lookup(\"LiquidityPoolWithdrawResult\"),\n    invokeHostFunctionResult: xdr.lookup(\"InvokeHostFunctionResult\"),\n    extendFootprintTtlResult: xdr.lookup(\"ExtendFootprintTtlResult\"),\n    restoreFootprintResult: xdr.lookup(\"RestoreFootprintResult\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   union OperationResult switch (OperationResultCode code)\n//   {\n//   case opINNER:\n//       union switch (OperationType type)\n//       {\n//       case CREATE_ACCOUNT:\n//           CreateAccountResult createAccountResult;\n//       case PAYMENT:\n//           PaymentResult paymentResult;\n//       case PATH_PAYMENT_STRICT_RECEIVE:\n//           PathPaymentStrictReceiveResult pathPaymentStrictReceiveResult;\n//       case MANAGE_SELL_OFFER:\n//           ManageSellOfferResult manageSellOfferResult;\n//       case CREATE_PASSIVE_SELL_OFFER:\n//           ManageSellOfferResult createPassiveSellOfferResult;\n//       case SET_OPTIONS:\n//           SetOptionsResult setOptionsResult;\n//       case CHANGE_TRUST:\n//           ChangeTrustResult changeTrustResult;\n//       case ALLOW_TRUST:\n//           AllowTrustResult allowTrustResult;\n//       case ACCOUNT_MERGE:\n//           AccountMergeResult accountMergeResult;\n//       case INFLATION:\n//           InflationResult inflationResult;\n//       case MANAGE_DATA:\n//           ManageDataResult manageDataResult;\n//       case BUMP_SEQUENCE:\n//           BumpSequenceResult bumpSeqResult;\n//       case MANAGE_BUY_OFFER:\n//           ManageBuyOfferResult manageBuyOfferResult;\n//       case PATH_PAYMENT_STRICT_SEND:\n//           PathPaymentStrictSendResult pathPaymentStrictSendResult;\n//       case CREATE_CLAIMABLE_BALANCE:\n//           CreateClaimableBalanceResult createClaimableBalanceResult;\n//       case CLAIM_CLAIMABLE_BALANCE:\n//           ClaimClaimableBalanceResult claimClaimableBalanceResult;\n//       case BEGIN_SPONSORING_FUTURE_RESERVES:\n//           BeginSponsoringFutureReservesResult beginSponsoringFutureReservesResult;\n//       case END_SPONSORING_FUTURE_RESERVES:\n//           EndSponsoringFutureReservesResult endSponsoringFutureReservesResult;\n//       case REVOKE_SPONSORSHIP:\n//           RevokeSponsorshipResult revokeSponsorshipResult;\n//       case CLAWBACK:\n//           ClawbackResult clawbackResult;\n//       case CLAWBACK_CLAIMABLE_BALANCE:\n//           ClawbackClaimableBalanceResult clawbackClaimableBalanceResult;\n//       case SET_TRUST_LINE_FLAGS:\n//           SetTrustLineFlagsResult setTrustLineFlagsResult;\n//       case LIQUIDITY_POOL_DEPOSIT:\n//           LiquidityPoolDepositResult liquidityPoolDepositResult;\n//       case LIQUIDITY_POOL_WITHDRAW:\n//           LiquidityPoolWithdrawResult liquidityPoolWithdrawResult;\n//       case INVOKE_HOST_FUNCTION:\n//           InvokeHostFunctionResult invokeHostFunctionResult;\n//       case EXTEND_FOOTPRINT_TTL:\n//           ExtendFootprintTTLResult extendFootprintTTLResult;\n//       case RESTORE_FOOTPRINT:\n//           RestoreFootprintResult restoreFootprintResult;\n//       }\n//       tr;\n//   case opBAD_AUTH:\n//   case opNO_ACCOUNT:\n//   case opNOT_SUPPORTED:\n//   case opTOO_MANY_SUBENTRIES:\n//   case opEXCEEDED_WORK_LIMIT:\n//   case opTOO_MANY_SPONSORING:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"OperationResult\", {\n  switchOn: xdr.lookup(\"OperationResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"opInner\", \"tr\"],\n    [\"opBadAuth\", xdr.void()],\n    [\"opNoAccount\", xdr.void()],\n    [\"opNotSupported\", xdr.void()],\n    [\"opTooManySubentries\", xdr.void()],\n    [\"opExceededWorkLimit\", xdr.void()],\n    [\"opTooManySponsoring\", xdr.void()],\n  ],\n  arms: {\n    tr: xdr.lookup(\"OperationResultTr\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum TransactionResultCode\n//   {\n//       txFEE_BUMP_INNER_SUCCESS = 1, // fee bump inner transaction succeeded\n//       txSUCCESS = 0,                // all operations succeeded\n//   \n//       txFAILED = -1, // one of the operations failed (none were applied)\n//   \n//       txTOO_EARLY = -2,         // ledger closeTime before minTime\n//       txTOO_LATE = -3,          // ledger closeTime after maxTime\n//       txMISSING_OPERATION = -4, // no operation was specified\n//       txBAD_SEQ = -5,           // sequence number does not match source account\n//   \n//       txBAD_AUTH = -6,             // too few valid signatures / wrong network\n//       txINSUFFICIENT_BALANCE = -7, // fee would bring account below reserve\n//       txNO_ACCOUNT = -8,           // source account not found\n//       txINSUFFICIENT_FEE = -9,     // fee is too small\n//       txBAD_AUTH_EXTRA = -10,      // unused signatures attached to transaction\n//       txINTERNAL_ERROR = -11,      // an unknown error occurred\n//   \n//       txNOT_SUPPORTED = -12,          // transaction type not supported\n//       txFEE_BUMP_INNER_FAILED = -13,  // fee bump inner transaction failed\n//       txBAD_SPONSORSHIP = -14,        // sponsorship not confirmed\n//       txBAD_MIN_SEQ_AGE_OR_GAP = -15, // minSeqAge or minSeqLedgerGap conditions not met\n//       txMALFORMED = -16,              // precondition is invalid\n//       txSOROBAN_INVALID = -17         // soroban-specific preconditions were not met\n//   };\n//\n// ===========================================================================\nxdr.enum(\"TransactionResultCode\", {\n  txFeeBumpInnerSuccess: 1,\n  txSuccess: 0,\n  txFailed: -1,\n  txTooEarly: -2,\n  txTooLate: -3,\n  txMissingOperation: -4,\n  txBadSeq: -5,\n  txBadAuth: -6,\n  txInsufficientBalance: -7,\n  txNoAccount: -8,\n  txInsufficientFee: -9,\n  txBadAuthExtra: -10,\n  txInternalError: -11,\n  txNotSupported: -12,\n  txFeeBumpInnerFailed: -13,\n  txBadSponsorship: -14,\n  txBadMinSeqAgeOrGap: -15,\n  txMalformed: -16,\n  txSorobanInvalid: -17,\n});\n\n// === xdr source ============================================================\n//\n//   union switch (TransactionResultCode code)\n//       {\n//       // txFEE_BUMP_INNER_SUCCESS is not included\n//       case txSUCCESS:\n//       case txFAILED:\n//           OperationResult results<>;\n//       case txTOO_EARLY:\n//       case txTOO_LATE:\n//       case txMISSING_OPERATION:\n//       case txBAD_SEQ:\n//       case txBAD_AUTH:\n//       case txINSUFFICIENT_BALANCE:\n//       case txNO_ACCOUNT:\n//       case txINSUFFICIENT_FEE:\n//       case txBAD_AUTH_EXTRA:\n//       case txINTERNAL_ERROR:\n//       case txNOT_SUPPORTED:\n//       // txFEE_BUMP_INNER_FAILED is not included\n//       case txBAD_SPONSORSHIP:\n//       case txBAD_MIN_SEQ_AGE_OR_GAP:\n//       case txMALFORMED:\n//       case txSOROBAN_INVALID:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"InnerTransactionResultResult\", {\n  switchOn: xdr.lookup(\"TransactionResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"txSuccess\", \"results\"],\n    [\"txFailed\", \"results\"],\n    [\"txTooEarly\", xdr.void()],\n    [\"txTooLate\", xdr.void()],\n    [\"txMissingOperation\", xdr.void()],\n    [\"txBadSeq\", xdr.void()],\n    [\"txBadAuth\", xdr.void()],\n    [\"txInsufficientBalance\", xdr.void()],\n    [\"txNoAccount\", xdr.void()],\n    [\"txInsufficientFee\", xdr.void()],\n    [\"txBadAuthExtra\", xdr.void()],\n    [\"txInternalError\", xdr.void()],\n    [\"txNotSupported\", xdr.void()],\n    [\"txBadSponsorship\", xdr.void()],\n    [\"txBadMinSeqAgeOrGap\", xdr.void()],\n    [\"txMalformed\", xdr.void()],\n    [\"txSorobanInvalid\", xdr.void()],\n  ],\n  arms: {\n    results: xdr.varArray(xdr.lookup(\"OperationResult\"), 2147483647),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"InnerTransactionResultExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct InnerTransactionResult\n//   {\n//       // Always 0. Here for binary compatibility.\n//       int64 feeCharged;\n//   \n//       union switch (TransactionResultCode code)\n//       {\n//       // txFEE_BUMP_INNER_SUCCESS is not included\n//       case txSUCCESS:\n//       case txFAILED:\n//           OperationResult results<>;\n//       case txTOO_EARLY:\n//       case txTOO_LATE:\n//       case txMISSING_OPERATION:\n//       case txBAD_SEQ:\n//       case txBAD_AUTH:\n//       case txINSUFFICIENT_BALANCE:\n//       case txNO_ACCOUNT:\n//       case txINSUFFICIENT_FEE:\n//       case txBAD_AUTH_EXTRA:\n//       case txINTERNAL_ERROR:\n//       case txNOT_SUPPORTED:\n//       // txFEE_BUMP_INNER_FAILED is not included\n//       case txBAD_SPONSORSHIP:\n//       case txBAD_MIN_SEQ_AGE_OR_GAP:\n//       case txMALFORMED:\n//       case txSOROBAN_INVALID:\n//           void;\n//       }\n//       result;\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"InnerTransactionResult\", [\n  [\"feeCharged\", xdr.lookup(\"Int64\")],\n  [\"result\", xdr.lookup(\"InnerTransactionResultResult\")],\n  [\"ext\", xdr.lookup(\"InnerTransactionResultExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct InnerTransactionResultPair\n//   {\n//       Hash transactionHash;          // hash of the inner transaction\n//       InnerTransactionResult result; // result for the inner transaction\n//   };\n//\n// ===========================================================================\nxdr.struct(\"InnerTransactionResultPair\", [\n  [\"transactionHash\", xdr.lookup(\"Hash\")],\n  [\"result\", xdr.lookup(\"InnerTransactionResult\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (TransactionResultCode code)\n//       {\n//       case txFEE_BUMP_INNER_SUCCESS:\n//       case txFEE_BUMP_INNER_FAILED:\n//           InnerTransactionResultPair innerResultPair;\n//       case txSUCCESS:\n//       case txFAILED:\n//           OperationResult results<>;\n//       case txTOO_EARLY:\n//       case txTOO_LATE:\n//       case txMISSING_OPERATION:\n//       case txBAD_SEQ:\n//       case txBAD_AUTH:\n//       case txINSUFFICIENT_BALANCE:\n//       case txNO_ACCOUNT:\n//       case txINSUFFICIENT_FEE:\n//       case txBAD_AUTH_EXTRA:\n//       case txINTERNAL_ERROR:\n//       case txNOT_SUPPORTED:\n//       // case txFEE_BUMP_INNER_FAILED: handled above\n//       case txBAD_SPONSORSHIP:\n//       case txBAD_MIN_SEQ_AGE_OR_GAP:\n//       case txMALFORMED:\n//       case txSOROBAN_INVALID:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"TransactionResultResult\", {\n  switchOn: xdr.lookup(\"TransactionResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"txFeeBumpInnerSuccess\", \"innerResultPair\"],\n    [\"txFeeBumpInnerFailed\", \"innerResultPair\"],\n    [\"txSuccess\", \"results\"],\n    [\"txFailed\", \"results\"],\n    [\"txTooEarly\", xdr.void()],\n    [\"txTooLate\", xdr.void()],\n    [\"txMissingOperation\", xdr.void()],\n    [\"txBadSeq\", xdr.void()],\n    [\"txBadAuth\", xdr.void()],\n    [\"txInsufficientBalance\", xdr.void()],\n    [\"txNoAccount\", xdr.void()],\n    [\"txInsufficientFee\", xdr.void()],\n    [\"txBadAuthExtra\", xdr.void()],\n    [\"txInternalError\", xdr.void()],\n    [\"txNotSupported\", xdr.void()],\n    [\"txBadSponsorship\", xdr.void()],\n    [\"txBadMinSeqAgeOrGap\", xdr.void()],\n    [\"txMalformed\", xdr.void()],\n    [\"txSorobanInvalid\", xdr.void()],\n  ],\n  arms: {\n    innerResultPair: xdr.lookup(\"InnerTransactionResultPair\"),\n    results: xdr.varArray(xdr.lookup(\"OperationResult\"), 2147483647),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"TransactionResultExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct TransactionResult\n//   {\n//       int64 feeCharged; // actual fee charged for the transaction\n//   \n//       union switch (TransactionResultCode code)\n//       {\n//       case txFEE_BUMP_INNER_SUCCESS:\n//       case txFEE_BUMP_INNER_FAILED:\n//           InnerTransactionResultPair innerResultPair;\n//       case txSUCCESS:\n//       case txFAILED:\n//           OperationResult results<>;\n//       case txTOO_EARLY:\n//       case txTOO_LATE:\n//       case txMISSING_OPERATION:\n//       case txBAD_SEQ:\n//       case txBAD_AUTH:\n//       case txINSUFFICIENT_BALANCE:\n//       case txNO_ACCOUNT:\n//       case txINSUFFICIENT_FEE:\n//       case txBAD_AUTH_EXTRA:\n//       case txINTERNAL_ERROR:\n//       case txNOT_SUPPORTED:\n//       // case txFEE_BUMP_INNER_FAILED: handled above\n//       case txBAD_SPONSORSHIP:\n//       case txBAD_MIN_SEQ_AGE_OR_GAP:\n//       case txMALFORMED:\n//       case txSOROBAN_INVALID:\n//           void;\n//       }\n//       result;\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionResult\", [\n  [\"feeCharged\", xdr.lookup(\"Int64\")],\n  [\"result\", xdr.lookup(\"TransactionResultResult\")],\n  [\"ext\", xdr.lookup(\"TransactionResultExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   typedef opaque Hash[32];\n//\n// ===========================================================================\nxdr.typedef(\"Hash\", xdr.opaque(32));\n\n// === xdr source ============================================================\n//\n//   typedef opaque uint256[32];\n//\n// ===========================================================================\nxdr.typedef(\"Uint256\", xdr.opaque(32));\n\n// === xdr source ============================================================\n//\n//   typedef unsigned int uint32;\n//\n// ===========================================================================\nxdr.typedef(\"Uint32\", xdr.uint());\n\n// === xdr source ============================================================\n//\n//   typedef int int32;\n//\n// ===========================================================================\nxdr.typedef(\"Int32\", xdr.int());\n\n// === xdr source ============================================================\n//\n//   typedef unsigned hyper uint64;\n//\n// ===========================================================================\nxdr.typedef(\"Uint64\", xdr.uhyper());\n\n// === xdr source ============================================================\n//\n//   typedef hyper int64;\n//\n// ===========================================================================\nxdr.typedef(\"Int64\", xdr.hyper());\n\n// === xdr source ============================================================\n//\n//   typedef uint64 TimePoint;\n//\n// ===========================================================================\nxdr.typedef(\"TimePoint\", xdr.lookup(\"Uint64\"));\n\n// === xdr source ============================================================\n//\n//   typedef uint64 Duration;\n//\n// ===========================================================================\nxdr.typedef(\"Duration\", xdr.lookup(\"Uint64\"));\n\n// === xdr source ============================================================\n//\n//   union ExtensionPoint switch (int v)\n//   {\n//   case 0:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ExtensionPoint\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum CryptoKeyType\n//   {\n//       KEY_TYPE_DILITHIUM2 = 0,\n//       KEY_TYPE_PRE_AUTH_TX = 1,\n//       KEY_TYPE_HASH_X = 2,\n//       KEY_TYPE_DILITHIUM2_SIGNED_PAYLOAD = 3,\n//       // MUXED enum values for supported type are derived from the enum values\n//       // above by ORing them with 0x100\n//       KEY_TYPE_MUXED_DILITHIUM2 = 0x100\n//   };\n//\n// ===========================================================================\nxdr.enum(\"CryptoKeyType\", {\n  keyTypeDilithium2: 0,\n  keyTypePreAuthTx: 1,\n  keyTypeHashX: 2,\n  keyTypeDilithium2SignedPayload: 3,\n  keyTypeMuxedDilithium2: 256,\n});\n\n// === xdr source ============================================================\n//\n//   enum PublicKeyType\n//   {\n//       PUBLIC_KEY_TYPE_DILITHIUM2 = KEY_TYPE_DILITHIUM2\n//   };\n//\n// ===========================================================================\nxdr.enum(\"PublicKeyType\", {\n  publicKeyTypeDilithium2: 0,\n});\n\n// === xdr source ============================================================\n//\n//   enum SignerKeyType\n//   {\n//       SIGNER_KEY_TYPE_DILITHIUM2 = KEY_TYPE_DILITHIUM2,\n//       SIGNER_KEY_TYPE_PRE_AUTH_TX = KEY_TYPE_PRE_AUTH_TX,\n//       SIGNER_KEY_TYPE_HASH_X = KEY_TYPE_HASH_X,\n//       SIGNER_KEY_TYPE_DILITHIUM2_SIGNED_PAYLOAD = KEY_TYPE_DILITHIUM2_SIGNED_PAYLOAD\n//   };\n//\n// ===========================================================================\nxdr.enum(\"SignerKeyType\", {\n  signerKeyTypeDilithium2: 0,\n  signerKeyTypePreAuthTx: 1,\n  signerKeyTypeHashX: 2,\n  signerKeyTypeDilithium2SignedPayload: 3,\n});\n\n// === xdr source ============================================================\n//\n//   union PublicKey switch (PublicKeyType type)\n//   {\n//   case PUBLIC_KEY_TYPE_DILITHIUM2:\n//       opaque dilithium2[1312];\n//   };\n//\n// ===========================================================================\nxdr.union(\"PublicKey\", {\n  switchOn: xdr.lookup(\"PublicKeyType\"),\n  switchName: \"type\",\n  switches: [\n    [\"publicKeyTypeDilithium2\", \"dilithium2\"],\n  ],\n  arms: {\n    dilithium2: xdr.opaque(1312),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           /* Public key that must sign the payload. */\n//           opaque dilithium2[1312];\n//           /* Payload to be raw signed by dilithium2. */\n//           opaque payload<64>;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"SignerKeyDilithium2SignedPayload\", [\n  [\"dilithium2\", xdr.opaque(1312)],\n  [\"payload\", xdr.varOpaque(64)],\n]);\n\n// === xdr source ============================================================\n//\n//   union SignerKey switch (SignerKeyType type)\n//   {\n//   case SIGNER_KEY_TYPE_DILITHIUM2:\n//       opaque dilithium2[1312];\n//   case SIGNER_KEY_TYPE_PRE_AUTH_TX:\n//       /* SHA-256 Hash of TransactionSignaturePayload structure */\n//       uint256 preAuthTx;\n//   case SIGNER_KEY_TYPE_HASH_X:\n//       /* Hash of random 256 bit preimage X */\n//       uint256 hashX;\n//   case SIGNER_KEY_TYPE_DILITHIUM2_SIGNED_PAYLOAD:\n//       struct\n//       {\n//           /* Public key that must sign the payload. */\n//           opaque dilithium2[1312];\n//           /* Payload to be raw signed by dilithium2. */\n//           opaque payload<64>;\n//       } dilithium2SignedPayload;\n//   };\n//\n// ===========================================================================\nxdr.union(\"SignerKey\", {\n  switchOn: xdr.lookup(\"SignerKeyType\"),\n  switchName: \"type\",\n  switches: [\n    [\"signerKeyTypeDilithium2\", \"dilithium2\"],\n    [\"signerKeyTypePreAuthTx\", \"preAuthTx\"],\n    [\"signerKeyTypeHashX\", \"hashX\"],\n    [\"signerKeyTypeDilithium2SignedPayload\", \"dilithium2SignedPayload\"],\n  ],\n  arms: {\n    dilithium2: xdr.opaque(1312),\n    preAuthTx: xdr.lookup(\"Uint256\"),\n    hashX: xdr.lookup(\"Uint256\"),\n    dilithium2SignedPayload: xdr.lookup(\"SignerKeyDilithium2SignedPayload\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   typedef opaque Signature<64>;\n//\n// ===========================================================================\nxdr.typedef(\"Signature\", xdr.varOpaque(64));\n\n// === xdr source ============================================================\n//\n//   typedef opaque SignatureHint[4];\n//\n// ===========================================================================\nxdr.typedef(\"SignatureHint\", xdr.opaque(4));\n\n// === xdr source ============================================================\n//\n//   typedef PublicKey NodeID;\n//\n// ===========================================================================\nxdr.typedef(\"NodeId\", xdr.lookup(\"PublicKey\"));\n\n// === xdr source ============================================================\n//\n//   typedef PublicKey AccountID;\n//\n// ===========================================================================\nxdr.typedef(\"AccountId\", xdr.lookup(\"PublicKey\"));\n\n// === xdr source ============================================================\n//\n//   struct Dilithium2Secret\n//   {\n//       opaque key[32];\n//   };\n//\n// ===========================================================================\nxdr.struct(\"Dilithium2Secret\", [\n  [\"key\", xdr.opaque(32)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct Dilithium2Public\n//   {\n//       opaque key[1312];\n//   };\n//\n// ===========================================================================\nxdr.struct(\"Dilithium2Public\", [\n  [\"key\", xdr.opaque(1312)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct HmacSha256Key\n//   {\n//       opaque key[32];\n//   };\n//\n// ===========================================================================\nxdr.struct(\"HmacSha256Key\", [\n  [\"key\", xdr.opaque(32)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct HmacSha256Mac\n//   {\n//       opaque mac[32];\n//   };\n//\n// ===========================================================================\nxdr.struct(\"HmacSha256Mac\", [\n  [\"mac\", xdr.opaque(32)],\n]);\n\n// === xdr source ============================================================\n//\n//   enum SCValType\n//   {\n//       SCV_BOOL = 0,\n//       SCV_VOID = 1,\n//       SCV_ERROR = 2,\n//   \n//       // 32 bits is the smallest type in WASM or XDR; no need for u8/u16.\n//       SCV_U32 = 3,\n//       SCV_I32 = 4,\n//   \n//       // 64 bits is naturally supported by both WASM and XDR also.\n//       SCV_U64 = 5,\n//       SCV_I64 = 6,\n//   \n//       // Time-related u64 subtypes with their own functions and formatting.\n//       SCV_TIMEPOINT = 7,\n//       SCV_DURATION = 8,\n//   \n//       // 128 bits is naturally supported by Rust and we use it for Soroban\n//       // fixed-point arithmetic prices / balances / similar \"quantities\". These\n//       // are represented in XDR as a pair of 2 u64s.\n//       SCV_U128 = 9,\n//       SCV_I128 = 10,\n//   \n//       // 256 bits is the size of sha256 output and the EVM machine\n//       // word, so for interop use we include this even though it requires a small\n//       // amount of Rust guest and/or host library code.\n//       SCV_U256 = 11,\n//       SCV_I256 = 12,\n//   \n//       // Bytes come in 3 flavors, 2 of which have meaningfully different\n//       // formatting and validity-checking / domain-restriction.\n//       SCV_BYTES = 13,\n//       SCV_STRING = 14,\n//       SCV_SYMBOL = 15,\n//   \n//       // Vecs and maps are just polymorphic containers of other ScVals.\n//       SCV_VEC = 16,\n//       SCV_MAP = 17,\n//   \n//       // Address is the universal identifier for contracts and classic\n//       // accounts.\n//       SCV_ADDRESS = 18,\n//   \n//       // The following are the internal SCVal variants that are not\n//       // exposed to the contracts. \n//       SCV_CONTRACT_INSTANCE = 19,\n//   \n//       // SCV_LEDGER_KEY_CONTRACT_INSTANCE and SCV_LEDGER_KEY_NONCE are unique\n//       // symbolic SCVals used as the key for ledger entries for a contract's\n//       // instance and an address' nonce, respectively.\n//       SCV_LEDGER_KEY_CONTRACT_INSTANCE = 20,\n//       SCV_LEDGER_KEY_NONCE = 21\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ScValType\", {\n  scvBool: 0,\n  scvVoid: 1,\n  scvError: 2,\n  scvU32: 3,\n  scvI32: 4,\n  scvU64: 5,\n  scvI64: 6,\n  scvTimepoint: 7,\n  scvDuration: 8,\n  scvU128: 9,\n  scvI128: 10,\n  scvU256: 11,\n  scvI256: 12,\n  scvBytes: 13,\n  scvString: 14,\n  scvSymbol: 15,\n  scvVec: 16,\n  scvMap: 17,\n  scvAddress: 18,\n  scvContractInstance: 19,\n  scvLedgerKeyContractInstance: 20,\n  scvLedgerKeyNonce: 21,\n});\n\n// === xdr source ============================================================\n//\n//   enum SCErrorType\n//   {\n//       SCE_CONTRACT = 0,          // Contract-specific, user-defined codes.\n//       SCE_WASM_VM = 1,           // Errors while interpreting WASM bytecode.\n//       SCE_CONTEXT = 2,           // Errors in the contract's host context.\n//       SCE_STORAGE = 3,           // Errors accessing host storage.\n//       SCE_OBJECT = 4,            // Errors working with host objects.\n//       SCE_CRYPTO = 5,            // Errors in cryptographic operations.\n//       SCE_EVENTS = 6,            // Errors while emitting events.\n//       SCE_BUDGET = 7,            // Errors relating to budget limits.\n//       SCE_VALUE = 8,             // Errors working with host values or SCVals.\n//       SCE_AUTH = 9               // Errors from the authentication subsystem.\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ScErrorType\", {\n  sceContract: 0,\n  sceWasmVm: 1,\n  sceContext: 2,\n  sceStorage: 3,\n  sceObject: 4,\n  sceCrypto: 5,\n  sceEvents: 6,\n  sceBudget: 7,\n  sceValue: 8,\n  sceAuth: 9,\n});\n\n// === xdr source ============================================================\n//\n//   enum SCErrorCode\n//   {\n//       SCEC_ARITH_DOMAIN = 0,      // Some arithmetic was undefined (overflow, divide-by-zero).\n//       SCEC_INDEX_BOUNDS = 1,      // Something was indexed beyond its bounds.\n//       SCEC_INVALID_INPUT = 2,     // User provided some otherwise-bad data.\n//       SCEC_MISSING_VALUE = 3,     // Some value was required but not provided.\n//       SCEC_EXISTING_VALUE = 4,    // Some value was provided where not allowed.\n//       SCEC_EXCEEDED_LIMIT = 5,    // Some arbitrary limit -- gas or otherwise -- was hit.\n//       SCEC_INVALID_ACTION = 6,    // Data was valid but action requested was not.\n//       SCEC_INTERNAL_ERROR = 7,    // The host detected an error in its own logic.\n//       SCEC_UNEXPECTED_TYPE = 8,   // Some type wasn't as expected.\n//       SCEC_UNEXPECTED_SIZE = 9    // Something's size wasn't as expected.\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ScErrorCode\", {\n  scecArithDomain: 0,\n  scecIndexBounds: 1,\n  scecInvalidInput: 2,\n  scecMissingValue: 3,\n  scecExistingValue: 4,\n  scecExceededLimit: 5,\n  scecInvalidAction: 6,\n  scecInternalError: 7,\n  scecUnexpectedType: 8,\n  scecUnexpectedSize: 9,\n});\n\n// === xdr source ============================================================\n//\n//   union SCError switch (SCErrorType type)\n//   {\n//   case SCE_CONTRACT:\n//       uint32 contractCode;\n//   case SCE_WASM_VM:\n//   case SCE_CONTEXT:\n//   case SCE_STORAGE:\n//   case SCE_OBJECT:\n//   case SCE_CRYPTO:\n//   case SCE_EVENTS:\n//   case SCE_BUDGET:\n//   case SCE_VALUE:\n//   case SCE_AUTH:\n//       SCErrorCode code;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ScError\", {\n  switchOn: xdr.lookup(\"ScErrorType\"),\n  switchName: \"type\",\n  switches: [\n    [\"sceContract\", \"contractCode\"],\n    [\"sceWasmVm\", \"code\"],\n    [\"sceContext\", \"code\"],\n    [\"sceStorage\", \"code\"],\n    [\"sceObject\", \"code\"],\n    [\"sceCrypto\", \"code\"],\n    [\"sceEvents\", \"code\"],\n    [\"sceBudget\", \"code\"],\n    [\"sceValue\", \"code\"],\n    [\"sceAuth\", \"code\"],\n  ],\n  arms: {\n    contractCode: xdr.lookup(\"Uint32\"),\n    code: xdr.lookup(\"ScErrorCode\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct UInt128Parts {\n//       uint64 hi;\n//       uint64 lo;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"UInt128Parts\", [\n  [\"hi\", xdr.lookup(\"Uint64\")],\n  [\"lo\", xdr.lookup(\"Uint64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct Int128Parts {\n//       int64 hi;\n//       uint64 lo;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"Int128Parts\", [\n  [\"hi\", xdr.lookup(\"Int64\")],\n  [\"lo\", xdr.lookup(\"Uint64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct UInt256Parts {\n//       uint64 hi_hi;\n//       uint64 hi_lo;\n//       uint64 lo_hi;\n//       uint64 lo_lo;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"UInt256Parts\", [\n  [\"hiHi\", xdr.lookup(\"Uint64\")],\n  [\"hiLo\", xdr.lookup(\"Uint64\")],\n  [\"loHi\", xdr.lookup(\"Uint64\")],\n  [\"loLo\", xdr.lookup(\"Uint64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct Int256Parts {\n//       int64 hi_hi;\n//       uint64 hi_lo;\n//       uint64 lo_hi;\n//       uint64 lo_lo;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"Int256Parts\", [\n  [\"hiHi\", xdr.lookup(\"Int64\")],\n  [\"hiLo\", xdr.lookup(\"Uint64\")],\n  [\"loHi\", xdr.lookup(\"Uint64\")],\n  [\"loLo\", xdr.lookup(\"Uint64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum ContractExecutableType\n//   {\n//       CONTRACT_EXECUTABLE_WASM = 0,\n//       CONTRACT_EXECUTABLE_STELLAR_ASSET = 1\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ContractExecutableType\", {\n  contractExecutableWasm: 0,\n  contractExecutableStellarAsset: 1,\n});\n\n// === xdr source ============================================================\n//\n//   union ContractExecutable switch (ContractExecutableType type)\n//   {\n//   case CONTRACT_EXECUTABLE_WASM:\n//       Hash wasm_hash;\n//   case CONTRACT_EXECUTABLE_STELLAR_ASSET:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ContractExecutable\", {\n  switchOn: xdr.lookup(\"ContractExecutableType\"),\n  switchName: \"type\",\n  switches: [\n    [\"contractExecutableWasm\", \"wasmHash\"],\n    [\"contractExecutableStellarAsset\", xdr.void()],\n  ],\n  arms: {\n    wasmHash: xdr.lookup(\"Hash\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum SCAddressType\n//   {\n//       SC_ADDRESS_TYPE_ACCOUNT = 0,\n//       SC_ADDRESS_TYPE_CONTRACT = 1\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ScAddressType\", {\n  scAddressTypeAccount: 0,\n  scAddressTypeContract: 1,\n});\n\n// === xdr source ============================================================\n//\n//   union SCAddress switch (SCAddressType type)\n//   {\n//   case SC_ADDRESS_TYPE_ACCOUNT:\n//       AccountID accountId;\n//   case SC_ADDRESS_TYPE_CONTRACT:\n//       Hash contractId;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ScAddress\", {\n  switchOn: xdr.lookup(\"ScAddressType\"),\n  switchName: \"type\",\n  switches: [\n    [\"scAddressTypeAccount\", \"accountId\"],\n    [\"scAddressTypeContract\", \"contractId\"],\n  ],\n  arms: {\n    accountId: xdr.lookup(\"AccountId\"),\n    contractId: xdr.lookup(\"Hash\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   const SCSYMBOL_LIMIT = 32;\n//\n// ===========================================================================\nxdr.const(\"SCSYMBOL_LIMIT\", 32);\n\n// === xdr source ============================================================\n//\n//   typedef SCVal SCVec<>;\n//\n// ===========================================================================\nxdr.typedef(\"ScVec\", xdr.varArray(xdr.lookup(\"ScVal\"), 2147483647));\n\n// === xdr source ============================================================\n//\n//   typedef SCMapEntry SCMap<>;\n//\n// ===========================================================================\nxdr.typedef(\"ScMap\", xdr.varArray(xdr.lookup(\"ScMapEntry\"), 2147483647));\n\n// === xdr source ============================================================\n//\n//   typedef opaque SCBytes<>;\n//\n// ===========================================================================\nxdr.typedef(\"ScBytes\", xdr.varOpaque());\n\n// === xdr source ============================================================\n//\n//   typedef string SCString<>;\n//\n// ===========================================================================\nxdr.typedef(\"ScString\", xdr.string());\n\n// === xdr source ============================================================\n//\n//   typedef string SCSymbol<SCSYMBOL_LIMIT>;\n//\n// ===========================================================================\nxdr.typedef(\"ScSymbol\", xdr.string(SCSYMBOL_LIMIT));\n\n// === xdr source ============================================================\n//\n//   struct SCNonceKey {\n//       int64 nonce;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScNonceKey\", [\n  [\"nonce\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SCContractInstance {\n//       ContractExecutable executable;\n//       SCMap* storage;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScContractInstance\", [\n  [\"executable\", xdr.lookup(\"ContractExecutable\")],\n  [\"storage\", xdr.option(xdr.lookup(\"ScMap\"))],\n]);\n\n// === xdr source ============================================================\n//\n//   union SCVal switch (SCValType type)\n//   {\n//   \n//   case SCV_BOOL:\n//       bool b;\n//   case SCV_VOID:\n//       void;\n//   case SCV_ERROR:\n//       SCError error;\n//   \n//   case SCV_U32:\n//       uint32 u32;\n//   case SCV_I32:\n//       int32 i32;\n//   \n//   case SCV_U64:\n//       uint64 u64;\n//   case SCV_I64:\n//       int64 i64;\n//   case SCV_TIMEPOINT:\n//       TimePoint timepoint;\n//   case SCV_DURATION:\n//       Duration duration;\n//   \n//   case SCV_U128:\n//       UInt128Parts u128;\n//   case SCV_I128:\n//       Int128Parts i128;\n//   \n//   case SCV_U256:\n//       UInt256Parts u256;\n//   case SCV_I256:\n//       Int256Parts i256;\n//   \n//   case SCV_BYTES:\n//       SCBytes bytes;\n//   case SCV_STRING:\n//       SCString str;\n//   case SCV_SYMBOL:\n//       SCSymbol sym;\n//   \n//   // Vec and Map are recursive so need to live\n//   // behind an option, due to xdrpp limitations.\n//   case SCV_VEC:\n//       SCVec *vec;\n//   case SCV_MAP:\n//       SCMap *map;\n//   \n//   case SCV_ADDRESS:\n//       SCAddress address;\n//   \n//   // Special SCVals reserved for system-constructed contract-data\n//   // ledger keys, not generally usable elsewhere.\n//   case SCV_LEDGER_KEY_CONTRACT_INSTANCE:\n//       void;\n//   case SCV_LEDGER_KEY_NONCE:\n//       SCNonceKey nonce_key;\n//   \n//   case SCV_CONTRACT_INSTANCE:\n//       SCContractInstance instance;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ScVal\", {\n  switchOn: xdr.lookup(\"ScValType\"),\n  switchName: \"type\",\n  switches: [\n    [\"scvBool\", \"b\"],\n    [\"scvVoid\", xdr.void()],\n    [\"scvError\", \"error\"],\n    [\"scvU32\", \"u32\"],\n    [\"scvI32\", \"i32\"],\n    [\"scvU64\", \"u64\"],\n    [\"scvI64\", \"i64\"],\n    [\"scvTimepoint\", \"timepoint\"],\n    [\"scvDuration\", \"duration\"],\n    [\"scvU128\", \"u128\"],\n    [\"scvI128\", \"i128\"],\n    [\"scvU256\", \"u256\"],\n    [\"scvI256\", \"i256\"],\n    [\"scvBytes\", \"bytes\"],\n    [\"scvString\", \"str\"],\n    [\"scvSymbol\", \"sym\"],\n    [\"scvVec\", \"vec\"],\n    [\"scvMap\", \"map\"],\n    [\"scvAddress\", \"address\"],\n    [\"scvLedgerKeyContractInstance\", xdr.void()],\n    [\"scvLedgerKeyNonce\", \"nonceKey\"],\n    [\"scvContractInstance\", \"instance\"],\n  ],\n  arms: {\n    b: xdr.bool(),\n    error: xdr.lookup(\"ScError\"),\n    u32: xdr.lookup(\"Uint32\"),\n    i32: xdr.lookup(\"Int32\"),\n    u64: xdr.lookup(\"Uint64\"),\n    i64: xdr.lookup(\"Int64\"),\n    timepoint: xdr.lookup(\"TimePoint\"),\n    duration: xdr.lookup(\"Duration\"),\n    u128: xdr.lookup(\"UInt128Parts\"),\n    i128: xdr.lookup(\"Int128Parts\"),\n    u256: xdr.lookup(\"UInt256Parts\"),\n    i256: xdr.lookup(\"Int256Parts\"),\n    bytes: xdr.lookup(\"ScBytes\"),\n    str: xdr.lookup(\"ScString\"),\n    sym: xdr.lookup(\"ScSymbol\"),\n    vec: xdr.option(xdr.lookup(\"ScVec\")),\n    map: xdr.option(xdr.lookup(\"ScMap\")),\n    address: xdr.lookup(\"ScAddress\"),\n    nonceKey: xdr.lookup(\"ScNonceKey\"),\n    instance: xdr.lookup(\"ScContractInstance\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct SCMapEntry\n//   {\n//       SCVal key;\n//       SCVal val;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScMapEntry\", [\n  [\"key\", xdr.lookup(\"ScVal\")],\n  [\"val\", xdr.lookup(\"ScVal\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum SCEnvMetaKind\n//   {\n//       SC_ENV_META_KIND_INTERFACE_VERSION = 0\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ScEnvMetaKind\", {\n  scEnvMetaKindInterfaceVersion: 0,\n});\n\n// === xdr source ============================================================\n//\n//   union SCEnvMetaEntry switch (SCEnvMetaKind kind)\n//   {\n//   case SC_ENV_META_KIND_INTERFACE_VERSION:\n//       uint64 interfaceVersion;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ScEnvMetaEntry\", {\n  switchOn: xdr.lookup(\"ScEnvMetaKind\"),\n  switchName: \"kind\",\n  switches: [\n    [\"scEnvMetaKindInterfaceVersion\", \"interfaceVersion\"],\n  ],\n  arms: {\n    interfaceVersion: xdr.lookup(\"Uint64\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct SCMetaV0\n//   {\n//       string key<>;\n//       string val<>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScMetaV0\", [\n  [\"key\", xdr.string()],\n  [\"val\", xdr.string()],\n]);\n\n// === xdr source ============================================================\n//\n//   enum SCMetaKind\n//   {\n//       SC_META_V0 = 0\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ScMetaKind\", {\n  scMetaV0: 0,\n});\n\n// === xdr source ============================================================\n//\n//   union SCMetaEntry switch (SCMetaKind kind)\n//   {\n//   case SC_META_V0:\n//       SCMetaV0 v0;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ScMetaEntry\", {\n  switchOn: xdr.lookup(\"ScMetaKind\"),\n  switchName: \"kind\",\n  switches: [\n    [\"scMetaV0\", \"v0\"],\n  ],\n  arms: {\n    v0: xdr.lookup(\"ScMetaV0\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   const SC_SPEC_DOC_LIMIT = 1024;\n//\n// ===========================================================================\nxdr.const(\"SC_SPEC_DOC_LIMIT\", 1024);\n\n// === xdr source ============================================================\n//\n//   enum SCSpecType\n//   {\n//       SC_SPEC_TYPE_VAL = 0,\n//   \n//       // Types with no parameters.\n//       SC_SPEC_TYPE_BOOL = 1,\n//       SC_SPEC_TYPE_VOID = 2,\n//       SC_SPEC_TYPE_ERROR = 3,\n//       SC_SPEC_TYPE_U32 = 4,\n//       SC_SPEC_TYPE_I32 = 5,\n//       SC_SPEC_TYPE_U64 = 6,\n//       SC_SPEC_TYPE_I64 = 7,\n//       SC_SPEC_TYPE_TIMEPOINT = 8,\n//       SC_SPEC_TYPE_DURATION = 9,\n//       SC_SPEC_TYPE_U128 = 10,\n//       SC_SPEC_TYPE_I128 = 11,\n//       SC_SPEC_TYPE_U256 = 12,\n//       SC_SPEC_TYPE_I256 = 13,\n//       SC_SPEC_TYPE_BYTES = 14,\n//       SC_SPEC_TYPE_STRING = 16,\n//       SC_SPEC_TYPE_SYMBOL = 17,\n//       SC_SPEC_TYPE_ADDRESS = 19,\n//   \n//       // Types with parameters.\n//       SC_SPEC_TYPE_OPTION = 1000,\n//       SC_SPEC_TYPE_RESULT = 1001,\n//       SC_SPEC_TYPE_VEC = 1002,\n//       SC_SPEC_TYPE_MAP = 1004,\n//       SC_SPEC_TYPE_TUPLE = 1005,\n//       SC_SPEC_TYPE_BYTES_N = 1006,\n//   \n//       // User defined types.\n//       SC_SPEC_TYPE_UDT = 2000\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ScSpecType\", {\n  scSpecTypeVal: 0,\n  scSpecTypeBool: 1,\n  scSpecTypeVoid: 2,\n  scSpecTypeError: 3,\n  scSpecTypeU32: 4,\n  scSpecTypeI32: 5,\n  scSpecTypeU64: 6,\n  scSpecTypeI64: 7,\n  scSpecTypeTimepoint: 8,\n  scSpecTypeDuration: 9,\n  scSpecTypeU128: 10,\n  scSpecTypeI128: 11,\n  scSpecTypeU256: 12,\n  scSpecTypeI256: 13,\n  scSpecTypeBytes: 14,\n  scSpecTypeString: 16,\n  scSpecTypeSymbol: 17,\n  scSpecTypeAddress: 19,\n  scSpecTypeOption: 1000,\n  scSpecTypeResult: 1001,\n  scSpecTypeVec: 1002,\n  scSpecTypeMap: 1004,\n  scSpecTypeTuple: 1005,\n  scSpecTypeBytesN: 1006,\n  scSpecTypeUdt: 2000,\n});\n\n// === xdr source ============================================================\n//\n//   struct SCSpecTypeOption\n//   {\n//       SCSpecTypeDef valueType;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScSpecTypeOption\", [\n  [\"valueType\", xdr.lookup(\"ScSpecTypeDef\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SCSpecTypeResult\n//   {\n//       SCSpecTypeDef okType;\n//       SCSpecTypeDef errorType;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScSpecTypeResult\", [\n  [\"okType\", xdr.lookup(\"ScSpecTypeDef\")],\n  [\"errorType\", xdr.lookup(\"ScSpecTypeDef\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SCSpecTypeVec\n//   {\n//       SCSpecTypeDef elementType;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScSpecTypeVec\", [\n  [\"elementType\", xdr.lookup(\"ScSpecTypeDef\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SCSpecTypeMap\n//   {\n//       SCSpecTypeDef keyType;\n//       SCSpecTypeDef valueType;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScSpecTypeMap\", [\n  [\"keyType\", xdr.lookup(\"ScSpecTypeDef\")],\n  [\"valueType\", xdr.lookup(\"ScSpecTypeDef\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SCSpecTypeTuple\n//   {\n//       SCSpecTypeDef valueTypes<12>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScSpecTypeTuple\", [\n  [\"valueTypes\", xdr.varArray(xdr.lookup(\"ScSpecTypeDef\"), 12)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SCSpecTypeBytesN\n//   {\n//       uint32 n;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScSpecTypeBytesN\", [\n  [\"n\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SCSpecTypeUDT\n//   {\n//       string name<60>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScSpecTypeUdt\", [\n  [\"name\", xdr.string(60)],\n]);\n\n// === xdr source ============================================================\n//\n//   union SCSpecTypeDef switch (SCSpecType type)\n//   {\n//   case SC_SPEC_TYPE_VAL:\n//   case SC_SPEC_TYPE_BOOL:\n//   case SC_SPEC_TYPE_VOID:\n//   case SC_SPEC_TYPE_ERROR:\n//   case SC_SPEC_TYPE_U32:\n//   case SC_SPEC_TYPE_I32:\n//   case SC_SPEC_TYPE_U64:\n//   case SC_SPEC_TYPE_I64:\n//   case SC_SPEC_TYPE_TIMEPOINT:\n//   case SC_SPEC_TYPE_DURATION:\n//   case SC_SPEC_TYPE_U128:\n//   case SC_SPEC_TYPE_I128:\n//   case SC_SPEC_TYPE_U256:\n//   case SC_SPEC_TYPE_I256:\n//   case SC_SPEC_TYPE_BYTES:\n//   case SC_SPEC_TYPE_STRING:\n//   case SC_SPEC_TYPE_SYMBOL:\n//   case SC_SPEC_TYPE_ADDRESS:\n//       void;\n//   case SC_SPEC_TYPE_OPTION:\n//       SCSpecTypeOption option;\n//   case SC_SPEC_TYPE_RESULT:\n//       SCSpecTypeResult result;\n//   case SC_SPEC_TYPE_VEC:\n//       SCSpecTypeVec vec;\n//   case SC_SPEC_TYPE_MAP:\n//       SCSpecTypeMap map;\n//   case SC_SPEC_TYPE_TUPLE:\n//       SCSpecTypeTuple tuple;\n//   case SC_SPEC_TYPE_BYTES_N:\n//       SCSpecTypeBytesN bytesN;\n//   case SC_SPEC_TYPE_UDT:\n//       SCSpecTypeUDT udt;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ScSpecTypeDef\", {\n  switchOn: xdr.lookup(\"ScSpecType\"),\n  switchName: \"type\",\n  switches: [\n    [\"scSpecTypeVal\", xdr.void()],\n    [\"scSpecTypeBool\", xdr.void()],\n    [\"scSpecTypeVoid\", xdr.void()],\n    [\"scSpecTypeError\", xdr.void()],\n    [\"scSpecTypeU32\", xdr.void()],\n    [\"scSpecTypeI32\", xdr.void()],\n    [\"scSpecTypeU64\", xdr.void()],\n    [\"scSpecTypeI64\", xdr.void()],\n    [\"scSpecTypeTimepoint\", xdr.void()],\n    [\"scSpecTypeDuration\", xdr.void()],\n    [\"scSpecTypeU128\", xdr.void()],\n    [\"scSpecTypeI128\", xdr.void()],\n    [\"scSpecTypeU256\", xdr.void()],\n    [\"scSpecTypeI256\", xdr.void()],\n    [\"scSpecTypeBytes\", xdr.void()],\n    [\"scSpecTypeString\", xdr.void()],\n    [\"scSpecTypeSymbol\", xdr.void()],\n    [\"scSpecTypeAddress\", xdr.void()],\n    [\"scSpecTypeOption\", \"option\"],\n    [\"scSpecTypeResult\", \"result\"],\n    [\"scSpecTypeVec\", \"vec\"],\n    [\"scSpecTypeMap\", \"map\"],\n    [\"scSpecTypeTuple\", \"tuple\"],\n    [\"scSpecTypeBytesN\", \"bytesN\"],\n    [\"scSpecTypeUdt\", \"udt\"],\n  ],\n  arms: {\n    option: xdr.lookup(\"ScSpecTypeOption\"),\n    result: xdr.lookup(\"ScSpecTypeResult\"),\n    vec: xdr.lookup(\"ScSpecTypeVec\"),\n    map: xdr.lookup(\"ScSpecTypeMap\"),\n    tuple: xdr.lookup(\"ScSpecTypeTuple\"),\n    bytesN: xdr.lookup(\"ScSpecTypeBytesN\"),\n    udt: xdr.lookup(\"ScSpecTypeUdt\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct SCSpecUDTStructFieldV0\n//   {\n//       string doc<SC_SPEC_DOC_LIMIT>;\n//       string name<30>;\n//       SCSpecTypeDef type;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScSpecUdtStructFieldV0\", [\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\n  [\"name\", xdr.string(30)],\n  [\"type\", xdr.lookup(\"ScSpecTypeDef\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SCSpecUDTStructV0\n//   {\n//       string doc<SC_SPEC_DOC_LIMIT>;\n//       string lib<80>;\n//       string name<60>;\n//       SCSpecUDTStructFieldV0 fields<40>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScSpecUdtStructV0\", [\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\n  [\"lib\", xdr.string(80)],\n  [\"name\", xdr.string(60)],\n  [\"fields\", xdr.varArray(xdr.lookup(\"ScSpecUdtStructFieldV0\"), 40)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SCSpecUDTUnionCaseVoidV0\n//   {\n//       string doc<SC_SPEC_DOC_LIMIT>;\n//       string name<60>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScSpecUdtUnionCaseVoidV0\", [\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\n  [\"name\", xdr.string(60)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SCSpecUDTUnionCaseTupleV0\n//   {\n//       string doc<SC_SPEC_DOC_LIMIT>;\n//       string name<60>;\n//       SCSpecTypeDef type<12>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScSpecUdtUnionCaseTupleV0\", [\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\n  [\"name\", xdr.string(60)],\n  [\"type\", xdr.varArray(xdr.lookup(\"ScSpecTypeDef\"), 12)],\n]);\n\n// === xdr source ============================================================\n//\n//   enum SCSpecUDTUnionCaseV0Kind\n//   {\n//       SC_SPEC_UDT_UNION_CASE_VOID_V0 = 0,\n//       SC_SPEC_UDT_UNION_CASE_TUPLE_V0 = 1\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ScSpecUdtUnionCaseV0Kind\", {\n  scSpecUdtUnionCaseVoidV0: 0,\n  scSpecUdtUnionCaseTupleV0: 1,\n});\n\n// === xdr source ============================================================\n//\n//   union SCSpecUDTUnionCaseV0 switch (SCSpecUDTUnionCaseV0Kind kind)\n//   {\n//   case SC_SPEC_UDT_UNION_CASE_VOID_V0:\n//       SCSpecUDTUnionCaseVoidV0 voidCase;\n//   case SC_SPEC_UDT_UNION_CASE_TUPLE_V0:\n//       SCSpecUDTUnionCaseTupleV0 tupleCase;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ScSpecUdtUnionCaseV0\", {\n  switchOn: xdr.lookup(\"ScSpecUdtUnionCaseV0Kind\"),\n  switchName: \"kind\",\n  switches: [\n    [\"scSpecUdtUnionCaseVoidV0\", \"voidCase\"],\n    [\"scSpecUdtUnionCaseTupleV0\", \"tupleCase\"],\n  ],\n  arms: {\n    voidCase: xdr.lookup(\"ScSpecUdtUnionCaseVoidV0\"),\n    tupleCase: xdr.lookup(\"ScSpecUdtUnionCaseTupleV0\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct SCSpecUDTUnionV0\n//   {\n//       string doc<SC_SPEC_DOC_LIMIT>;\n//       string lib<80>;\n//       string name<60>;\n//       SCSpecUDTUnionCaseV0 cases<50>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScSpecUdtUnionV0\", [\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\n  [\"lib\", xdr.string(80)],\n  [\"name\", xdr.string(60)],\n  [\"cases\", xdr.varArray(xdr.lookup(\"ScSpecUdtUnionCaseV0\"), 50)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SCSpecUDTEnumCaseV0\n//   {\n//       string doc<SC_SPEC_DOC_LIMIT>;\n//       string name<60>;\n//       uint32 value;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScSpecUdtEnumCaseV0\", [\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\n  [\"name\", xdr.string(60)],\n  [\"value\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SCSpecUDTEnumV0\n//   {\n//       string doc<SC_SPEC_DOC_LIMIT>;\n//       string lib<80>;\n//       string name<60>;\n//       SCSpecUDTEnumCaseV0 cases<50>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScSpecUdtEnumV0\", [\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\n  [\"lib\", xdr.string(80)],\n  [\"name\", xdr.string(60)],\n  [\"cases\", xdr.varArray(xdr.lookup(\"ScSpecUdtEnumCaseV0\"), 50)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SCSpecUDTErrorEnumCaseV0\n//   {\n//       string doc<SC_SPEC_DOC_LIMIT>;\n//       string name<60>;\n//       uint32 value;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScSpecUdtErrorEnumCaseV0\", [\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\n  [\"name\", xdr.string(60)],\n  [\"value\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SCSpecUDTErrorEnumV0\n//   {\n//       string doc<SC_SPEC_DOC_LIMIT>;\n//       string lib<80>;\n//       string name<60>;\n//       SCSpecUDTErrorEnumCaseV0 cases<50>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScSpecUdtErrorEnumV0\", [\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\n  [\"lib\", xdr.string(80)],\n  [\"name\", xdr.string(60)],\n  [\"cases\", xdr.varArray(xdr.lookup(\"ScSpecUdtErrorEnumCaseV0\"), 50)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SCSpecFunctionInputV0\n//   {\n//       string doc<SC_SPEC_DOC_LIMIT>;\n//       string name<30>;\n//       SCSpecTypeDef type;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScSpecFunctionInputV0\", [\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\n  [\"name\", xdr.string(30)],\n  [\"type\", xdr.lookup(\"ScSpecTypeDef\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SCSpecFunctionV0\n//   {\n//       string doc<SC_SPEC_DOC_LIMIT>;\n//       SCSymbol name;\n//       SCSpecFunctionInputV0 inputs<10>;\n//       SCSpecTypeDef outputs<1>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScSpecFunctionV0\", [\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\n  [\"name\", xdr.lookup(\"ScSymbol\")],\n  [\"inputs\", xdr.varArray(xdr.lookup(\"ScSpecFunctionInputV0\"), 10)],\n  [\"outputs\", xdr.varArray(xdr.lookup(\"ScSpecTypeDef\"), 1)],\n]);\n\n// === xdr source ============================================================\n//\n//   enum SCSpecEntryKind\n//   {\n//       SC_SPEC_ENTRY_FUNCTION_V0 = 0,\n//       SC_SPEC_ENTRY_UDT_STRUCT_V0 = 1,\n//       SC_SPEC_ENTRY_UDT_UNION_V0 = 2,\n//       SC_SPEC_ENTRY_UDT_ENUM_V0 = 3,\n//       SC_SPEC_ENTRY_UDT_ERROR_ENUM_V0 = 4\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ScSpecEntryKind\", {\n  scSpecEntryFunctionV0: 0,\n  scSpecEntryUdtStructV0: 1,\n  scSpecEntryUdtUnionV0: 2,\n  scSpecEntryUdtEnumV0: 3,\n  scSpecEntryUdtErrorEnumV0: 4,\n});\n\n// === xdr source ============================================================\n//\n//   union SCSpecEntry switch (SCSpecEntryKind kind)\n//   {\n//   case SC_SPEC_ENTRY_FUNCTION_V0:\n//       SCSpecFunctionV0 functionV0;\n//   case SC_SPEC_ENTRY_UDT_STRUCT_V0:\n//       SCSpecUDTStructV0 udtStructV0;\n//   case SC_SPEC_ENTRY_UDT_UNION_V0:\n//       SCSpecUDTUnionV0 udtUnionV0;\n//   case SC_SPEC_ENTRY_UDT_ENUM_V0:\n//       SCSpecUDTEnumV0 udtEnumV0;\n//   case SC_SPEC_ENTRY_UDT_ERROR_ENUM_V0:\n//       SCSpecUDTErrorEnumV0 udtErrorEnumV0;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ScSpecEntry\", {\n  switchOn: xdr.lookup(\"ScSpecEntryKind\"),\n  switchName: \"kind\",\n  switches: [\n    [\"scSpecEntryFunctionV0\", \"functionV0\"],\n    [\"scSpecEntryUdtStructV0\", \"udtStructV0\"],\n    [\"scSpecEntryUdtUnionV0\", \"udtUnionV0\"],\n    [\"scSpecEntryUdtEnumV0\", \"udtEnumV0\"],\n    [\"scSpecEntryUdtErrorEnumV0\", \"udtErrorEnumV0\"],\n  ],\n  arms: {\n    functionV0: xdr.lookup(\"ScSpecFunctionV0\"),\n    udtStructV0: xdr.lookup(\"ScSpecUdtStructV0\"),\n    udtUnionV0: xdr.lookup(\"ScSpecUdtUnionV0\"),\n    udtEnumV0: xdr.lookup(\"ScSpecUdtEnumV0\"),\n    udtErrorEnumV0: xdr.lookup(\"ScSpecUdtErrorEnumV0\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct ConfigSettingContractExecutionLanesV0\n//   {\n//       // maximum number of Soroban transactions per ledger\n//       uint32 ledgerMaxTxCount;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ConfigSettingContractExecutionLanesV0\", [\n  [\"ledgerMaxTxCount\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct ConfigSettingContractComputeV0\n//   {\n//       // Maximum instructions per ledger\n//       int64 ledgerMaxInstructions;\n//       // Maximum instructions per transaction\n//       int64 txMaxInstructions;\n//       // Cost of 10000 instructions\n//       int64 feeRatePerInstructionsIncrement;\n//   \n//       // Memory limit per transaction. Unlike instructions, there is no fee\n//       // for memory, just the limit.\n//       uint32 txMemoryLimit;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ConfigSettingContractComputeV0\", [\n  [\"ledgerMaxInstructions\", xdr.lookup(\"Int64\")],\n  [\"txMaxInstructions\", xdr.lookup(\"Int64\")],\n  [\"feeRatePerInstructionsIncrement\", xdr.lookup(\"Int64\")],\n  [\"txMemoryLimit\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct ConfigSettingContractLedgerCostV0\n//   {\n//       // Maximum number of ledger entry read operations per ledger\n//       uint32 ledgerMaxReadLedgerEntries;\n//       // Maximum number of bytes that can be read per ledger\n//       uint32 ledgerMaxReadBytes;\n//       // Maximum number of ledger entry write operations per ledger\n//       uint32 ledgerMaxWriteLedgerEntries;\n//       // Maximum number of bytes that can be written per ledger\n//       uint32 ledgerMaxWriteBytes;\n//   \n//       // Maximum number of ledger entry read operations per transaction\n//       uint32 txMaxReadLedgerEntries;\n//       // Maximum number of bytes that can be read per transaction\n//       uint32 txMaxReadBytes;\n//       // Maximum number of ledger entry write operations per transaction\n//       uint32 txMaxWriteLedgerEntries;\n//       // Maximum number of bytes that can be written per transaction\n//       uint32 txMaxWriteBytes;\n//   \n//       int64 feeReadLedgerEntry;  // Fee per ledger entry read\n//       int64 feeWriteLedgerEntry; // Fee per ledger entry write\n//   \n//       int64 feeRead1KB;  // Fee for reading 1KB\n//   \n//       // The following parameters determine the write fee per 1KB.\n//       // Write fee grows linearly until bucket list reaches this size\n//       int64 bucketListTargetSizeBytes;\n//       // Fee per 1KB write when the bucket list is empty\n//       int64 writeFee1KBBucketListLow;\n//       // Fee per 1KB write when the bucket list has reached `bucketListTargetSizeBytes` \n//       int64 writeFee1KBBucketListHigh;\n//       // Write fee multiplier for any additional data past the first `bucketListTargetSizeBytes`\n//       uint32 bucketListWriteFeeGrowthFactor;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ConfigSettingContractLedgerCostV0\", [\n  [\"ledgerMaxReadLedgerEntries\", xdr.lookup(\"Uint32\")],\n  [\"ledgerMaxReadBytes\", xdr.lookup(\"Uint32\")],\n  [\"ledgerMaxWriteLedgerEntries\", xdr.lookup(\"Uint32\")],\n  [\"ledgerMaxWriteBytes\", xdr.lookup(\"Uint32\")],\n  [\"txMaxReadLedgerEntries\", xdr.lookup(\"Uint32\")],\n  [\"txMaxReadBytes\", xdr.lookup(\"Uint32\")],\n  [\"txMaxWriteLedgerEntries\", xdr.lookup(\"Uint32\")],\n  [\"txMaxWriteBytes\", xdr.lookup(\"Uint32\")],\n  [\"feeReadLedgerEntry\", xdr.lookup(\"Int64\")],\n  [\"feeWriteLedgerEntry\", xdr.lookup(\"Int64\")],\n  [\"feeRead1Kb\", xdr.lookup(\"Int64\")],\n  [\"bucketListTargetSizeBytes\", xdr.lookup(\"Int64\")],\n  [\"writeFee1KbBucketListLow\", xdr.lookup(\"Int64\")],\n  [\"writeFee1KbBucketListHigh\", xdr.lookup(\"Int64\")],\n  [\"bucketListWriteFeeGrowthFactor\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct ConfigSettingContractHistoricalDataV0\n//   {\n//       int64 feeHistorical1KB; // Fee for storing 1KB in archives\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ConfigSettingContractHistoricalDataV0\", [\n  [\"feeHistorical1Kb\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct ConfigSettingContractEventsV0\n//   {\n//       // Maximum size of events that a contract call can emit.\n//       uint32 txMaxContractEventsSizeBytes;\n//       // Fee for generating 1KB of contract events.\n//       int64 feeContractEvents1KB;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ConfigSettingContractEventsV0\", [\n  [\"txMaxContractEventsSizeBytes\", xdr.lookup(\"Uint32\")],\n  [\"feeContractEvents1Kb\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct ConfigSettingContractBandwidthV0\n//   {\n//       // Maximum sum of all transaction sizes in the ledger in bytes\n//       uint32 ledgerMaxTxsSizeBytes;\n//       // Maximum size in bytes for a transaction\n//       uint32 txMaxSizeBytes;\n//   \n//       // Fee for 1 KB of transaction size\n//       int64 feeTxSize1KB;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ConfigSettingContractBandwidthV0\", [\n  [\"ledgerMaxTxsSizeBytes\", xdr.lookup(\"Uint32\")],\n  [\"txMaxSizeBytes\", xdr.lookup(\"Uint32\")],\n  [\"feeTxSize1Kb\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum ContractCostType {\n//       // Cost of running 1 wasm instruction\n//       WasmInsnExec = 0,\n//       // Cost of allocating a slice of memory (in bytes)\n//       MemAlloc = 1,\n//       // Cost of copying a slice of bytes into a pre-allocated memory\n//       MemCpy = 2,\n//       // Cost of comparing two slices of memory\n//       MemCmp = 3,\n//       // Cost of a host function dispatch, not including the actual work done by\n//       // the function nor the cost of VM invocation machinary\n//       DispatchHostFunction = 4,\n//       // Cost of visiting a host object from the host object storage. Exists to \n//       // make sure some baseline cost coverage, i.e. repeatly visiting objects\n//       // by the guest will always incur some charges.\n//       VisitObject = 5,\n//       // Cost of serializing an xdr object to bytes\n//       ValSer = 6,\n//       // Cost of deserializing an xdr object from bytes\n//       ValDeser = 7,\n//       // Cost of computing the sha256 hash from bytes\n//       ComputeSha256Hash = 8,\n//       // Cost of computing the dilithium2 pubkey from bytes\n//       ComputeDilithium2PubKey = 9,\n//       // Cost of verifying dilithium2 signature of a payload.\n//       VerifyDilithium2Sig = 10,\n//       // Cost of instantiation a VM from wasm bytes code.\n//       VmInstantiation = 11,\n//       // Cost of instantiation a VM from a cached state.\n//       VmCachedInstantiation = 12,\n//       // Cost of invoking a function on the VM. If the function is a host function,\n//       // additional cost will be covered by `DispatchHostFunction`.\n//       InvokeVmFunction = 13,\n//       // Cost of computing a keccak256 hash from bytes.\n//       ComputeKeccak256Hash = 14,\n//       // Cost of decoding an ECDSA signature computed from a 256-bit prime modulus\n//       // curve (e.g. secp256k1 and secp256r1)\n//       DecodeEcdsaCurve256Sig = 15,\n//       // Cost of recovering an ECDSA secp256k1 key from a signature.\n//       RecoverEcdsaSecp256k1Key = 16,\n//       // Cost of int256 addition (`+`) and subtraction (`-`) operations\n//       Int256AddSub = 17,\n//       // Cost of int256 multiplication (`*`) operation\n//       Int256Mul = 18,\n//       // Cost of int256 division (`/`) operation\n//       Int256Div = 19,\n//       // Cost of int256 power (`exp`) operation\n//       Int256Pow = 20,\n//       // Cost of int256 shift (`shl`, `shr`) operation\n//       Int256Shift = 21,\n//       // Cost of drawing random bytes using a ChaCha20 PRNG\n//       ChaCha20DrawBytes = 22,\n//   \n//       // Cost of parsing wasm bytes that only encode instructions.\n//       ParseWasmInstructions = 23,\n//       // Cost of parsing a known number of wasm functions.\n//       ParseWasmFunctions = 24,\n//       // Cost of parsing a known number of wasm globals.\n//       ParseWasmGlobals = 25,\n//       // Cost of parsing a known number of wasm table entries.\n//       ParseWasmTableEntries = 26,\n//       // Cost of parsing a known number of wasm types.\n//       ParseWasmTypes = 27,\n//       // Cost of parsing a known number of wasm data segments.\n//       ParseWasmDataSegments = 28,\n//       // Cost of parsing a known number of wasm element segments.\n//       ParseWasmElemSegments = 29,\n//       // Cost of parsing a known number of wasm imports.\n//       ParseWasmImports = 30,\n//       // Cost of parsing a known number of wasm exports.\n//       ParseWasmExports = 31,\n//       // Cost of parsing a known number of data segment bytes.\n//       ParseWasmDataSegmentBytes = 32,\n//   \n//       // Cost of instantiating wasm bytes that only encode instructions.\n//       InstantiateWasmInstructions = 33,\n//       // Cost of instantiating a known number of wasm functions.\n//       InstantiateWasmFunctions = 34,\n//       // Cost of instantiating a known number of wasm globals.\n//       InstantiateWasmGlobals = 35,\n//       // Cost of instantiating a known number of wasm table entries.\n//       InstantiateWasmTableEntries = 36,\n//       // Cost of instantiating a known number of wasm types.\n//       InstantiateWasmTypes = 37,\n//       // Cost of instantiating a known number of wasm data segments.\n//       InstantiateWasmDataSegments = 38,\n//       // Cost of instantiating a known number of wasm element segments.\n//       InstantiateWasmElemSegments = 39,\n//       // Cost of instantiating a known number of wasm imports.\n//       InstantiateWasmImports = 40,\n//       // Cost of instantiating a known number of wasm exports.\n//       InstantiateWasmExports = 41,\n//       // Cost of instantiating a known number of data segment bytes.\n//       InstantiateWasmDataSegmentBytes = 42,\n//   \n//       // Cost of decoding a bytes array representing an uncompressed SEC-1 encoded\n//       // point on a 256-bit elliptic curve\n//       Sec1DecodePointUncompressed = 43,\n//       // Cost of verifying an ECDSA Secp256r1 signature\n//       VerifyEcdsaSecp256r1Sig = 44\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ContractCostType\", {\n  wasmInsnExec: 0,\n  memAlloc: 1,\n  memCpy: 2,\n  memCmp: 3,\n  dispatchHostFunction: 4,\n  visitObject: 5,\n  valSer: 6,\n  valDeser: 7,\n  computeSha256Hash: 8,\n  computeDilithium2PubKey: 9,\n  verifyDilithium2Sig: 10,\n  vmInstantiation: 11,\n  vmCachedInstantiation: 12,\n  invokeVmFunction: 13,\n  computeKeccak256Hash: 14,\n  decodeEcdsaCurve256Sig: 15,\n  recoverEcdsaSecp256k1Key: 16,\n  int256AddSub: 17,\n  int256Mul: 18,\n  int256Div: 19,\n  int256Pow: 20,\n  int256Shift: 21,\n  chaCha20DrawBytes: 22,\n  parseWasmInstructions: 23,\n  parseWasmFunctions: 24,\n  parseWasmGlobals: 25,\n  parseWasmTableEntries: 26,\n  parseWasmTypes: 27,\n  parseWasmDataSegments: 28,\n  parseWasmElemSegments: 29,\n  parseWasmImports: 30,\n  parseWasmExports: 31,\n  parseWasmDataSegmentBytes: 32,\n  instantiateWasmInstructions: 33,\n  instantiateWasmFunctions: 34,\n  instantiateWasmGlobals: 35,\n  instantiateWasmTableEntries: 36,\n  instantiateWasmTypes: 37,\n  instantiateWasmDataSegments: 38,\n  instantiateWasmElemSegments: 39,\n  instantiateWasmImports: 40,\n  instantiateWasmExports: 41,\n  instantiateWasmDataSegmentBytes: 42,\n  sec1DecodePointUncompressed: 43,\n  verifyEcdsaSecp256r1Sig: 44,\n});\n\n// === xdr source ============================================================\n//\n//   struct ContractCostParamEntry {\n//       // use `ext` to add more terms (e.g. higher order polynomials) in the future\n//       ExtensionPoint ext;\n//   \n//       int64 constTerm;\n//       int64 linearTerm;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ContractCostParamEntry\", [\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\n  [\"constTerm\", xdr.lookup(\"Int64\")],\n  [\"linearTerm\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct StateArchivalSettings {\n//       uint32 maxEntryTTL;\n//       uint32 minTemporaryTTL;\n//       uint32 minPersistentTTL;\n//   \n//       // rent_fee = wfee_rate_average / rent_rate_denominator_for_type\n//       int64 persistentRentRateDenominator;\n//       int64 tempRentRateDenominator;\n//   \n//       // max number of entries that emit archival meta in a single ledger\n//       uint32 maxEntriesToArchive;\n//   \n//       // Number of snapshots to use when calculating average BucketList size\n//       uint32 bucketListSizeWindowSampleSize;\n//   \n//       // How often to sample the BucketList size for the average, in ledgers\n//       uint32 bucketListWindowSamplePeriod;\n//   \n//       // Maximum number of bytes that we scan for eviction per ledger\n//       uint32 evictionScanSize;\n//   \n//       // Lowest BucketList level to be scanned to evict entries\n//       uint32 startingEvictionScanLevel;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"StateArchivalSettings\", [\n  [\"maxEntryTtl\", xdr.lookup(\"Uint32\")],\n  [\"minTemporaryTtl\", xdr.lookup(\"Uint32\")],\n  [\"minPersistentTtl\", xdr.lookup(\"Uint32\")],\n  [\"persistentRentRateDenominator\", xdr.lookup(\"Int64\")],\n  [\"tempRentRateDenominator\", xdr.lookup(\"Int64\")],\n  [\"maxEntriesToArchive\", xdr.lookup(\"Uint32\")],\n  [\"bucketListSizeWindowSampleSize\", xdr.lookup(\"Uint32\")],\n  [\"bucketListWindowSamplePeriod\", xdr.lookup(\"Uint32\")],\n  [\"evictionScanSize\", xdr.lookup(\"Uint32\")],\n  [\"startingEvictionScanLevel\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct EvictionIterator {\n//       uint32 bucketListLevel;\n//       bool isCurrBucket;\n//       uint64 bucketFileOffset;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"EvictionIterator\", [\n  [\"bucketListLevel\", xdr.lookup(\"Uint32\")],\n  [\"isCurrBucket\", xdr.bool()],\n  [\"bucketFileOffset\", xdr.lookup(\"Uint64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   const CONTRACT_COST_COUNT_LIMIT = 1024;\n//\n// ===========================================================================\nxdr.const(\"CONTRACT_COST_COUNT_LIMIT\", 1024);\n\n// === xdr source ============================================================\n//\n//   typedef ContractCostParamEntry ContractCostParams<CONTRACT_COST_COUNT_LIMIT>;\n//\n// ===========================================================================\nxdr.typedef(\"ContractCostParams\", xdr.varArray(xdr.lookup(\"ContractCostParamEntry\"), xdr.lookup(\"CONTRACT_COST_COUNT_LIMIT\")));\n\n// === xdr source ============================================================\n//\n//   enum ConfigSettingID\n//   {\n//       CONFIG_SETTING_CONTRACT_MAX_SIZE_BYTES = 0,\n//       CONFIG_SETTING_CONTRACT_COMPUTE_V0 = 1,\n//       CONFIG_SETTING_CONTRACT_LEDGER_COST_V0 = 2,\n//       CONFIG_SETTING_CONTRACT_HISTORICAL_DATA_V0 = 3,\n//       CONFIG_SETTING_CONTRACT_EVENTS_V0 = 4,\n//       CONFIG_SETTING_CONTRACT_BANDWIDTH_V0 = 5,\n//       CONFIG_SETTING_CONTRACT_COST_PARAMS_CPU_INSTRUCTIONS = 6,\n//       CONFIG_SETTING_CONTRACT_COST_PARAMS_MEMORY_BYTES = 7,\n//       CONFIG_SETTING_CONTRACT_DATA_KEY_SIZE_BYTES = 8,\n//       CONFIG_SETTING_CONTRACT_DATA_ENTRY_SIZE_BYTES = 9,\n//       CONFIG_SETTING_STATE_ARCHIVAL = 10,\n//       CONFIG_SETTING_CONTRACT_EXECUTION_LANES = 11,\n//       CONFIG_SETTING_BUCKETLIST_SIZE_WINDOW = 12,\n//       CONFIG_SETTING_EVICTION_ITERATOR = 13\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ConfigSettingId\", {\n  configSettingContractMaxSizeBytes: 0,\n  configSettingContractComputeV0: 1,\n  configSettingContractLedgerCostV0: 2,\n  configSettingContractHistoricalDataV0: 3,\n  configSettingContractEventsV0: 4,\n  configSettingContractBandwidthV0: 5,\n  configSettingContractCostParamsCpuInstructions: 6,\n  configSettingContractCostParamsMemoryBytes: 7,\n  configSettingContractDataKeySizeBytes: 8,\n  configSettingContractDataEntrySizeBytes: 9,\n  configSettingStateArchival: 10,\n  configSettingContractExecutionLanes: 11,\n  configSettingBucketlistSizeWindow: 12,\n  configSettingEvictionIterator: 13,\n});\n\n// === xdr source ============================================================\n//\n//   union ConfigSettingEntry switch (ConfigSettingID configSettingID)\n//   {\n//   case CONFIG_SETTING_CONTRACT_MAX_SIZE_BYTES:\n//       uint32 contractMaxSizeBytes;\n//   case CONFIG_SETTING_CONTRACT_COMPUTE_V0:\n//       ConfigSettingContractComputeV0 contractCompute;\n//   case CONFIG_SETTING_CONTRACT_LEDGER_COST_V0:\n//       ConfigSettingContractLedgerCostV0 contractLedgerCost;\n//   case CONFIG_SETTING_CONTRACT_HISTORICAL_DATA_V0:\n//       ConfigSettingContractHistoricalDataV0 contractHistoricalData;\n//   case CONFIG_SETTING_CONTRACT_EVENTS_V0:\n//       ConfigSettingContractEventsV0 contractEvents;\n//   case CONFIG_SETTING_CONTRACT_BANDWIDTH_V0:\n//       ConfigSettingContractBandwidthV0 contractBandwidth;\n//   case CONFIG_SETTING_CONTRACT_COST_PARAMS_CPU_INSTRUCTIONS:\n//       ContractCostParams contractCostParamsCpuInsns;\n//   case CONFIG_SETTING_CONTRACT_COST_PARAMS_MEMORY_BYTES:\n//       ContractCostParams contractCostParamsMemBytes;\n//   case CONFIG_SETTING_CONTRACT_DATA_KEY_SIZE_BYTES:\n//       uint32 contractDataKeySizeBytes;\n//   case CONFIG_SETTING_CONTRACT_DATA_ENTRY_SIZE_BYTES:\n//       uint32 contractDataEntrySizeBytes;\n//   case CONFIG_SETTING_STATE_ARCHIVAL:\n//       StateArchivalSettings stateArchivalSettings;\n//   case CONFIG_SETTING_CONTRACT_EXECUTION_LANES:\n//       ConfigSettingContractExecutionLanesV0 contractExecutionLanes;\n//   case CONFIG_SETTING_BUCKETLIST_SIZE_WINDOW:\n//       uint64 bucketListSizeWindow<>;\n//   case CONFIG_SETTING_EVICTION_ITERATOR:\n//       EvictionIterator evictionIterator;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ConfigSettingEntry\", {\n  switchOn: xdr.lookup(\"ConfigSettingId\"),\n  switchName: \"configSettingId\",\n  switches: [\n    [\"configSettingContractMaxSizeBytes\", \"contractMaxSizeBytes\"],\n    [\"configSettingContractComputeV0\", \"contractCompute\"],\n    [\"configSettingContractLedgerCostV0\", \"contractLedgerCost\"],\n    [\"configSettingContractHistoricalDataV0\", \"contractHistoricalData\"],\n    [\"configSettingContractEventsV0\", \"contractEvents\"],\n    [\"configSettingContractBandwidthV0\", \"contractBandwidth\"],\n    [\"configSettingContractCostParamsCpuInstructions\", \"contractCostParamsCpuInsns\"],\n    [\"configSettingContractCostParamsMemoryBytes\", \"contractCostParamsMemBytes\"],\n    [\"configSettingContractDataKeySizeBytes\", \"contractDataKeySizeBytes\"],\n    [\"configSettingContractDataEntrySizeBytes\", \"contractDataEntrySizeBytes\"],\n    [\"configSettingStateArchival\", \"stateArchivalSettings\"],\n    [\"configSettingContractExecutionLanes\", \"contractExecutionLanes\"],\n    [\"configSettingBucketlistSizeWindow\", \"bucketListSizeWindow\"],\n    [\"configSettingEvictionIterator\", \"evictionIterator\"],\n  ],\n  arms: {\n    contractMaxSizeBytes: xdr.lookup(\"Uint32\"),\n    contractCompute: xdr.lookup(\"ConfigSettingContractComputeV0\"),\n    contractLedgerCost: xdr.lookup(\"ConfigSettingContractLedgerCostV0\"),\n    contractHistoricalData: xdr.lookup(\"ConfigSettingContractHistoricalDataV0\"),\n    contractEvents: xdr.lookup(\"ConfigSettingContractEventsV0\"),\n    contractBandwidth: xdr.lookup(\"ConfigSettingContractBandwidthV0\"),\n    contractCostParamsCpuInsns: xdr.lookup(\"ContractCostParams\"),\n    contractCostParamsMemBytes: xdr.lookup(\"ContractCostParams\"),\n    contractDataKeySizeBytes: xdr.lookup(\"Uint32\"),\n    contractDataEntrySizeBytes: xdr.lookup(\"Uint32\"),\n    stateArchivalSettings: xdr.lookup(\"StateArchivalSettings\"),\n    contractExecutionLanes: xdr.lookup(\"ConfigSettingContractExecutionLanesV0\"),\n    bucketListSizeWindow: xdr.varArray(xdr.lookup(\"Uint64\"), 2147483647),\n    evictionIterator: xdr.lookup(\"EvictionIterator\"),\n  },\n});\n\n});\nexport default types;\n","import xdr from './xdr';\nimport { Asset } from './asset';\nimport { hash } from './hashing';\n\n// LiquidityPoolFeeV18 is the default liquidity pool fee in protocol v18. It defaults to 30 base points (0.3%).\nexport const LiquidityPoolFeeV18 = 30;\n\n/**\n * getLiquidityPoolId computes the Pool ID for the given assets, fee and pool type.\n *\n * @see [stellar-core getPoolID](https://github.com/stellar/stellar-core/blob/9f3a48c6a8f1aa77b6043a055d0638661f718080/src/ledger/test/LedgerTxnTests.cpp#L3746-L3751)\n *\n * @export\n * @param {string} liquidityPoolType – A string representing the liquidity pool type.\n * @param {object} liquidityPoolParameters        – The liquidity pool parameters.\n * @param {Asset}  liquidityPoolParameters.assetA – The first asset in the Pool, it must respect the rule assetA < assetB.\n * @param {Asset}  liquidityPoolParameters.assetB – The second asset in the Pool, it must respect the rule assetA < assetB.\n * @param {number} liquidityPoolParameters.fee    – The liquidity pool fee. For now the only fee supported is `30`.\n *\n * @return {Buffer} the raw Pool ID buffer, which can be stringfied with `toString('hex')`\n */\nexport function getLiquidityPoolId(\n  liquidityPoolType,\n  liquidityPoolParameters = {}\n) {\n  if (liquidityPoolType !== 'constant_product') {\n    throw new Error('liquidityPoolType is invalid');\n  }\n\n  const { assetA, assetB, fee } = liquidityPoolParameters;\n  if (!assetA || !(assetA instanceof Asset)) {\n    throw new Error('assetA is invalid');\n  }\n  if (!assetB || !(assetB instanceof Asset)) {\n    throw new Error('assetB is invalid');\n  }\n  if (!fee || fee !== LiquidityPoolFeeV18) {\n    throw new Error('fee is invalid');\n  }\n\n  if (Asset.compare(assetA, assetB) !== -1) {\n    throw new Error('Assets are not in lexicographic order');\n  }\n\n  const lpTypeData =\n    xdr.LiquidityPoolType.liquidityPoolConstantProduct().toXDR();\n  const lpParamsData = new xdr.LiquidityPoolConstantProductParameters({\n    assetA: assetA.toXDRObject(),\n    assetB: assetB.toXDRObject(),\n    fee\n  }).toXDR();\n  const payload = Buffer.concat([lpTypeData, lpParamsData]);\n  return hash(payload);\n}\n","import { sha256 } from 'sha.js';\n\nexport function hash(data) {\n  const hasher = new sha256();\n  hasher.update(data, 'utf8');\n  return hasher.digest();\n}\n","/* eslint-disable import/no-import-module-exports */\nimport xdr from './xdr';\nimport cereal from './jsxdr';\n\nexport { xdr };\nexport { cereal };\nexport { hash } from './hashing';\nexport { sign, verify, FastSigning } from './signing';\nexport {\n  getLiquidityPoolId,\n  LiquidityPoolFeeV18\n} from './get_liquidity_pool_id';\nexport { Keypair } from './keypair';\nexport { UnsignedHyper, Hyper } from '@stellar/js-xdr';\nexport { TransactionBase } from './transaction_base';\nexport { Transaction } from './transaction';\nexport { FeeBumpTransaction } from './fee_bump_transaction';\nexport {\n  TransactionBuilder,\n  TimeoutInfinite,\n  BASE_FEE\n} from './transaction_builder';\nexport { Asset } from './asset';\nexport { LiquidityPoolAsset } from './liquidity_pool_asset';\nexport { LiquidityPoolId } from './liquidity_pool_id';\nexport {\n  Operation,\n  AuthRequiredFlag,\n  AuthRevocableFlag,\n  AuthImmutableFlag,\n  AuthClawbackEnabledFlag\n} from './operation';\nexport * from './memo';\nexport { Account } from './account';\nexport { MuxedAccount } from './muxed_account';\nexport { Claimant } from './claimant';\nexport { Networks } from './network';\nexport { StrKey } from './strkey';\nexport { SignerKey } from './signerkey';\nexport { Soroban } from './soroban';\nexport {\n  decodeAddressToMuxedAccount,\n  encodeMuxedAccountToAddress,\n  extractBaseAddress,\n  encodeMuxedAccount\n} from './util/decode_encode_muxed_account';\n\n//\n// Soroban\n//\n\nexport { Contract } from './contract';\nexport { Address } from './address';\nexport * from './numbers';\nexport * from './scval';\nexport * from './events';\nexport * from './sorobandata_builder';\nexport * from './auth';\n\nexport * from './invocation';\n\nexport default module.exports;\n","import { Asset } from './asset';\nimport { Address } from './address';\nimport { scValToNative } from './scval';\n\n/**\n * @typedef CreateInvocation\n *\n * @prop {'wasm'|'sac'} type  a type indicating if this creation was a custom\n *    contract or a wrapping of an existing Stellar asset\n * @prop {string} [token] when `type=='sac'`, the canonical {@link Asset} that\n *    is being wrapped by this Stellar Asset Contract\n * @prop {object} [wasm]  when `type=='wasm'`, add'l creation parameters\n *\n * @prop {string} wasm.hash     hex hash of WASM bytecode backing this contract\n * @prop {string} wasm.address  contract address of this deployment\n * @prop {string} wasm.salt     hex salt that the user consumed when creating\n *    this contract (encoded in the resulting address)\n */\n\n/**\n * @typedef ExecuteInvocation\n *\n * @prop {string} source    the strkey of the contract (C...) being invoked\n * @prop {string} function  the name of the function being invoked\n * @prop {any[]}  args      the natively-represented parameters to the function\n *    invocation (see {@link scValToNative}) for rules on how they're\n *    represented a JS types\n */\n\n/**\n * @typedef InvocationTree\n * @prop {'execute' | 'create'} type  the type of invocation occurring, either\n *    contract creation or host function execution\n * @prop {CreateInvocation | ExecuteInvocation} args  the parameters to the\n *    invocation, depending on the type\n * @prop {InvocationTree[]} invocations   any sub-invocations that (may) occur\n *    as a result of this invocation (i.e. a tree of call stacks)\n */\n\n/**\n * Turns a raw invocation tree into a human-readable format.\n *\n * This is designed to make the invocation tree easier to understand in order to\n * inform users about the side-effects of their contract calls. This will help\n * make informed decisions about whether or not a particular invocation will\n * result in what you expect it to.\n *\n * @param {xdr.SorobanAuthorizedInvocation} root  the raw XDR of the invocation,\n *    likely acquired from transaction simulation. this is either from the\n *    {@link Operation.invokeHostFunction} itself (the `func` field), or from\n *    the authorization entries ({@link xdr.SorobanAuthorizationEntry}, the\n *    `rootInvocation` field)\n *\n * @returns {InvocationTree}  a human-readable version of the invocation tree\n *\n * @example\n * Here, we show a browser modal after simulating an arbitrary transaction,\n * `tx`, which we assume has an `Operation.invokeHostFunction` inside of it:\n *\n * ```typescript\n * import { Server, buildInvocationTree } from '@stellar/stellar-sdk';\n *\n * const s = new Server(\"fill in accordingly\");\n *\n * s.simulateTransaction(tx).then(\n *  (resp: SorobanRpc.SimulateTransactionResponse) => {\n *    if (SorobanRpc.isSuccessfulSim(resp) && ) {\n *      // bold assumption: there's a valid result with an auth entry\n *      alert(\n *        \"You are authorizing the following invocation:\\n\" +\n *        JSON.stringify(\n *          buildInvocationTree(resp.result!.auth[0].rootInvocation()),\n *          null,\n *          2\n *        )\n *      );\n *    }\n *  }\n * );\n * ```\n */\nexport function buildInvocationTree(root) {\n  const fn = root.function();\n\n  /** @type {InvocationTree} */\n  const output = {};\n\n  /** @type {xdr.CreateContractArgs | xdr.InvokeContractArgs} */\n  const inner = fn.value();\n\n  switch (fn.switch().value) {\n    // sorobanAuthorizedFunctionTypeContractFn\n    case 0:\n      output.type = 'execute';\n      output.args = {\n        source: Address.fromScAddress(inner.contractAddress()).toString(),\n        function: inner.functionName(),\n        args: inner.args().map((arg) => scValToNative(arg))\n      };\n      break;\n\n    // sorobanAuthorizedFunctionTypeCreateContractHostFn\n    case 1: {\n      output.type = 'create';\n      output.args = {};\n\n      // If the executable is a WASM, the preimage MUST be an address. If it's a\n      // token, the preimage MUST be an asset. This is a cheeky way to check\n      // that, because wasm=0, token=1 and address=0, asset=1 in the XDR switch\n      // values.\n      //\n      // The first part may not be true in V2, but we'd need to update this code\n      // anyway so it can still be an error.\n      const [exec, preimage] = [inner.executable(), inner.contractIdPreimage()];\n      if (!!exec.switch().value !== !!preimage.switch().value) {\n        throw new Error(\n          `creation function appears invalid: ${JSON.stringify(\n            inner\n          )} (should be wasm+address or token+asset)`\n        );\n      }\n\n      switch (exec.switch().value) {\n        // contractExecutableWasm\n        case 0: {\n          /** @type {xdr.ContractIdPreimageFromAddress} */\n          const details = preimage.fromAddress();\n\n          output.args.type = 'wasm';\n          output.args.wasm = {\n            salt: details.salt().toString('hex'),\n            hash: exec.wasmHash().toString('hex'),\n            address: Address.fromScAddress(details.address()).toString()\n          };\n          break;\n        }\n\n        // contractExecutableStellarAsset\n        case 1:\n          output.args.type = 'sac';\n          output.args.asset = Asset.fromOperation(\n            preimage.fromAsset()\n          ).toString();\n          break;\n\n        default:\n          throw new Error(`unknown creation type: ${JSON.stringify(exec)}`);\n      }\n\n      break;\n    }\n\n    default:\n      throw new Error(\n        `unknown invocation type (${fn.switch()}): ${JSON.stringify(fn)}`\n      );\n  }\n\n  output.invocations = root.subInvocations().map((i) => buildInvocationTree(i));\n  return output;\n}\n\n/**\n * @callback InvocationWalker\n *\n * @param {xdr.SorobanAuthorizedInvocation} node  the currently explored node\n * @param {number} depth  the depth of the tree this node is occurring at (the\n *    root starts at a depth of 1)\n * @param {xdr.SorobanAuthorizedInvocation} [parent]  this `node`s parent node,\n *    if any (i.e. this doesn't exist at the root)\n *\n * @returns {boolean|null|void}   returning exactly `false` is a hint to stop\n *    exploring, other values are ignored\n */\n\n/**\n * Executes a callback function on each node in the tree until stopped.\n *\n * Nodes are walked in a depth-first order. Returning `false` from the callback\n * stops further depth exploration at that node, but it does not stop the walk\n * in a \"global\" view.\n *\n * @param {xdr.SorobanAuthorizedInvocation} root  the tree to explore\n * @param {InvocationWalker} callback  the callback to execute for each node\n * @returns {void}\n */\nexport function walkInvocationTree(root, callback) {\n  walkHelper(root, 1, callback);\n}\n\nfunction walkHelper(node, depth, callback, parent) {\n  if (callback(node, depth, parent) === false /* allow void rv */) {\n    return;\n  }\n\n  node\n    .subInvocations()\n    .forEach((i) => walkHelper(i, depth + 1, callback, node));\n}\n","import { XdrWriter, XdrReader } from '@stellar/js-xdr';\n\nconst cereal = { XdrWriter, XdrReader };\nexport default cereal;\n","/* eslint no-bitwise: [\"error\", {\"allow\": [\"^\"]}] */\n\nimport nacl from 'tweetnacl';\n\nimport { sign, verify, generate, generateSK } from './signing';\nimport { StrKey } from './strkey';\nimport { hash } from './hashing';\nimport xdr from './xdr';\n/**\n * `Keypair` represents public (and secret) keys of the account.\n *\n * Currently `Keypair` only supports dilithium2 but in a future this class can be abstraction layer for other\n * public-key signature systems.\n *\n * Use more convenient methods to create `Keypair` object:\n * * `{@link Keypair.fromPublicKey}`\n * * `{@link Keypair.fromSecret}`\n * * `{@link Keypair.random}`\n *\n * @constructor\n * @param {object} keys At least one of keys must be provided.\n * @param {string} keys.type Public-key signature system name. (currently only `dilithium2` keys are supported)\n * @param {Buffer} [keys.publicKey] Raw public key 1312-byte\n * @param {Buffer} [keys.secretKey] Raw secret key (32-byte secret seed in dilithium2`)\n */\nexport class Keypair {\n  constructor(keys) {\n    if (keys.type !== 'dilithium2') {\n      throw new Error('Invalid keys type');\n    }\n\n    this.type = keys.type;\n\n    if (keys.secretKey) {\n      keys.secretKey = Buffer.from(keys.secretKey);\n\n      if (keys.secretKey.length !== 32) {\n        throw new Error('secretKey length is invalid');\n      }\n\n      this._secretSeed = keys.secretKey;\n      this._publicKey = generate(keys.secretKey);\n      this._secretKey = generateSK(keys.secretKey);\n\n      if (\n        keys.publicKey &&\n        !this._publicKey.equals(Buffer.from(keys.publicKey))\n      ) {\n        throw new Error('secretKey does not match publicKey');\n      }\n    } else {\n      this._publicKey = Buffer.from(keys.publicKey);\n\n      if (this._publicKey.length !== 1312) {\n        throw new Error('publicKey length is invalid');\n      }\n    }\n  }\n\n  /**\n   * Creates a new `Keypair` instance from secret. This can either be secret key or secret seed depending\n   * on underlying public-key signature system. Currently `Keypair` only supports dilithium2.\n   * @param {string} secret secret key \n   * @returns {Keypair}\n   */\n  static fromSecret(secret) {\n    const rawSecret = StrKey.decodeDilithium2SecretSeed(secret);\n    return this.fromRawDilithium2Seed(rawSecret);\n  }\n\n  /**\n   * Creates a new `Keypair` object from dilithium2 secret key seed raw bytes.\n   *\n   * @param {Buffer} rawSeed Raw 32-byte dilithium2 secret key seed\n   * @returns {Keypair}\n   */\n  static fromRawDilithium2Seed(rawSeed) {\n    return new this({ type: 'dilithium2', secretKey: rawSeed });\n  }\n\n  /**\n   * Returns `Keypair` object representing network master key.\n   * @param {string} networkPassphrase passphrase of the target stellar network (e.g. \"Public Global Stellar Network ; September 2015\").\n   * @returns {Keypair}\n   */\n  static master(networkPassphrase) {\n    if (!networkPassphrase) {\n      throw new Error(\n        'No network selected. Please pass a network argument, e.g. `Keypair.master(Networks.PUBLIC)`.'\n      );\n    }\n\n    return this.fromRawDilithium2Seed(hash(networkPassphrase));\n  }\n\n  /**\n   * Creates a new `Keypair` object from public key.\n   * @param {string} publicKey public key \n   * @returns {Keypair}\n   */\n  static fromPublicKey(publicKey) {\n    publicKey = StrKey.decodeDilithium2PublicKey(publicKey);\n    if (publicKey.length !== 1312) {\n      throw new Error('Invalid Stellar public key');\n    }\n    return new this({ type: 'dilithium2', publicKey });\n  }\n\n  /**\n   * Create a random `Keypair` object.\n   * @returns {Keypair}\n   */\n  static random() {\n    const secret = nacl.randomBytes(32);\n    return this.fromRawDilithium2Seed(secret);\n  }\n\n  xdrAccountId() {\n    return new xdr.AccountId.publicKeyTypeDilithium2(this._publicKey);\n  }\n\n  xdrPublicKey() {\n    return new xdr.PublicKey.publicKeyTypeDilithium2(this._publicKey);\n  }\n\n  /**\n   * Creates a {@link xdr.MuxedAccount} object from the public key.\n   *\n   * You will get a different type of muxed account depending on whether or not\n   * you pass an ID.\n   *\n   * @param  {string} [id] - stringified integer indicating the underlying muxed\n   *     ID of the new account object\n   *\n   * @return {xdr.MuxedAccount}\n   */\n  xdrMuxedAccount(id) {\n    if (typeof id !== 'undefined') {\n      if (typeof id !== 'string') {\n        throw new TypeError(`expected string for ID, got ${typeof id}`);\n      }\n\n      return xdr.MuxedAccount.keyTypeMuxedDilithium2(\n        new xdr.MuxedAccountMdilithium2({\n          id: xdr.Uint64.fromString(id),\n          dilithium2: this._publicKey\n        })\n      );\n    }\n\n    return new xdr.MuxedAccount.keyTypeDilithium2(this._publicKey);\n  }\n\n  /**\n   * Returns raw public key\n   * @returns {Buffer}\n   */\n  rawPublicKey() {\n    return this._publicKey;\n  }\n\n  signatureHint() {\n    const a = this.xdrAccountId().toXDR();\n\n    return a.slice(a.length - 4);\n  }\n\n  /**\n   * Returns public key associated with this `Keypair` object.\n   * @returns {string}\n   */\n  publicKey() {\n    return StrKey.encodeDilithium2PublicKey(this._publicKey);\n  }\n\n  /**\n   * Returns secret key associated with this `Keypair` object\n   * @returns {string}\n   */\n  secret() {\n    if (!this._secretSeed) {\n      throw new Error('no secret key available');\n    }\n\n    if (this.type === 'dilithium2') {\n      return StrKey.encodeDilithium2SecretSeed(this._secretSeed);\n    }\n\n    throw new Error('Invalid Keypair type');\n  }\n\n  /**\n   * Returns raw secret key.\n   * @returns {Buffer}\n   */\n  rawSecretKey() {\n    return this._secretSeed;\n  }\n\n  /**\n   * Returns `true` if this `Keypair` object contains secret key and can sign.\n   * @returns {boolean}\n   */\n  canSign() {\n    return !!this._secretKey;\n  }\n\n  /**\n   * Signs data.\n   * @param {Buffer} data Data to sign\n   * @returns {Buffer}\n   */\n  sign(data) {\n    if (!this.canSign()) {\n      throw new Error('cannot sign: no secret key available');\n    }\n\n    return sign(data, this._secretKey);\n  }\n\n  /**\n   * Verifies if `signature` for `data` is valid.\n   * @param {Buffer} data Signed data\n   * @param {Buffer} signature Signature\n   * @returns {boolean}\n   */\n  verify(data, signature) {\n    return verify(data, signature, this._publicKey);\n  }\n\n  /**\n   * Returns the decorated signature (hint+sig) for arbitrary data.\n   *\n   * @param  {Buffer} data  arbitrary data to sign\n   * @return {xdr.DecoratedSignature}   the raw signature structure which can be\n   *     added directly to a transaction envelope\n   *\n   * @see TransactionBase.addDecoratedSignature\n   */\n  signDecorated(data) {\n    const signature = this.sign(data);\n    const hint = this.signatureHint();\n\n    return new xdr.DecoratedSignature({ hint, signature });\n  }\n\n  /**\n   * Returns the raw decorated signature (hint+sig) for a signed payload signer.\n   *\n   *  The hint is defined as the last 4 bytes of the signer key XORed with last\n   *  4 bytes of the payload (zero-left-padded if necessary).\n   *\n   * @param  {Buffer} data    data to both sign and treat as the payload\n   * @return {xdr.DecoratedSignature}\n   *\n   * @see https://github.com/stellar/stellar-protocol/blob/master/core/cap-0040.md#signature-hint\n   * @see TransactionBase.addDecoratedSignature\n   */\n  signPayloadDecorated(data) {\n    const signature = this.sign(data);\n    const keyHint = this.signatureHint();\n\n    let hint = Buffer.from(data.slice(-4));\n    if (hint.length < 4) {\n      // append zeroes as needed\n      hint = Buffer.concat([hint, Buffer.alloc(4 - data.length, 0)]);\n    }\n\n    return new xdr.DecoratedSignature({\n      hint: hint.map((byte, i) => byte ^ keyHint[i]),\n      signature\n    });\n  }\n}","import xdr from './xdr';\nimport { Asset } from './asset';\nimport {\n  LiquidityPoolFeeV18,\n  getLiquidityPoolId\n} from './get_liquidity_pool_id';\n\n/**\n * LiquidityPoolAsset class represents a liquidity pool trustline change.\n *\n * @constructor\n * @param {Asset} assetA – The first asset in the Pool, it must respect the rule assetA < assetB. See {@link Asset.compare} for more details on how assets are sorted.\n * @param {Asset} assetB – The second asset in the Pool, it must respect the rule assetA < assetB. See {@link Asset.compare} for more details on how assets are sorted.\n * @param {number} fee – The liquidity pool fee. For now the only fee supported is `30`.\n */\nexport class LiquidityPoolAsset {\n  constructor(assetA, assetB, fee) {\n    if (!assetA || !(assetA instanceof Asset)) {\n      throw new Error('assetA is invalid');\n    }\n    if (!assetB || !(assetB instanceof Asset)) {\n      throw new Error('assetB is invalid');\n    }\n    if (Asset.compare(assetA, assetB) !== -1) {\n      throw new Error('Assets are not in lexicographic order');\n    }\n    if (!fee || fee !== LiquidityPoolFeeV18) {\n      throw new Error('fee is invalid');\n    }\n\n    this.assetA = assetA;\n    this.assetB = assetB;\n    this.fee = fee;\n  }\n\n  /**\n   * Returns a liquidity pool asset object from its XDR ChangeTrustAsset object\n   * representation.\n   * @param {xdr.ChangeTrustAsset} ctAssetXdr - The asset XDR object.\n   * @returns {LiquidityPoolAsset}\n   */\n  static fromOperation(ctAssetXdr) {\n    const assetType = ctAssetXdr.switch();\n    if (assetType === xdr.AssetType.assetTypePoolShare()) {\n      const liquidityPoolParameters = ctAssetXdr\n        .liquidityPool()\n        .constantProduct();\n      return new this(\n        Asset.fromOperation(liquidityPoolParameters.assetA()),\n        Asset.fromOperation(liquidityPoolParameters.assetB()),\n        liquidityPoolParameters.fee()\n      );\n    }\n\n    throw new Error(`Invalid asset type: ${assetType.name}`);\n  }\n\n  /**\n   * Returns the `xdr.ChangeTrustAsset` object for this liquidity pool asset.\n   *\n   * Note: To convert from an {@link Asset `Asset`} to `xdr.ChangeTrustAsset`\n   * please refer to the\n   * {@link Asset.toChangeTrustXDRObject `Asset.toChangeTrustXDRObject`} method.\n   *\n   * @returns {xdr.ChangeTrustAsset} XDR ChangeTrustAsset object.\n   */\n  toXDRObject() {\n    const lpConstantProductParamsXdr =\n      new xdr.LiquidityPoolConstantProductParameters({\n        assetA: this.assetA.toXDRObject(),\n        assetB: this.assetB.toXDRObject(),\n        fee: this.fee\n      });\n    const lpParamsXdr = new xdr.LiquidityPoolParameters(\n      'liquidityPoolConstantProduct',\n      lpConstantProductParamsXdr\n    );\n    return new xdr.ChangeTrustAsset('assetTypePoolShare', lpParamsXdr);\n  }\n\n  /**\n   * @returns {LiquidityPoolParameters} Liquidity pool parameters.\n   */\n  getLiquidityPoolParameters() {\n    return {\n      ...this,\n      assetA: this.assetA,\n      assetB: this.assetB,\n      fee: this.fee\n    };\n  }\n\n  /**\n   * @see [Assets concept](https://developers.stellar.org/docs/glossary/assets/)\n   * @returns {AssetType.liquidityPoolShares} asset type. Can only be `liquidity_pool_shares`.\n   */\n  getAssetType() {\n    return 'liquidity_pool_shares';\n  }\n\n  /**\n   * @param {LiquidityPoolAsset} other the LiquidityPoolAsset to compare\n   * @returns {boolean} `true` if this asset equals the given asset.\n   */\n  equals(other) {\n    return (\n      this.assetA.equals(other.assetA) &&\n      this.assetB.equals(other.assetB) &&\n      this.fee === other.fee\n    );\n  }\n\n  toString() {\n    const poolId = getLiquidityPoolId(\n      'constant_product',\n      this.getLiquidityPoolParameters()\n    ).toString('hex');\n    return `liquidity_pool:${poolId}`;\n  }\n}\n","import xdr from './xdr';\n\n/**\n * LiquidityPoolId class represents the asset referenced by a trustline to a\n * liquidity pool.\n *\n * @constructor\n * @param {string} liquidityPoolId - The ID of the liquidity pool in string 'hex'.\n */\nexport class LiquidityPoolId {\n  constructor(liquidityPoolId) {\n    if (!liquidityPoolId) {\n      throw new Error('liquidityPoolId cannot be empty');\n    }\n    if (!/^[a-f0-9]{64}$/.test(liquidityPoolId)) {\n      throw new Error('Liquidity pool ID is not a valid hash');\n    }\n\n    this.liquidityPoolId = liquidityPoolId;\n  }\n\n  /**\n   * Returns a liquidity pool ID object from its xdr.TrustLineAsset representation.\n   * @param {xdr.TrustLineAsset} tlAssetXdr - The asset XDR object.\n   * @returns {LiquidityPoolId}\n   */\n  static fromOperation(tlAssetXdr) {\n    const assetType = tlAssetXdr.switch();\n    if (assetType === xdr.AssetType.assetTypePoolShare()) {\n      const liquidityPoolId = tlAssetXdr.liquidityPoolId().toString('hex');\n      return new this(liquidityPoolId);\n    }\n\n    throw new Error(`Invalid asset type: ${assetType.name}`);\n  }\n\n  /**\n   * Returns the `xdr.TrustLineAsset` object for this liquidity pool ID.\n   *\n   * Note: To convert from {@link Asset `Asset`} to `xdr.TrustLineAsset` please\n   * refer to the\n   * {@link Asset.toTrustLineXDRObject `Asset.toTrustLineXDRObject`} method.\n   *\n   * @returns {xdr.TrustLineAsset} XDR LiquidityPoolId object\n   */\n  toXDRObject() {\n    const xdrPoolId = xdr.PoolId.fromXDR(this.liquidityPoolId, 'hex');\n    return new xdr.TrustLineAsset('assetTypePoolShare', xdrPoolId);\n  }\n\n  /**\n   * @returns {string} Liquidity pool ID.\n   */\n  getLiquidityPoolId() {\n    return String(this.liquidityPoolId);\n  }\n\n  /**\n   * @see [Assets concept](https://developers.stellar.org/docs/glossary/assets/)\n   * @returns {AssetType.liquidityPoolShares} asset type. Can only be `liquidity_pool_shares`.\n   */\n  getAssetType() {\n    return 'liquidity_pool_shares';\n  }\n\n  /**\n   * @param {LiquidityPoolId} asset LiquidityPoolId to compare.\n   * @returns {boolean} `true` if this asset equals the given asset.\n   */\n  equals(asset) {\n    return this.liquidityPoolId === asset.getLiquidityPoolId();\n  }\n\n  toString() {\n    return `liquidity_pool:${this.liquidityPoolId}`;\n  }\n}\n","import { UnsignedHyper } from '@stellar/js-xdr';\nimport BigNumber from './util/bignumber';\nimport xdr from './xdr';\n\n/**\n * Type of {@link Memo}.\n */\nexport const MemoNone = 'none';\n/**\n * Type of {@link Memo}.\n */\nexport const MemoID = 'id';\n/**\n * Type of {@link Memo}.\n */\nexport const MemoText = 'text';\n/**\n * Type of {@link Memo}.\n */\nexport const MemoHash = 'hash';\n/**\n * Type of {@link Memo}.\n */\nexport const MemoReturn = 'return';\n\n/**\n * `Memo` represents memos attached to transactions.\n *\n * @param {string} type - `MemoNone`, `MemoID`, `MemoText`, `MemoHash` or `MemoReturn`\n * @param {*} value - `string` for `MemoID`, `MemoText`, buffer of hex string for `MemoHash` or `MemoReturn`\n * @see [Transactions concept](https://developers.stellar.org/docs/glossary/transactions/)\n * @class Memo\n */\nexport class Memo {\n  constructor(type, value = null) {\n    this._type = type;\n    this._value = value;\n\n    switch (this._type) {\n      case MemoNone:\n        break;\n      case MemoID:\n        Memo._validateIdValue(value);\n        break;\n      case MemoText:\n        Memo._validateTextValue(value);\n        break;\n      case MemoHash:\n      case MemoReturn:\n        Memo._validateHashValue(value);\n        // We want MemoHash and MemoReturn to have Buffer as a value\n        if (typeof value === 'string') {\n          this._value = Buffer.from(value, 'hex');\n        }\n        break;\n      default:\n        throw new Error('Invalid memo type');\n    }\n  }\n\n  /**\n   * Contains memo type: `MemoNone`, `MemoID`, `MemoText`, `MemoHash` or `MemoReturn`\n   */\n  get type() {\n    return this._type;\n  }\n\n  set type(type) {\n    throw new Error('Memo is immutable');\n  }\n\n  /**\n   * Contains memo value:\n   * * `null` for `MemoNone`,\n   * * `string` for `MemoID`,\n   * * `Buffer` for `MemoText` after decoding using `fromXDRObject`, original value otherwise,\n   * * `Buffer` for `MemoHash`, `MemoReturn`.\n   */\n  get value() {\n    switch (this._type) {\n      case MemoNone:\n        return null;\n      case MemoID:\n      case MemoText:\n        return this._value;\n      case MemoHash:\n      case MemoReturn:\n        return Buffer.from(this._value);\n      default:\n        throw new Error('Invalid memo type');\n    }\n  }\n\n  set value(value) {\n    throw new Error('Memo is immutable');\n  }\n\n  static _validateIdValue(value) {\n    const error = new Error(`Expects a int64 as a string. Got ${value}`);\n\n    if (typeof value !== 'string') {\n      throw error;\n    }\n\n    let number;\n    try {\n      number = new BigNumber(value);\n    } catch (e) {\n      throw error;\n    }\n\n    // Infinity\n    if (!number.isFinite()) {\n      throw error;\n    }\n\n    // NaN\n    if (number.isNaN()) {\n      throw error;\n    }\n  }\n\n  static _validateTextValue(value) {\n    if (!xdr.Memo.armTypeForArm('text').isValid(value)) {\n      throw new Error('Expects string, array or buffer, max 28 bytes');\n    }\n  }\n\n  static _validateHashValue(value) {\n    const error = new Error(\n      `Expects a 32 byte hash value or hex encoded string. Got ${value}`\n    );\n\n    if (value === null || typeof value === 'undefined') {\n      throw error;\n    }\n\n    let valueBuffer;\n    if (typeof value === 'string') {\n      if (!/^[0-9A-Fa-f]{64}$/g.test(value)) {\n        throw error;\n      }\n      valueBuffer = Buffer.from(value, 'hex');\n    } else if (Buffer.isBuffer(value)) {\n      valueBuffer = Buffer.from(value);\n    } else {\n      throw error;\n    }\n\n    if (!valueBuffer.length || valueBuffer.length !== 32) {\n      throw error;\n    }\n  }\n\n  /**\n   * Returns an empty memo (`MemoNone`).\n   * @returns {Memo}\n   */\n  static none() {\n    return new Memo(MemoNone);\n  }\n\n  /**\n   * Creates and returns a `MemoText` memo.\n   * @param {string} text - memo text\n   * @returns {Memo}\n   */\n  static text(text) {\n    return new Memo(MemoText, text);\n  }\n\n  /**\n   * Creates and returns a `MemoID` memo.\n   * @param {string} id - 64-bit number represented as a string\n   * @returns {Memo}\n   */\n  static id(id) {\n    return new Memo(MemoID, id);\n  }\n\n  /**\n   * Creates and returns a `MemoHash` memo.\n   * @param {array|string} hash - 32 byte hash or hex encoded string\n   * @returns {Memo}\n   */\n  static hash(hash) {\n    return new Memo(MemoHash, hash);\n  }\n\n  /**\n   * Creates and returns a `MemoReturn` memo.\n   * @param {array|string} hash - 32 byte hash or hex encoded string\n   * @returns {Memo}\n   */\n  static return(hash) {\n    return new Memo(MemoReturn, hash);\n  }\n\n  /**\n   * Returns XDR memo object.\n   * @returns {xdr.Memo}\n   */\n  toXDRObject() {\n    switch (this._type) {\n      case MemoNone:\n        return xdr.Memo.memoNone();\n      case MemoID:\n        return xdr.Memo.memoId(UnsignedHyper.fromString(this._value));\n      case MemoText:\n        return xdr.Memo.memoText(this._value);\n      case MemoHash:\n        return xdr.Memo.memoHash(this._value);\n      case MemoReturn:\n        return xdr.Memo.memoReturn(this._value);\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * Returns {@link Memo} from XDR memo object.\n   * @param {xdr.Memo} object XDR memo object\n   * @returns {Memo}\n   */\n  static fromXDRObject(object) {\n    switch (object.arm()) {\n      case 'id':\n        return Memo.id(object.value().toString());\n      case 'text':\n        return Memo.text(object.value());\n      case 'hash':\n        return Memo.hash(object.value());\n      case 'retHash':\n        return Memo.return(object.value());\n      default:\n        break;\n    }\n\n    if (typeof object.value() === 'undefined') {\n      return Memo.none();\n    }\n\n    throw new Error('Unknown type');\n  }\n}\n","import xdr from './xdr';\nimport { Account } from './account';\nimport { StrKey } from './strkey';\nimport {\n  decodeAddressToMuxedAccount,\n  encodeMuxedAccountToAddress,\n  encodeMuxedAccount,\n  extractBaseAddress\n} from './util/decode_encode_muxed_account';\n\n/**\n * Represents a muxed account for transactions and operations.\n *\n * A muxed (or *multiplexed*) account (defined rigorously in\n * [CAP-27](https://stellar.org/protocol/cap-27) and briefly in\n * [SEP-23](https://stellar.org/protocol/sep-23)) is one that resolves a single\n * Stellar `G...`` account to many different underlying IDs.\n *\n * For example, you may have a single Stellar address for accounting purposes:\n *   GA7QYNF7SOWQ3GLR2BGMZEHXAVIRZA4KVWLTJJFC7MGXUA74P7UJVSGZ\n *\n * Yet would like to use it for 4 different family members:\n *   1: MA7QYNF7SOWQ3GLR2BGMZEHXAVIRZA4KVWLTJJFC7MGXUA74P7UJUAAAAAAAAAAAAGZFQ\n *   2: MA7QYNF7SOWQ3GLR2BGMZEHXAVIRZA4KVWLTJJFC7MGXUA74P7UJUAAAAAAAAAAAALIWQ\n *   3: MA7QYNF7SOWQ3GLR2BGMZEHXAVIRZA4KVWLTJJFC7MGXUA74P7UJUAAAAAAAAAAAAPYHQ\n *   4: MA7QYNF7SOWQ3GLR2BGMZEHXAVIRZA4KVWLTJJFC7MGXUA74P7UJUAAAAAAAAAAAAQLQQ\n *\n * This object makes it easy to create muxed accounts from regular accounts,\n * duplicate them, get/set the underlying IDs, etc. without mucking around with\n * the raw XDR.\n *\n * Because muxed accounts are purely an off-chain convention, they all share the\n * sequence number tied to their underlying G... account. Thus, this object\n * *requires* an {@link Account} instance to be passed in, so that muxed\n * instances of an account can collectively modify the sequence number whenever\n * a muxed account is used as the source of a @{link Transaction} with {@link\n * TransactionBuilder}.\n *\n * @constructor\n *\n * @param {Account}   account - the @{link Account} instance representing the\n *                              underlying G... address\n * @param {string}    id      - a stringified uint64 value that represents the\n *                              ID of the muxed account\n *\n * @link https://developers.stellar.org/docs/glossary/muxed-accounts/\n */\nexport class MuxedAccount {\n  constructor(baseAccount, id) {\n    const accountId = baseAccount.accountId();\n    if (!StrKey.isValidDilithium2PublicKey(accountId)) {\n      throw new Error('accountId is invalid');\n    }\n\n    this.account = baseAccount;\n    this._muxedXdr = encodeMuxedAccount(accountId, id);\n    this._mAddress = encodeMuxedAccountToAddress(this._muxedXdr);\n    this._id = id;\n  }\n\n  /**\n   * Parses an M-address into a MuxedAccount object.\n   *\n   * @param  {string} mAddress    - an M-address to transform\n   * @param  {string} sequenceNum - the sequence number of the underlying {@link\n   *     Account}, to use for the underlying base account (@link\n   *     MuxedAccount.baseAccount). If you're using the SDK, you can use\n   *     `server.loadAccount` to fetch this if you don't know it.\n   *\n   * @return {MuxedAccount}\n   */\n  static fromAddress(mAddress, sequenceNum) {\n    const muxedAccount = decodeAddressToMuxedAccount(mAddress);\n    const gAddress = extractBaseAddress(mAddress);\n    const id = muxedAccount.mdilithium2().id().toString();\n\n    return new MuxedAccount(new Account(gAddress, sequenceNum), id);\n  }\n\n  /**\n   * @return {Account} the underlying account object shared among all muxed\n   *     accounts with this Stellar address\n   */\n  baseAccount() {\n    return this.account;\n  }\n\n  /**\n   * @return {string} the M-address representing this account's (G-address, ID)\n   */\n  accountId() {\n    return this._mAddress;\n  }\n\n  id() {\n    return this._id;\n  }\n\n  setId(id) {\n    if (typeof id !== 'string') {\n      throw new Error('id should be a string representing a number (uint64)');\n    }\n\n    this._muxedXdr.mdilithium2().id(xdr.Uint64.fromString(id));\n    this._mAddress = encodeMuxedAccountToAddress(this._muxedXdr);\n    this._id = id;\n    return this;\n  }\n\n  /**\n   * Accesses the underlying account's sequence number.\n   * @return {string}  strigified sequence number for the underlying account\n   */\n  sequenceNumber() {\n    return this.account.sequenceNumber();\n  }\n\n  /**\n   * Increments the underlying account's sequence number by one.\n   * @return {void}\n   */\n  incrementSequenceNumber() {\n    return this.account.incrementSequenceNumber();\n  }\n\n  /**\n   * @return {xdr.MuxedAccount} the XDR object representing this muxed account's\n   *     G-address and uint64 ID\n   */\n  toXDRObject() {\n    return this._muxedXdr;\n  }\n\n  equals(otherMuxedAccount) {\n    return this.accountId() === otherMuxedAccount.accountId();\n  }\n}\n","/**\n * Contains passphrases for common networks:\n * * `Networks.PUBLIC`: `Public Global Stellar Network ; September 2015`\n * * `Networks.TESTNET`: `Test SDF Network ; September 2015`\n * * `Networks.FUTURENET`: `Test SDF Future Network ; October 2022`\n * * `Networks.STANDALONE`: `Standalone Network ; February 2017`\n *\n * @type {{PUBLIC: string, TESTNET: string, FUTURENET: string, STANDALONE: string }}\n */\nexport const Networks = {\n  PUBLIC: 'Public Global Stellar Network ; September 2015',\n  TESTNET: 'Test SDF Network ; September 2015',\n  FUTURENET: 'Test SDF Future Network ; October 2022',\n  SANDBOX: 'Local Sandbox Stellar Network ; September 2022',\n  STANDALONE: 'Standalone Network ; February 2017'\n};\n","import { XdrLargeInt } from './xdr_large_int';\n\nexport { Uint128 } from './uint128';\nexport { Uint256 } from './uint256';\nexport { Int128 } from './int128';\nexport { Int256 } from './int256';\nexport { ScInt } from './sc_int';\nexport { XdrLargeInt };\n\n/**\n * Transforms an opaque {@link xdr.ScVal} into a native bigint, if possible.\n *\n * If you then want to use this in the abstractions provided by this module,\n * you can pass it to the constructor of {@link XdrLargeInt}.\n *\n * @example\n * let scv = contract.call(\"add\", x, y); // assume it returns an xdr.ScVal\n * let bigi = scValToBigInt(scv);\n *\n * new ScInt(bigi);               // if you don't care about types, and\n * new XdrLargeInt('i128', bigi); // if you do\n *\n * @param {xdr.ScVal} scv - the raw XDR value to parse into an integer\n * @returns {bigint} the native value of this input value\n *\n * @throws {TypeError} if the `scv` input value doesn't represent an integer\n */\nexport function scValToBigInt(scv) {\n  const scIntType = XdrLargeInt.getType(scv.switch().name);\n\n  switch (scv.switch().name) {\n    case 'scvU32':\n    case 'scvI32':\n      return BigInt(scv.value());\n\n    case 'scvU64':\n    case 'scvI64':\n      return new XdrLargeInt(scIntType, scv.value()).toBigInt();\n\n    case 'scvU128':\n    case 'scvI128':\n      return new XdrLargeInt(scIntType, [\n        scv.value().lo(),\n        scv.value().hi()\n      ]).toBigInt();\n\n    case 'scvU256':\n    case 'scvI256':\n      return new XdrLargeInt(scIntType, [\n        scv.value().loLo(),\n        scv.value().loHi(),\n        scv.value().hiLo(),\n        scv.value().hiHi()\n      ]).toBigInt();\n\n    default:\n      throw TypeError(`expected integer type, got ${scv.switch()}`);\n  }\n}\n","import { LargeInt } from '@stellar/js-xdr';\n\nexport class Int128 extends LargeInt {\n  /**\n   * Construct a signed 128-bit integer that can be XDR-encoded.\n   *\n   * @param  {Array<number|bigint|string>}  args - one or more slices to encode\n   *     in big-endian format (i.e. earlier elements are higher bits)\n   */\n  constructor(...args) {\n    super(args);\n  }\n\n  get unsigned() {\n    return false;\n  }\n\n  get size() {\n    return 128;\n  }\n}\n\nInt128.defineIntBoundaries();\n","import { LargeInt } from '@stellar/js-xdr';\n\nexport class Int256 extends LargeInt {\n  /**\n   * Construct a signed 256-bit integer that can be XDR-encoded.\n   *\n   * @param  {Array<number|bigint|string>}  args - one or more slices to encode\n   *     in big-endian format (i.e. earlier elements are higher bits)\n   */\n  constructor(...args) {\n    super(args);\n  }\n\n  get unsigned() {\n    return false;\n  }\n\n  get size() {\n    return 256;\n  }\n}\n\nInt256.defineIntBoundaries();\n","import { XdrLargeInt } from './xdr_large_int';\n\n/**\n * Provides an easier way to manipulate large numbers for Stellar operations.\n *\n * You can instantiate this \"**s**mart **c**ontract integer\" value either from\n * bigints, strings, or numbers (whole numbers, or this will throw).\n *\n * If you need to create a native BigInt from a list of integer \"parts\" (for\n * example, you have a series of encoded 32-bit integers that represent a larger\n * value), you can use the lower level abstraction {@link XdrLargeInt}. For\n * example, you could do `new XdrLargeInt('u128', bytes...).toBigInt()`.\n *\n * @example\n * import { xdr, ScInt, scValToBigInt } from \"@stellar/stellar-base\";\n *\n * // You have an ScVal from a contract and want to parse it into JS native.\n * const value = xdr.ScVal.fromXDR(someXdr, \"base64\");\n * const bigi = scValToBigInt(value); // grab it as a BigInt\n * let sci = new ScInt(bigi);\n *\n * sci.toNumber(); // gives native JS type (w/ size check)\n * sci.toBigInt(); // gives the native BigInt value\n * sci.toU64();    // gives ScValType-specific XDR constructs (with size checks)\n *\n * // You have a number and want to shove it into a contract.\n * sci = ScInt(0xdeadcafebabe);\n * sci.toBigInt() // returns 244838016400062n\n * sci.toNumber() // throws: too large\n *\n * // Pass any to e.g. a Contract.call(), conversion happens automatically\n * // regardless of the initial type.\n * const scValU128 = sci.toU128();\n * const scValI256 = sci.toI256();\n * const scValU64  = sci.toU64();\n *\n * // Lots of ways to initialize:\n * ScInt(\"123456789123456789\")\n * ScInt(123456789123456789n);\n * ScInt(1n << 140n);\n * ScInt(-42);\n * ScInt(scValToBigInt(scValU128)); // from above\n *\n * // If you know the type ahead of time (accessing `.raw` is faster than\n * // conversions), you can specify the type directly (otherwise, it's\n * // interpreted from the numbers you pass in):\n * const i = ScInt(123456789n, { type: \"u256\" });\n *\n * // For example, you can use the underlying `sdk.U256` and convert it to an\n * // `xdr.ScVal` directly like so:\n * const scv = new xdr.ScVal.scvU256(i.raw);\n *\n * // Or reinterpret it as a different type (size permitting):\n * const scv = i.toI64();\n *\n * @param {number|bigint|string} value - a single, integer-like value which will\n *    be interpreted in the smallest appropriate XDR type supported by Stellar\n *    (64, 128, or 256 bit integer values). signed values are supported, though\n *    they are sanity-checked against `opts.type`. if you need 32-bit values,\n *    you can construct them directly without needing this wrapper, e.g.\n *    `xdr.ScVal.scvU32(1234)`.\n *\n * @param {object}  [opts] - an optional object controlling optional parameters\n * @param {string}  [opts.type] - force a specific data type. the type choices\n *    are: 'i64', 'u64', 'i128', 'u128', 'i256', and 'u256' (default: the\n *    smallest one that fits the `value`)\n *\n * @throws {RangeError} if the `value` is invalid (e.g. floating point), too\n *    large (i.e. exceeds a 256-bit value), or doesn't fit in the `opts.type`\n * @throws {TypeError} on missing parameters, or if the \"signedness\" of `opts`\n *    doesn't match input `value`, e.g. passing `{type: 'u64'}` yet passing -1n\n * @throws {SyntaxError} if a string `value` can't be parsed as a big integer\n */\nexport class ScInt extends XdrLargeInt {\n  constructor(value, opts) {\n    const signed = value < 0;\n    let type = opts?.type ?? '';\n    if (type.startsWith('u') && signed) {\n      throw TypeError(`specified type ${opts.type} yet negative (${value})`);\n    }\n\n    // If unspecified, we make a best guess at the type based on the bit length\n    // of the value, treating 64 as a minimum and 256 as a maximum.\n    if (type === '') {\n      type = signed ? 'i' : 'u';\n      const bitlen = nearestBigIntSize(value);\n\n      switch (bitlen) {\n        case 64:\n        case 128:\n        case 256:\n          type += bitlen.toString();\n          break;\n\n        default:\n          throw RangeError(\n            `expected 64/128/256 bits for input (${value}), got ${bitlen}`\n          );\n      }\n    }\n\n    super(type, value);\n  }\n}\n\nfunction nearestBigIntSize(bigI) {\n  // Note: Even though BigInt.toString(2) includes the negative sign for\n  // negative values (???), the following is still accurate, because the\n  // negative sign would be represented by a sign bit.\n  const bitlen = bigI.toString(2).length;\n  return [64, 128, 256].find((len) => bitlen <= len) ?? bitlen;\n}\n","import { LargeInt } from '@stellar/js-xdr';\n\nexport class Uint128 extends LargeInt {\n  /**\n   * Construct an unsigned 128-bit integer that can be XDR-encoded.\n   *\n   * @param  {Array<number|bigint|string>}  args - one or more slices to encode\n   *     in big-endian format (i.e. earlier elements are higher bits)\n   */\n  constructor(...args) {\n    super(args);\n  }\n\n  get unsigned() {\n    return true;\n  }\n\n  get size() {\n    return 128;\n  }\n}\n\nUint128.defineIntBoundaries();\n","import { LargeInt } from '@stellar/js-xdr';\n\nexport class Uint256 extends LargeInt {\n  /**\n   * Construct an unsigned 256-bit integer that can be XDR-encoded.\n   *\n   * @param  {Array<number|bigint|string>}  args - one or more slices to encode\n   *     in big-endian format (i.e. earlier elements are higher bits)\n   */\n  constructor(...args) {\n    super(args);\n  }\n\n  get unsigned() {\n    return true;\n  }\n\n  get size() {\n    return 256;\n  }\n}\n\nUint256.defineIntBoundaries();\n","/* eslint no-bitwise: [\"error\", {\"allow\": [\">>\"]}] */\nimport { Hyper, UnsignedHyper } from '@stellar/js-xdr';\n\nimport { Uint128 } from './uint128';\nimport { Uint256 } from './uint256';\nimport { Int128 } from './int128';\nimport { Int256 } from './int256';\n\nimport xdr from '../xdr';\n\n/**\n * A wrapper class to represent large XDR-encodable integers.\n *\n * This operates at a lower level than {@link ScInt} by forcing you to specify\n * the type / width / size in bits of the integer you're targeting, regardless\n * of the input value(s) you provide.\n *\n * @param {string}  type - force a specific data type. the type choices are:\n *    'i64', 'u64', 'i128', 'u128', 'i256', and 'u256' (default: the smallest\n *    one that fits the `value`) (see {@link XdrLargeInt.isType})\n * @param {number|bigint|string|Array<number|bigint|string>} values   a list of\n *    integer-like values interpreted in big-endian order\n */\nexport class XdrLargeInt {\n  /** @type {xdr.LargeInt} */\n  int; // child class of a jsXdr.LargeInt\n\n  /** @type {string} */\n  type;\n\n  constructor(type, values) {\n    if (!(values instanceof Array)) {\n      values = [values];\n    }\n\n    // normalize values to one type\n    values = values.map((i) => {\n      // micro-optimization to no-op on the likeliest input value:\n      if (typeof i === 'bigint') {\n        return i;\n      }\n      if (i instanceof XdrLargeInt) {\n        return i.toBigInt();\n      }\n      return BigInt(i);\n    });\n\n    switch (type) {\n      case 'i64':\n        this.int = new Hyper(values);\n        break;\n      case 'i128':\n        this.int = new Int128(values);\n        break;\n      case 'i256':\n        this.int = new Int256(values);\n        break;\n      case 'u64':\n        this.int = new UnsignedHyper(values);\n        break;\n      case 'u128':\n        this.int = new Uint128(values);\n        break;\n      case 'u256':\n        this.int = new Uint256(values);\n        break;\n      default:\n        throw TypeError(`invalid type: ${type}`);\n    }\n\n    this.type = type;\n  }\n\n  /**\n   * @returns {number}\n   * @throws {RangeError} if the value can't fit into a Number\n   */\n  toNumber() {\n    const bi = this.int.toBigInt();\n    if (bi > Number.MAX_SAFE_INTEGER || bi < Number.MIN_SAFE_INTEGER) {\n      throw RangeError(\n        `value ${bi} not in range for Number ` +\n          `[${Number.MAX_SAFE_INTEGER}, ${Number.MIN_SAFE_INTEGER}]`\n      );\n    }\n\n    return Number(bi);\n  }\n\n  /** @returns {bigint} */\n  toBigInt() {\n    return this.int.toBigInt();\n  }\n\n  /** @returns {xdr.ScVal} the integer encoded with `ScValType = I64` */\n  toI64() {\n    this._sizeCheck(64);\n    const v = this.toBigInt();\n    if (BigInt.asIntN(64, v) !== v) {\n      throw RangeError(`value too large for i64: ${v}`);\n    }\n\n    return xdr.ScVal.scvI64(new xdr.Int64(v));\n  }\n\n  /** @returns {xdr.ScVal} the integer encoded with `ScValType = U64` */\n  toU64() {\n    this._sizeCheck(64);\n    return xdr.ScVal.scvU64(\n      new xdr.Uint64(BigInt.asUintN(64, this.toBigInt())) // reiterpret as unsigned\n    );\n  }\n\n  /**\n   * @returns {xdr.ScVal} the integer encoded with `ScValType = I128`\n   * @throws {RangeError} if the value cannot fit in 128 bits\n   */\n  toI128() {\n    this._sizeCheck(128);\n\n    const v = this.int.toBigInt();\n    const hi64 = BigInt.asIntN(64, v >> 64n); // encode top 64 w/ sign bit\n    const lo64 = BigInt.asUintN(64, v); // grab btm 64, encode sign\n\n    return xdr.ScVal.scvI128(\n      new xdr.Int128Parts({\n        hi: new xdr.Int64(hi64),\n        lo: new xdr.Uint64(lo64)\n      })\n    );\n  }\n\n  /**\n   * @returns {xdr.ScVal} the integer encoded with `ScValType = U128`\n   * @throws {RangeError} if the value cannot fit in 128 bits\n   */\n  toU128() {\n    this._sizeCheck(128);\n    const v = this.int.toBigInt();\n\n    return xdr.ScVal.scvU128(\n      new xdr.UInt128Parts({\n        hi: new xdr.Uint64(BigInt.asUintN(64, v >> 64n)),\n        lo: new xdr.Uint64(BigInt.asUintN(64, v))\n      })\n    );\n  }\n\n  /** @returns {xdr.ScVal} the integer encoded with `ScValType = I256` */\n  toI256() {\n    const v = this.int.toBigInt();\n    const hiHi64 = BigInt.asIntN(64, v >> 192n); // keep sign bit\n    const hiLo64 = BigInt.asUintN(64, v >> 128n);\n    const loHi64 = BigInt.asUintN(64, v >> 64n);\n    const loLo64 = BigInt.asUintN(64, v);\n\n    return xdr.ScVal.scvI256(\n      new xdr.Int256Parts({\n        hiHi: new xdr.Int64(hiHi64),\n        hiLo: new xdr.Uint64(hiLo64),\n        loHi: new xdr.Uint64(loHi64),\n        loLo: new xdr.Uint64(loLo64)\n      })\n    );\n  }\n\n  /** @returns {xdr.ScVal} the integer encoded with `ScValType = U256` */\n  toU256() {\n    const v = this.int.toBigInt();\n    const hiHi64 = BigInt.asUintN(64, v >> 192n); // encode sign bit\n    const hiLo64 = BigInt.asUintN(64, v >> 128n);\n    const loHi64 = BigInt.asUintN(64, v >> 64n);\n    const loLo64 = BigInt.asUintN(64, v);\n\n    return xdr.ScVal.scvU256(\n      new xdr.UInt256Parts({\n        hiHi: new xdr.Uint64(hiHi64),\n        hiLo: new xdr.Uint64(hiLo64),\n        loHi: new xdr.Uint64(loHi64),\n        loLo: new xdr.Uint64(loLo64)\n      })\n    );\n  }\n\n  /** @returns {xdr.ScVal} the smallest interpretation of the stored value */\n  toScVal() {\n    switch (this.type) {\n      case 'i64':\n        return this.toI64();\n      case 'i128':\n        return this.toI128();\n      case 'i256':\n        return this.toI256();\n      case 'u64':\n        return this.toU64();\n      case 'u128':\n        return this.toU128();\n      case 'u256':\n        return this.toU256();\n      default:\n        throw TypeError(`invalid type: ${this.type}`);\n    }\n  }\n\n  valueOf() {\n    return this.int.valueOf();\n  }\n\n  toString() {\n    return this.int.toString();\n  }\n\n  toJSON() {\n    return {\n      value: this.toBigInt().toString(),\n      type: this.type\n    };\n  }\n\n  _sizeCheck(bits) {\n    if (this.int.size > bits) {\n      throw RangeError(`value too large for ${bits} bits (${this.type})`);\n    }\n  }\n\n  static isType(type) {\n    switch (type) {\n      case 'i64':\n      case 'i128':\n      case 'i256':\n      case 'u64':\n      case 'u128':\n      case 'u256':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Convert the raw `ScValType` string (e.g. 'scvI128', generated by the XDR)\n   * to a type description for {@link XdrLargeInt} construction (e.g. 'i128')\n   *\n   * @param {string} scvType  the `xdr.ScValType` as a string\n   * @returns {string} a suitable equivalent type to construct this object\n   */\n  static getType(scvType) {\n    return scvType.slice(3).toLowerCase();\n  }\n}\n","/* eslint-disable no-bitwise */\n\nimport { Hyper } from '@stellar/js-xdr';\nimport BigNumber from './util/bignumber';\nimport { trimEnd } from './util/util';\nimport { best_r } from './util/continued_fraction';\nimport { Asset } from './asset';\nimport { LiquidityPoolAsset } from './liquidity_pool_asset';\nimport { Claimant } from './claimant';\nimport { StrKey } from './strkey';\nimport { LiquidityPoolId } from './liquidity_pool_id';\nimport xdr from './xdr';\nimport * as ops from './operations';\nimport {\n  decodeAddressToMuxedAccount,\n  encodeMuxedAccountToAddress\n} from './util/decode_encode_muxed_account';\n\nconst ONE = 10000000;\nconst MAX_INT64 = '9223372036854775807';\n\n/**\n * When set using `{@link Operation.setOptions}` option, requires the issuing\n * account to give other accounts permission before they can hold the issuing\n * account’s credit.\n *\n * @constant\n * @see [Account flags](https://developers.stellar.org/docs/glossary/accounts/#flags)\n */\nexport const AuthRequiredFlag = 1 << 0;\n/**\n * When set using `{@link Operation.setOptions}` option, allows the issuing\n * account to revoke its credit held by other accounts.\n *\n * @constant\n * @see [Account flags](https://developers.stellar.org/docs/glossary/accounts/#flags)\n */\nexport const AuthRevocableFlag = 1 << 1;\n/**\n * When set using `{@link Operation.setOptions}` option, then none of the\n * authorization flags can be set and the account can never be deleted.\n *\n * @constant\n * @see [Account flags](https://developers.stellar.org/docs/glossary/accounts/#flags)\n */\nexport const AuthImmutableFlag = 1 << 2;\n\n/**\n * When set using `{@link Operation.setOptions}` option, then any trustlines\n * created by this account can have a ClawbackOp operation submitted for the\n * corresponding asset.\n *\n * @constant\n * @see [Account flags](https://developers.stellar.org/docs/glossary/accounts/#flags)\n */\nexport const AuthClawbackEnabledFlag = 1 << 3;\n\n/**\n * `Operation` class represents\n * [operations](https://developers.stellar.org/docs/glossary/operations/) in\n * Stellar network.\n *\n * Use one of static methods to create operations:\n * * `{@link Operation.createAccount}`\n * * `{@link Operation.payment}`\n * * `{@link Operation.pathPaymentStrictReceive}`\n * * `{@link Operation.pathPaymentStrictSend}`\n * * `{@link Operation.manageSellOffer}`\n * * `{@link Operation.manageBuyOffer}`\n * * `{@link Operation.createPassiveSellOffer}`\n * * `{@link Operation.setOptions}`\n * * `{@link Operation.changeTrust}`\n * * `{@link Operation.allowTrust}`\n * * `{@link Operation.accountMerge}`\n * * `{@link Operation.inflation}`\n * * `{@link Operation.manageData}`\n * * `{@link Operation.bumpSequence}`\n * * `{@link Operation.createClaimableBalance}`\n * * `{@link Operation.claimClaimableBalance}`\n * * `{@link Operation.beginSponsoringFutureReserves}`\n * * `{@link Operation.endSponsoringFutureReserves}`\n * * `{@link Operation.revokeAccountSponsorship}`\n * * `{@link Operation.revokeTrustlineSponsorship}`\n * * `{@link Operation.revokeOfferSponsorship}`\n * * `{@link Operation.revokeDataSponsorship}`\n * * `{@link Operation.revokeClaimableBalanceSponsorship}`\n * * `{@link Operation.revokeLiquidityPoolSponsorship}`\n * * `{@link Operation.revokeSignerSponsorship}`\n * * `{@link Operation.clawback}`\n * * `{@link Operation.clawbackClaimableBalance}`\n * * `{@link Operation.setTrustLineFlags}`\n * * `{@link Operation.liquidityPoolDeposit}`\n * * `{@link Operation.liquidityPoolWithdraw}`\n * * `{@link Operation.invokeHostFunction}`\n * * `{@link Operation.extendFootprintTtlOp}`\n * * `{@link Operation.restoreFootprint}`\n *\n * @class Operation\n */\nexport class Operation {\n  static setSourceAccount(opAttributes, opts) {\n    if (opts.source) {\n      try {\n        opAttributes.sourceAccount = decodeAddressToMuxedAccount(opts.source);\n      } catch (e) {\n        throw new Error('Source address is invalid');\n      }\n    }\n  }\n\n  /**\n   * Deconstructs the raw XDR operation object into the structured object that\n   * was used to create the operation (i.e. the `opts` parameter to most ops).\n   *\n   * @param {xdr.Operation}   operation - An XDR Operation.\n   * @return {Operation}\n   */\n  static fromXDRObject(operation) {\n    const result = {};\n    if (operation.sourceAccount()) {\n      result.source = encodeMuxedAccountToAddress(operation.sourceAccount());\n    }\n\n    const attrs = operation.body().value();\n    const operationName = operation.body().switch().name;\n\n    switch (operationName) {\n      case 'createAccount': {\n        result.type = 'createAccount';\n        result.destination = accountIdtoAddress(attrs.destination());\n        result.startingBalance = this._fromXDRAmount(attrs.startingBalance());\n        break;\n      }\n      case 'payment': {\n        result.type = 'payment';\n        result.destination = encodeMuxedAccountToAddress(attrs.destination());\n        result.asset = Asset.fromOperation(attrs.asset());\n        result.amount = this._fromXDRAmount(attrs.amount());\n        break;\n      }\n      case 'pathPaymentStrictReceive': {\n        result.type = 'pathPaymentStrictReceive';\n        result.sendAsset = Asset.fromOperation(attrs.sendAsset());\n        result.sendMax = this._fromXDRAmount(attrs.sendMax());\n        result.destination = encodeMuxedAccountToAddress(attrs.destination());\n        result.destAsset = Asset.fromOperation(attrs.destAsset());\n        result.destAmount = this._fromXDRAmount(attrs.destAmount());\n        result.path = [];\n\n        const path = attrs.path();\n\n        // note that Object.values isn't supported by node 6!\n        Object.keys(path).forEach((pathKey) => {\n          result.path.push(Asset.fromOperation(path[pathKey]));\n        });\n        break;\n      }\n      case 'pathPaymentStrictSend': {\n        result.type = 'pathPaymentStrictSend';\n        result.sendAsset = Asset.fromOperation(attrs.sendAsset());\n        result.sendAmount = this._fromXDRAmount(attrs.sendAmount());\n        result.destination = encodeMuxedAccountToAddress(attrs.destination());\n        result.destAsset = Asset.fromOperation(attrs.destAsset());\n        result.destMin = this._fromXDRAmount(attrs.destMin());\n        result.path = [];\n\n        const path = attrs.path();\n\n        // note that Object.values isn't supported by node 6!\n        Object.keys(path).forEach((pathKey) => {\n          result.path.push(Asset.fromOperation(path[pathKey]));\n        });\n        break;\n      }\n      case 'changeTrust': {\n        result.type = 'changeTrust';\n        switch (attrs.line().switch()) {\n          case xdr.AssetType.assetTypePoolShare():\n            result.line = LiquidityPoolAsset.fromOperation(attrs.line());\n            break;\n          default:\n            result.line = Asset.fromOperation(attrs.line());\n            break;\n        }\n        result.limit = this._fromXDRAmount(attrs.limit());\n        break;\n      }\n      case 'allowTrust': {\n        result.type = 'allowTrust';\n        result.trustor = accountIdtoAddress(attrs.trustor());\n        result.assetCode = attrs.asset().value().toString();\n        result.assetCode = trimEnd(result.assetCode, '\\0');\n        result.authorize = attrs.authorize();\n        break;\n      }\n      case 'setOptions': {\n        result.type = 'setOptions';\n        if (attrs.inflationDest()) {\n          result.inflationDest = accountIdtoAddress(attrs.inflationDest());\n        }\n\n        result.clearFlags = attrs.clearFlags();\n        result.setFlags = attrs.setFlags();\n        result.masterWeight = attrs.masterWeight();\n        result.lowThreshold = attrs.lowThreshold();\n        result.medThreshold = attrs.medThreshold();\n        result.highThreshold = attrs.highThreshold();\n        // home_domain is checked by iscntrl in stellar-core\n        result.homeDomain =\n          attrs.homeDomain() !== undefined\n            ? attrs.homeDomain().toString('ascii')\n            : undefined;\n\n        if (attrs.signer()) {\n          const signer = {};\n          const arm = attrs.signer().key().arm();\n          if (arm === 'dilithium2') {\n            signer.dilithium2PublicKey = accountIdtoAddress(attrs.signer().key());\n          } else if (arm === 'preAuthTx') {\n            signer.preAuthTx = attrs.signer().key().preAuthTx();\n          } else if (arm === 'hashX') {\n            signer.sha256Hash = attrs.signer().key().hashX();\n          } else if (arm === 'dilithium2SignedPayload') {\n            const signedPayload = attrs.signer().key().dilithium2SignedPayload();\n            signer.dilithium2SignedPayload = StrKey.encodeSignedPayload(\n              signedPayload.toXDR()\n            );\n          }\n\n          signer.weight = attrs.signer().weight();\n          result.signer = signer;\n        }\n        break;\n      }\n      // the next case intentionally falls through!\n      case 'manageOffer':\n      case 'manageSellOffer': {\n        result.type = 'manageSellOffer';\n        result.selling = Asset.fromOperation(attrs.selling());\n        result.buying = Asset.fromOperation(attrs.buying());\n        result.amount = this._fromXDRAmount(attrs.amount());\n        result.price = this._fromXDRPrice(attrs.price());\n        result.offerId = attrs.offerId().toString();\n        break;\n      }\n      case 'manageBuyOffer': {\n        result.type = 'manageBuyOffer';\n        result.selling = Asset.fromOperation(attrs.selling());\n        result.buying = Asset.fromOperation(attrs.buying());\n        result.buyAmount = this._fromXDRAmount(attrs.buyAmount());\n        result.price = this._fromXDRPrice(attrs.price());\n        result.offerId = attrs.offerId().toString();\n        break;\n      }\n      // the next case intentionally falls through!\n      case 'createPassiveOffer':\n      case 'createPassiveSellOffer': {\n        result.type = 'createPassiveSellOffer';\n        result.selling = Asset.fromOperation(attrs.selling());\n        result.buying = Asset.fromOperation(attrs.buying());\n        result.amount = this._fromXDRAmount(attrs.amount());\n        result.price = this._fromXDRPrice(attrs.price());\n        break;\n      }\n      case 'accountMerge': {\n        result.type = 'accountMerge';\n        result.destination = encodeMuxedAccountToAddress(attrs);\n        break;\n      }\n      case 'manageData': {\n        result.type = 'manageData';\n        // manage_data.name is checked by iscntrl in stellar-core\n        result.name = attrs.dataName().toString('ascii');\n        result.value = attrs.dataValue();\n        break;\n      }\n      case 'inflation': {\n        result.type = 'inflation';\n        break;\n      }\n      case 'bumpSequence': {\n        result.type = 'bumpSequence';\n        result.bumpTo = attrs.bumpTo().toString();\n        break;\n      }\n      case 'createClaimableBalance': {\n        result.type = 'createClaimableBalance';\n        result.asset = Asset.fromOperation(attrs.asset());\n        result.amount = this._fromXDRAmount(attrs.amount());\n        result.claimants = [];\n        attrs.claimants().forEach((claimant) => {\n          result.claimants.push(Claimant.fromXDR(claimant));\n        });\n        break;\n      }\n      case 'claimClaimableBalance': {\n        result.type = 'claimClaimableBalance';\n        result.balanceId = attrs.toXDR('hex');\n        break;\n      }\n      case 'beginSponsoringFutureReserves': {\n        result.type = 'beginSponsoringFutureReserves';\n        result.sponsoredId = accountIdtoAddress(attrs.sponsoredId());\n        break;\n      }\n      case 'endSponsoringFutureReserves': {\n        result.type = 'endSponsoringFutureReserves';\n        break;\n      }\n      case 'revokeSponsorship': {\n        extractRevokeSponshipDetails(attrs, result);\n        break;\n      }\n      case 'clawback': {\n        result.type = 'clawback';\n        result.amount = this._fromXDRAmount(attrs.amount());\n        result.from = encodeMuxedAccountToAddress(attrs.from());\n        result.asset = Asset.fromOperation(attrs.asset());\n        break;\n      }\n      case 'clawbackClaimableBalance': {\n        result.type = 'clawbackClaimableBalance';\n        result.balanceId = attrs.toXDR('hex');\n        break;\n      }\n      case 'setTrustLineFlags': {\n        result.type = 'setTrustLineFlags';\n        result.asset = Asset.fromOperation(attrs.asset());\n        result.trustor = accountIdtoAddress(attrs.trustor());\n\n        // Convert from the integer-bitwised flag into a sensible object that\n        // indicates true/false for each flag that's on/off.\n        const clears = attrs.clearFlags();\n        const sets = attrs.setFlags();\n\n        const mapping = {\n          authorized: xdr.TrustLineFlags.authorizedFlag(),\n          authorizedToMaintainLiabilities:\n            xdr.TrustLineFlags.authorizedToMaintainLiabilitiesFlag(),\n          clawbackEnabled: xdr.TrustLineFlags.trustlineClawbackEnabledFlag()\n        };\n\n        const getFlagValue = (key) => {\n          const bit = mapping[key].value;\n          if (sets & bit) {\n            return true;\n          }\n          if (clears & bit) {\n            return false;\n          }\n          return undefined;\n        };\n\n        result.flags = {};\n        Object.keys(mapping).forEach((flagName) => {\n          result.flags[flagName] = getFlagValue(flagName);\n        });\n\n        break;\n      }\n      case 'liquidityPoolDeposit': {\n        result.type = 'liquidityPoolDeposit';\n        result.liquidityPoolId = attrs.liquidityPoolId().toString('hex');\n        result.maxAmountA = this._fromXDRAmount(attrs.maxAmountA());\n        result.maxAmountB = this._fromXDRAmount(attrs.maxAmountB());\n        result.minPrice = this._fromXDRPrice(attrs.minPrice());\n        result.maxPrice = this._fromXDRPrice(attrs.maxPrice());\n        break;\n      }\n      case 'liquidityPoolWithdraw': {\n        result.type = 'liquidityPoolWithdraw';\n        result.liquidityPoolId = attrs.liquidityPoolId().toString('hex');\n        result.amount = this._fromXDRAmount(attrs.amount());\n        result.minAmountA = this._fromXDRAmount(attrs.minAmountA());\n        result.minAmountB = this._fromXDRAmount(attrs.minAmountB());\n        break;\n      }\n      case 'invokeHostFunction': {\n        result.type = 'invokeHostFunction';\n        result.func = attrs.hostFunction();\n        result.auth = attrs.auth() ?? [];\n        break;\n      }\n      case 'extendFootprintTtl': {\n        result.type = 'extendFootprintTtl';\n        result.extendTo = attrs.extendTo();\n        break;\n      }\n      case 'restoreFootprint': {\n        result.type = 'restoreFootprint';\n        break;\n      }\n      default: {\n        throw new Error(`Unknown operation: ${operationName}`);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Validates that a given amount is possible for a Stellar asset.\n   *\n   * Specifically, this means that the amount is well, a valid number, but also\n   * that it is within the int64 range and has no more than 7 decimal levels of\n   * precision.\n   *\n   * Note that while smart contracts allow larger amounts, this is oriented\n   * towards validating the standard Stellar operations.\n   *\n   * @param {string}  value       the amount to validate\n   * @param {boolean} allowZero   optionally, whether or not zero is valid (default: no)\n   *\n   * @returns {boolean}\n   */\n  static isValidAmount(value, allowZero = false) {\n    if (typeof value !== 'string') {\n      return false;\n    }\n\n    let amount;\n    try {\n      amount = new BigNumber(value);\n    } catch (e) {\n      return false;\n    }\n\n    if (\n      // == 0\n      (!allowZero && amount.isZero()) ||\n      // < 0\n      amount.isNegative() ||\n      // > Max value\n      amount.times(ONE).gt(new BigNumber(MAX_INT64).toString()) ||\n      // Decimal places (max 7)\n      amount.decimalPlaces() > 7 ||\n      // NaN or Infinity\n      amount.isNaN() ||\n      !amount.isFinite()\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  static constructAmountRequirementsError(arg) {\n    return `${arg} argument must be of type String, represent a positive number and have at most 7 digits after the decimal`;\n  }\n\n  /**\n   * Returns value converted to uint32 value or undefined.\n   * If `value` is not `Number`, `String` or `Undefined` then throws an error.\n   * Used in {@link Operation.setOptions}.\n   * @private\n   * @param {string} name Name of the property (used in error message only)\n   * @param {*} value Value to check\n   * @param {function(value, name)} isValidFunction Function to check other constraints (the argument will be a `Number`)\n   * @returns {undefined|Number}\n   */\n  static _checkUnsignedIntValue(name, value, isValidFunction = null) {\n    if (typeof value === 'undefined') {\n      return undefined;\n    }\n\n    if (typeof value === 'string') {\n      value = parseFloat(value);\n    }\n\n    switch (true) {\n      case typeof value !== 'number' ||\n        !Number.isFinite(value) ||\n        value % 1 !== 0:\n        throw new Error(`${name} value is invalid`);\n      case value < 0:\n        throw new Error(`${name} value must be unsigned`);\n      case !isValidFunction ||\n        (isValidFunction && isValidFunction(value, name)):\n        return value;\n      default:\n        throw new Error(`${name} value is invalid`);\n    }\n  }\n  /**\n   * @private\n   * @param {string|BigNumber} value Value\n   * @returns {Hyper} XDR amount\n   */\n  static _toXDRAmount(value) {\n    const amount = new BigNumber(value).times(ONE);\n    return Hyper.fromString(amount.toString());\n  }\n\n  /**\n   * @private\n   * @param {string|BigNumber} value XDR amount\n   * @returns {BigNumber} Number\n   */\n  static _fromXDRAmount(value) {\n    return new BigNumber(value).div(ONE).toFixed(7);\n  }\n\n  /**\n   * @private\n   * @param {object} price Price object\n   * @param {function} price.n numerator function that returns a value\n   * @param {function} price.d denominator function that returns a value\n   * @returns {BigNumber} Big string\n   */\n  static _fromXDRPrice(price) {\n    const n = new BigNumber(price.n());\n    return n.div(new BigNumber(price.d())).toString();\n  }\n\n  /**\n   * @private\n   * @param {object} price Price object\n   * @param {function} price.n numerator function that returns a value\n   * @param {function} price.d denominator function that returns a value\n   * @returns {object} XDR price object\n   */\n  static _toXDRPrice(price) {\n    let xdrObject;\n    if (price.n && price.d) {\n      xdrObject = new xdr.Price(price);\n    } else {\n      const approx = best_r(price);\n      xdrObject = new xdr.Price({\n        n: parseInt(approx[0], 10),\n        d: parseInt(approx[1], 10)\n      });\n    }\n\n    if (xdrObject.n() < 0 || xdrObject.d() < 0) {\n      throw new Error('price must be positive');\n    }\n\n    return xdrObject;\n  }\n}\n\nfunction extractRevokeSponshipDetails(attrs, result) {\n  switch (attrs.switch().name) {\n    case 'revokeSponsorshipLedgerEntry': {\n      const ledgerKey = attrs.ledgerKey();\n      switch (ledgerKey.switch().name) {\n        case xdr.LedgerEntryType.account().name: {\n          result.type = 'revokeAccountSponsorship';\n          result.account = accountIdtoAddress(ledgerKey.account().accountId());\n          break;\n        }\n        case xdr.LedgerEntryType.trustline().name: {\n          result.type = 'revokeTrustlineSponsorship';\n          result.account = accountIdtoAddress(\n            ledgerKey.trustLine().accountId()\n          );\n          const xdrAsset = ledgerKey.trustLine().asset();\n          switch (xdrAsset.switch()) {\n            case xdr.AssetType.assetTypePoolShare():\n              result.asset = LiquidityPoolId.fromOperation(xdrAsset);\n              break;\n            default:\n              result.asset = Asset.fromOperation(xdrAsset);\n              break;\n          }\n          break;\n        }\n        case xdr.LedgerEntryType.offer().name: {\n          result.type = 'revokeOfferSponsorship';\n          result.seller = accountIdtoAddress(ledgerKey.offer().sellerId());\n          result.offerId = ledgerKey.offer().offerId().toString();\n          break;\n        }\n        case xdr.LedgerEntryType.data().name: {\n          result.type = 'revokeDataSponsorship';\n          result.account = accountIdtoAddress(ledgerKey.data().accountId());\n          result.name = ledgerKey.data().dataName().toString('ascii');\n          break;\n        }\n        case xdr.LedgerEntryType.claimableBalance().name: {\n          result.type = 'revokeClaimableBalanceSponsorship';\n          result.balanceId = ledgerKey\n            .claimableBalance()\n            .balanceId()\n            .toXDR('hex');\n          break;\n        }\n        case xdr.LedgerEntryType.liquidityPool().name: {\n          result.type = 'revokeLiquidityPoolSponsorship';\n          result.liquidityPoolId = ledgerKey\n            .liquidityPool()\n            .liquidityPoolId()\n            .toString('hex');\n          break;\n        }\n        default: {\n          throw new Error(`Unknown ledgerKey: ${attrs.switch().name}`);\n        }\n      }\n      break;\n    }\n    case 'revokeSponsorshipSigner': {\n      result.type = 'revokeSignerSponsorship';\n      result.account = accountIdtoAddress(attrs.signer().accountId());\n      result.signer = convertXDRSignerKeyToObject(attrs.signer().signerKey());\n      break;\n    }\n    default: {\n      throw new Error(`Unknown revokeSponsorship: ${attrs.switch().name}`);\n    }\n  }\n}\n\nfunction convertXDRSignerKeyToObject(signerKey) {\n  const attrs = {};\n  switch (signerKey.switch().name) {\n    case xdr.SignerKeyType.signerKeyTypeDilithium2().name: {\n      attrs.dilithium2PublicKey = StrKey.encodeDilithium2PublicKey(\n        signerKey.dilithium2()\n      );\n      break;\n    }\n    case xdr.SignerKeyType.signerKeyTypePreAuthTx().name: {\n      attrs.preAuthTx = signerKey.preAuthTx().toString('hex');\n      break;\n    }\n    case xdr.SignerKeyType.signerKeyTypeHashX().name: {\n      attrs.sha256Hash = signerKey.hashX().toString('hex');\n      break;\n    }\n    default: {\n      throw new Error(`Unknown signerKey: ${signerKey.switch().name}`);\n    }\n  }\n\n  return attrs;\n}\n\nfunction accountIdtoAddress(accountId) {\n  return StrKey.encodeDilithium2PublicKey(accountId.dilithium2());\n}\n\n// Attach all imported operations as static methods on the Operation class\nOperation.accountMerge = ops.accountMerge;\nOperation.allowTrust = ops.allowTrust;\nOperation.bumpSequence = ops.bumpSequence;\nOperation.changeTrust = ops.changeTrust;\nOperation.createAccount = ops.createAccount;\nOperation.createClaimableBalance = ops.createClaimableBalance;\nOperation.claimClaimableBalance = ops.claimClaimableBalance;\nOperation.clawbackClaimableBalance = ops.clawbackClaimableBalance;\nOperation.createPassiveSellOffer = ops.createPassiveSellOffer;\nOperation.inflation = ops.inflation;\nOperation.manageData = ops.manageData;\nOperation.manageSellOffer = ops.manageSellOffer;\nOperation.manageBuyOffer = ops.manageBuyOffer;\nOperation.pathPaymentStrictReceive = ops.pathPaymentStrictReceive;\nOperation.pathPaymentStrictSend = ops.pathPaymentStrictSend;\nOperation.payment = ops.payment;\nOperation.setOptions = ops.setOptions;\nOperation.beginSponsoringFutureReserves = ops.beginSponsoringFutureReserves;\nOperation.endSponsoringFutureReserves = ops.endSponsoringFutureReserves;\nOperation.revokeAccountSponsorship = ops.revokeAccountSponsorship;\nOperation.revokeTrustlineSponsorship = ops.revokeTrustlineSponsorship;\nOperation.revokeOfferSponsorship = ops.revokeOfferSponsorship;\nOperation.revokeDataSponsorship = ops.revokeDataSponsorship;\nOperation.revokeClaimableBalanceSponsorship =\n  ops.revokeClaimableBalanceSponsorship;\nOperation.revokeLiquidityPoolSponsorship = ops.revokeLiquidityPoolSponsorship;\nOperation.revokeSignerSponsorship = ops.revokeSignerSponsorship;\nOperation.clawback = ops.clawback;\nOperation.setTrustLineFlags = ops.setTrustLineFlags;\nOperation.liquidityPoolDeposit = ops.liquidityPoolDeposit;\nOperation.liquidityPoolWithdraw = ops.liquidityPoolWithdraw;\nOperation.invokeHostFunction = ops.invokeHostFunction;\nOperation.extendFootprintTtl = ops.extendFootprintTtl;\nOperation.restoreFootprint = ops.restoreFootprint;\n\n// these are not `xdr.Operation`s directly, but are proxies for complex but\n// common versions of `Operation.invokeHostFunction`\nOperation.createStellarAssetContract = ops.createStellarAssetContract;\nOperation.invokeContractFunction = ops.invokeContractFunction;\nOperation.createCustomContract = ops.createCustomContract;\nOperation.uploadContractWasm = ops.uploadContractWasm;\n","import xdr from '../xdr';\nimport { decodeAddressToMuxedAccount } from '../util/decode_encode_muxed_account';\n\n/**\n * Transfers native balance to destination account.\n *\n * @function\n * @alias Operation.accountMerge\n *\n * @param {object} opts - options object\n * @param {string} opts.destination - destination to merge the source account into\n * @param {string} [opts.source]    - operation source account (defaults to\n *     transaction source)\n *\n * @returns {xdr.Operation} an Account Merge operation (xdr.AccountMergeOp)\n */\nexport function accountMerge(opts) {\n  const opAttributes = {};\n  try {\n    opAttributes.body = xdr.OperationBody.accountMerge(\n      decodeAddressToMuxedAccount(opts.destination)\n    );\n  } catch (e) {\n    throw new Error('destination is invalid');\n  }\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\nimport { Keypair } from '../keypair';\nimport { StrKey } from '../strkey';\n\n/**\n * @deprecated since v5.0\n *\n * Returns an XDR AllowTrustOp. An \"allow trust\" operation authorizes another\n * account to hold your account's credit for a given asset.\n *\n * @function\n * @alias Operation.allowTrust\n *\n * @param {object} opts Options object\n * @param {string} opts.trustor - The trusting account (the one being authorized)\n * @param {string} opts.assetCode - The asset code being authorized.\n * @param {(0|1|2)} opts.authorize - `1` to authorize, `2` to authorize to maintain liabilities, and `0` to deauthorize.\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n *\n * @returns {xdr.AllowTrustOp} Allow Trust operation\n */\nexport function allowTrust(opts) {\n  if (!StrKey.isValidDilithium2PublicKey(opts.trustor)) {\n    throw new Error('trustor is invalid');\n  }\n  const attributes = {};\n  attributes.trustor = Keypair.fromPublicKey(opts.trustor).xdrAccountId();\n  if (opts.assetCode.length <= 4) {\n    const code = opts.assetCode.padEnd(4, '\\0');\n    attributes.asset = xdr.AssetCode.assetTypeCreditAlphanum4(code);\n  } else if (opts.assetCode.length <= 12) {\n    const code = opts.assetCode.padEnd(12, '\\0');\n    attributes.asset = xdr.AssetCode.assetTypeCreditAlphanum12(code);\n  } else {\n    throw new Error('Asset code must be 12 characters at max.');\n  }\n\n  if (typeof opts.authorize === 'boolean') {\n    if (opts.authorize) {\n      attributes.authorize = xdr.TrustLineFlags.authorizedFlag().value;\n    } else {\n      attributes.authorize = 0;\n    }\n  } else {\n    attributes.authorize = opts.authorize;\n  }\n\n  const allowTrustOp = new xdr.AllowTrustOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.allowTrust(allowTrustOp);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\nimport { StrKey } from '../strkey';\nimport { Keypair } from '../keypair';\n\n/**\n * Create a \"begin sponsoring future reserves\" operation.\n * @function\n * @alias Operation.beginSponsoringFutureReserves\n * @param {object} opts Options object\n * @param {string} opts.sponsoredId - The sponsored account id.\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n * @returns {xdr.Operation} xdr operation\n *\n * @example\n * const op = Operation.beginSponsoringFutureReserves({\n *   sponsoredId: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7'\n * });\n *\n */\nexport function beginSponsoringFutureReserves(opts = {}) {\n  if (!StrKey.isValidDilithium2PublicKey(opts.sponsoredId)) {\n    throw new Error('sponsoredId is invalid');\n  }\n  const op = new xdr.BeginSponsoringFutureReservesOp({\n    sponsoredId: Keypair.fromPublicKey(opts.sponsoredId).xdrAccountId()\n  });\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.beginSponsoringFutureReserves(op);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import { Hyper } from '@stellar/js-xdr';\nimport BigNumber from '../util/bignumber';\nimport xdr from '../xdr';\n\n/**\n * This operation bumps sequence number.\n * @function\n * @alias Operation.bumpSequence\n * @param {object} opts Options object\n * @param {string} opts.bumpTo - Sequence number to bump to.\n * @param {string} [opts.source] - The optional source account.\n * @returns {xdr.BumpSequenceOp} Operation\n */\nexport function bumpSequence(opts) {\n  const attributes = {};\n\n  if (typeof opts.bumpTo !== 'string') {\n    throw new Error('bumpTo must be a string');\n  }\n\n  try {\n    // eslint-disable-next-line no-new\n    new BigNumber(opts.bumpTo);\n  } catch (e) {\n    throw new Error('bumpTo must be a stringified number');\n  }\n\n  attributes.bumpTo = Hyper.fromString(opts.bumpTo);\n\n  const bumpSequenceOp = new xdr.BumpSequenceOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.bumpSequence(bumpSequenceOp);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import { Hyper } from '@stellar/js-xdr';\nimport BigNumber from '../util/bignumber';\nimport xdr from '../xdr';\nimport { Asset } from '../asset';\nimport { LiquidityPoolAsset } from '../liquidity_pool_asset';\n\nconst MAX_INT64 = '9223372036854775807';\n\n/**\n * Returns an XDR ChangeTrustOp. A \"change trust\" operation adds, removes, or updates a\n * trust line for a given asset from the source account to another.\n * @function\n * @alias Operation.changeTrust\n * @param {object} opts Options object\n * @param {Asset | LiquidityPoolAsset} opts.asset - The asset for the trust line.\n * @param {string} [opts.limit] - The limit for the asset, defaults to max int64.\n *                                If the limit is set to \"0\" it deletes the trustline.\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n * @returns {xdr.ChangeTrustOp} Change Trust operation\n */\nexport function changeTrust(opts) {\n  const attributes = {};\n\n  if (opts.asset instanceof Asset) {\n    attributes.line = opts.asset.toChangeTrustXDRObject();\n  } else if (opts.asset instanceof LiquidityPoolAsset) {\n    attributes.line = opts.asset.toXDRObject();\n  } else {\n    throw new TypeError('asset must be Asset or LiquidityPoolAsset');\n  }\n\n  if (opts.limit !== undefined && !this.isValidAmount(opts.limit, true)) {\n    throw new TypeError(this.constructAmountRequirementsError('limit'));\n  }\n\n  if (opts.limit) {\n    attributes.limit = this._toXDRAmount(opts.limit);\n  } else {\n    attributes.limit = Hyper.fromString(new BigNumber(MAX_INT64).toString());\n  }\n\n  if (opts.source) {\n    attributes.source = opts.source.masterKeypair;\n  }\n  const changeTrustOP = new xdr.ChangeTrustOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.changeTrust(changeTrustOP);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\n\n/**\n * Create a new claim claimable balance operation.\n * @function\n * @alias Operation.claimClaimableBalance\n * @param {object} opts Options object\n * @param {string} opts.balanceId - The claimable balance id to be claimed.\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n * @returns {xdr.Operation} Claim claimable balance operation\n *\n * @example\n * const op = Operation.claimClaimableBalance({\n *   balanceId: '00000000da0d57da7d4850e7fc10d2a9d0ebc731f7afb40574c03395b17d49149b91f5be',\n * });\n *\n */\nexport function claimClaimableBalance(opts = {}) {\n  validateClaimableBalanceId(opts.balanceId);\n\n  const attributes = {};\n  attributes.balanceId = xdr.ClaimableBalanceId.fromXDR(opts.balanceId, 'hex');\n  const claimClaimableBalanceOp = new xdr.ClaimClaimableBalanceOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.claimClaimableBalance(\n    claimClaimableBalanceOp\n  );\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n\nexport function validateClaimableBalanceId(balanceId) {\n  if (\n    typeof balanceId !== 'string' ||\n    balanceId.length !== 8 + 64 /* 8b discriminant + 64b string */\n  ) {\n    throw new Error('must provide a valid claimable balance id');\n  }\n}\n","import xdr from '../xdr';\nimport { decodeAddressToMuxedAccount } from '../util/decode_encode_muxed_account';\n\n/**\n * Creates a clawback operation.\n *\n * @function\n * @alias Operation.clawback\n *\n * @param {object} opts - Options object\n * @param {Asset}  opts.asset   - The asset being clawed back.\n * @param {string} opts.amount  - The amount of the asset to claw back.\n * @param {string} opts.from    - The public key of the (optionally-muxed)\n *     account to claw back from.\n *\n * @param {string} [opts.source] - The source account for the operation.\n *     Defaults to the transaction's source account.\n *\n * @return {xdr.ClawbackOp}\n *\n * @see https://github.com/stellar/stellar-protocol/blob/master/core/cap-0035.md#clawback-operation\n */\nexport function clawback(opts) {\n  const attributes = {};\n  if (!this.isValidAmount(opts.amount)) {\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\n  }\n  attributes.amount = this._toXDRAmount(opts.amount);\n  attributes.asset = opts.asset.toXDRObject();\n  try {\n    attributes.from = decodeAddressToMuxedAccount(opts.from);\n  } catch (e) {\n    throw new Error('from address is invalid');\n  }\n\n  const opAttributes = {\n    body: xdr.OperationBody.clawback(new xdr.ClawbackOp(attributes))\n  };\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\nimport { validateClaimableBalanceId } from './claim_claimable_balance';\n\n/**\n * Creates a clawback operation for a claimable balance.\n *\n * @function\n * @alias Operation.clawbackClaimableBalance\n * @param {object} opts - Options object\n * @param {string} opts.balanceId - The claimable balance ID to be clawed back.\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n *\n * @return {xdr.ClawbackClaimableBalanceOp}\n *\n * @example\n * const op = Operation.clawbackClaimableBalance({\n *   balanceId: '00000000da0d57da7d4850e7fc10d2a9d0ebc731f7afb40574c03395b17d49149b91f5be',\n * });\n *\n * @link https://github.com/stellar/stellar-protocol/blob/master/core/cap-0035.md#clawback-claimable-balance-operation\n */\nexport function clawbackClaimableBalance(opts = {}) {\n  validateClaimableBalanceId(opts.balanceId);\n\n  const attributes = {\n    balanceId: xdr.ClaimableBalanceId.fromXDR(opts.balanceId, 'hex')\n  };\n\n  const opAttributes = {\n    body: xdr.OperationBody.clawbackClaimableBalance(\n      new xdr.ClawbackClaimableBalanceOp(attributes)\n    )\n  };\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\nimport { Keypair } from '../keypair';\nimport { StrKey } from '../strkey';\n\n/**\n * Create and fund a non existent account.\n * @function\n * @alias Operation.createAccount\n * @param {object} opts Options object\n * @param {string} opts.destination - Destination account ID to create an account for.\n * @param {string} opts.startingBalance - Amount in XLM the account should be funded for. Must be greater\n *                                   than the [reserve balance amount](https://developers.stellar.org/docs/glossary/fees/).\n * @param {string} [opts.source] - The source account for the payment. Defaults to the transaction's source account.\n * @returns {xdr.CreateAccountOp} Create account operation\n */\nexport function createAccount(opts) {\n  if (!StrKey.isValidDilithium2PublicKey(opts.destination)) {\n    throw new Error('destination is invalid');\n  }\n  if (!this.isValidAmount(opts.startingBalance, true)) {\n    throw new TypeError(\n      this.constructAmountRequirementsError('startingBalance')\n    );\n  }\n  const attributes = {};\n  attributes.destination = Keypair.fromPublicKey(\n    opts.destination\n  ).xdrAccountId();\n  attributes.startingBalance = this._toXDRAmount(opts.startingBalance);\n  const createAccountOp = new xdr.CreateAccountOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.createAccount(createAccountOp);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\nimport { Asset } from '../asset';\n\n/**\n * Create a new claimable balance operation.\n *\n * @function\n * @alias Operation.createClaimableBalance\n *\n * @param {object} opts Options object\n * @param {Asset} opts.asset - The asset for the claimable balance.\n * @param {string} opts.amount - Amount.\n * @param {Claimant[]} opts.claimants - An array of Claimants\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n *\n * @returns {xdr.Operation} Create claimable balance operation\n *\n * @example\n * const asset = new Asset(\n *   'USD',\n *   'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7'\n * );\n * const amount = '100.0000000';\n * const claimants = [\n *   new Claimant(\n *     'GCEZWKCA5VLDNRLN3RPRJMRZOX3Z6G5CHCGSNFHEYVXM3XOJMDS674JZ',\n *      Claimant.predicateBeforeAbsoluteTime(\"4102444800000\")\n *   )\n * ];\n *\n * const op = Operation.createClaimableBalance({\n *   asset,\n *   amount,\n *   claimants\n * });\n *\n */\nexport function createClaimableBalance(opts) {\n  if (!(opts.asset instanceof Asset)) {\n    throw new Error(\n      'must provide an asset for create claimable balance operation'\n    );\n  }\n\n  if (!this.isValidAmount(opts.amount)) {\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\n  }\n\n  if (!Array.isArray(opts.claimants) || opts.claimants.length === 0) {\n    throw new Error('must provide at least one claimant');\n  }\n\n  const attributes = {};\n  attributes.asset = opts.asset.toXDRObject();\n  attributes.amount = this._toXDRAmount(opts.amount);\n  attributes.claimants = Object.values(opts.claimants).map((c) =>\n    c.toXDRObject()\n  );\n\n  const createClaimableBalanceOp = new xdr.CreateClaimableBalanceOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.createClaimableBalance(\n    createClaimableBalanceOp\n  );\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\n\n/**\n * Returns a XDR CreatePasiveSellOfferOp. A \"create passive offer\" operation creates an\n * offer that won't consume a counter offer that exactly matches this offer. This is\n * useful for offers just used as 1:1 exchanges for path payments. Use manage offer\n * to manage this offer after using this operation to create it.\n * @function\n * @alias Operation.createPassiveSellOffer\n * @param {object} opts Options object\n * @param {Asset} opts.selling - What you're selling.\n * @param {Asset} opts.buying - What you're buying.\n * @param {string} opts.amount - The total amount you're selling. If 0, deletes the offer.\n * @param {number|string|BigNumber|Object} opts.price - Price of 1 unit of `selling` in terms of `buying`.\n * @param {number} opts.price.n - If `opts.price` is an object: the price numerator\n * @param {number} opts.price.d - If `opts.price` is an object: the price denominator\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n * @throws {Error} Throws `Error` when the best rational approximation of `price` cannot be found.\n * @returns {xdr.CreatePassiveSellOfferOp} Create Passive Sell Offer operation\n */\nexport function createPassiveSellOffer(opts) {\n  const attributes = {};\n  attributes.selling = opts.selling.toXDRObject();\n  attributes.buying = opts.buying.toXDRObject();\n  if (!this.isValidAmount(opts.amount)) {\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\n  }\n  attributes.amount = this._toXDRAmount(opts.amount);\n  if (opts.price === undefined) {\n    throw new TypeError('price argument is required');\n  }\n  attributes.price = this._toXDRPrice(opts.price);\n  const createPassiveSellOfferOp = new xdr.CreatePassiveSellOfferOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.createPassiveSellOffer(\n    createPassiveSellOfferOp\n  );\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\n\n/**\n * Create an \"end sponsoring future reserves\" operation.\n * @function\n * @alias Operation.endSponsoringFutureReserves\n * @param {object} opts Options object\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n * @returns {xdr.Operation} xdr operation\n *\n * @example\n * const op = Operation.endSponsoringFutureReserves();\n *\n */\nexport function endSponsoringFutureReserves(opts = {}) {\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.endSponsoringFutureReserves();\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\n\n/**\n * Builds an operation to bump the time-to-live (TTL) of the ledger keys. The\n * keys for extension have to be provided in the read-only footprint of\n * the transaction.\n *\n * The only parameter of the operation itself is the new minimum TTL for\n * all the provided entries. If an entry already has a higher TTL, then it\n * will just be skipped.\n *\n * TTL is the number of ledgers from the current ledger (exclusive) until\n * the last ledger the entry is still considered alive (inclusive). Thus\n * the exact ledger until the entries will live will only be determined\n * when transaction has been applied.\n *\n * The footprint has to be specified in the transaction. See\n * {@link TransactionBuilder}'s `opts.sorobanData` parameter, which is a\n * {@link xdr.SorobanTransactionData} instance that contains fee data & resource\n * usage as part of {@link xdr.SorobanResources}.\n *\n * @function\n * @alias Operation.extendFootprintTtl\n *\n * @param {object} opts - object holding operation parameters\n * @param {number} opts.extendTo - the minimum TTL that all the entries in\n *    the read-only footprint will have\n * @param {string} [opts.source] - an optional source account\n *\n * @returns {xdr.Operation} an Extend Footprint TTL operation\n *    (xdr.ExtendFootprintTTLOp)\n */\nexport function extendFootprintTtl(opts) {\n  if ((opts.extendTo ?? -1) <= 0) {\n    throw new RangeError('extendTo has to be positive');\n  }\n\n  const extendFootprintOp = new xdr.ExtendFootprintTtlOp({\n    ext: new xdr.ExtensionPoint(0),\n    extendTo: opts.extendTo\n  });\n\n  const opAttributes = {\n    body: xdr.OperationBody.extendFootprintTtl(extendFootprintOp)\n  };\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","export { manageSellOffer } from './manage_sell_offer';\nexport { createPassiveSellOffer } from './create_passive_sell_offer';\nexport { accountMerge } from './account_merge';\nexport { allowTrust } from './allow_trust';\nexport { bumpSequence } from './bump_sequence';\nexport { changeTrust } from './change_trust';\nexport { createAccount } from './create_account';\nexport { createClaimableBalance } from './create_claimable_balance';\nexport { claimClaimableBalance } from './claim_claimable_balance';\nexport { clawbackClaimableBalance } from './clawback_claimable_balance';\nexport { inflation } from './inflation';\nexport { manageData } from './manage_data';\nexport { manageBuyOffer } from './manage_buy_offer';\nexport { pathPaymentStrictReceive } from './path_payment_strict_receive';\nexport { pathPaymentStrictSend } from './path_payment_strict_send';\nexport { payment } from './payment';\nexport { setOptions } from './set_options';\nexport { beginSponsoringFutureReserves } from './begin_sponsoring_future_reserves';\nexport { endSponsoringFutureReserves } from './end_sponsoring_future_reserves';\nexport {\n  revokeAccountSponsorship,\n  revokeTrustlineSponsorship,\n  revokeOfferSponsorship,\n  revokeDataSponsorship,\n  revokeClaimableBalanceSponsorship,\n  revokeLiquidityPoolSponsorship,\n  revokeSignerSponsorship\n} from './revoke_sponsorship';\nexport { clawback } from './clawback';\nexport { setTrustLineFlags } from './set_trustline_flags';\nexport { liquidityPoolDeposit } from './liquidity_pool_deposit';\nexport { liquidityPoolWithdraw } from './liquidity_pool_withdraw';\nexport {\n  invokeHostFunction,\n  invokeContractFunction,\n  createStellarAssetContract,\n  createCustomContract,\n  uploadContractWasm\n} from './invoke_host_function';\nexport { extendFootprintTtl } from './extend_footprint_ttl';\nexport { restoreFootprint } from './restore_footprint';\n","import xdr from '../xdr';\n\n/**\n * This operation generates the inflation.\n * @function\n * @alias Operation.inflation\n * @param {object} [opts] Options object\n * @param {string} [opts.source] - The optional source account.\n * @returns {xdr.InflationOp} Inflation operation\n */\nexport function inflation(opts = {}) {\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.inflation();\n  this.setSourceAccount(opAttributes, opts);\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\n\nimport { Keypair } from '../keypair';\nimport { Address } from '../address';\nimport { Asset } from '../asset';\n\n/**\n * Invokes a single smart contract host function.\n *\n * @function\n * @alias Operation.invokeHostFunction\n *\n * @param {object} opts - options object\n * @param {xdr.HostFunction} opts.func - host function to execute (with its\n *    wrapped parameters)\n * @param {xdr.SorobanAuthorizationEntry[]} [opts.auth] - list outlining the\n *    tree of authorizations required for the call\n * @param {string} [opts.source] - an optional source account\n *\n * @returns {xdr.Operation} an Invoke Host Function operation\n *    (xdr.InvokeHostFunctionOp)\n *\n * @see https://soroban.stellar.org/docs/fundamentals-and-concepts/invoking-contracts-with-transactions#function\n * @see Operation.invokeContractFunction\n * @see Operation.createCustomContract\n * @see Operation.createStellarAssetContract\n * @see Operation.uploadContractWasm\n * @see Contract.call\n */\nexport function invokeHostFunction(opts) {\n  if (!opts.func) {\n    throw new TypeError(\n      `host function invocation ('func') required (got ${JSON.stringify(opts)})`\n    );\n  }\n\n  const invokeHostFunctionOp = new xdr.InvokeHostFunctionOp({\n    hostFunction: opts.func,\n    auth: opts.auth || []\n  });\n\n  const opAttributes = {\n    body: xdr.OperationBody.invokeHostFunction(invokeHostFunctionOp)\n  };\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n\n/**\n * Returns an operation that invokes a contract function.\n *\n * @function\n * @alias Operation.invokeContractFunction\n *\n * @param {any}         opts - the set of parameters\n * @param {string}      opts.contract - a strkey-fied contract address (`C...`)\n * @param {string}      opts.function - the name of the contract fn to invoke\n * @param {xdr.ScVal[]} opts.args - parameters to pass to the function\n *    invocation (try {@link nativeToScVal} or {@link ScInt} to make building\n *    these easier)\n * @param {xdr.SorobanAuthorizationEntry[]} [opts.auth] - an optional list\n *    outlining the tree of authorizations required for the call\n * @param {string} [opts.source] - an optional source account\n *\n * @returns {xdr.Operation} an Invoke Host Function operation\n *    (xdr.InvokeHostFunctionOp)\n *\n * @see Operation.invokeHostFunction\n * @see Contract.call\n * @see Address\n */\nexport function invokeContractFunction(opts) {\n  const c = new Address(opts.contract);\n  if (c._type !== 'contract') {\n    throw new TypeError(`expected contract strkey instance, got ${c}`);\n  }\n\n  return this.invokeHostFunction({\n    source: opts.source,\n    auth: opts.auth,\n    func: xdr.HostFunction.hostFunctionTypeInvokeContract(\n      new xdr.InvokeContractArgs({\n        contractAddress: c.toScAddress(),\n        functionName: opts.function,\n        args: opts.args\n      })\n    )\n  });\n}\n\n/**\n * Returns an operation that creates a custom WASM contract.\n *\n * @function\n * @alias Operation.createCustomContract\n *\n * @param {any}     opts - the set of parameters\n * @param {Address} opts.address - the contract uploader address\n * @param {Uint8Array|Buffer}  opts.wasmHash - the SHA-256 hash of the contract\n *    WASM you're uploading (see {@link hash} and\n *    {@link Operation.uploadContractWasm})\n * @param {Uint8Array|Buffer} [opts.salt] - an optional, 32-byte salt to\n *    distinguish deployment instances of the same wasm from the same user (if\n *    omitted, one will be generated for you)\n * @param {xdr.SorobanAuthorizationEntry[]} [opts.auth] - an optional list\n *    outlining the tree of authorizations required for the call\n * @param {string} [opts.source] - an optional source account\n *\n * @returns {xdr.Operation} an Invoke Host Function operation\n *    (xdr.InvokeHostFunctionOp)\n *\n * @see\n * https://soroban.stellar.org/docs/fundamentals-and-concepts/invoking-contracts-with-transactions#function\n */\nexport function createCustomContract(opts) {\n  const salt = Buffer.from(opts.salt || getSalty());\n\n  if (!opts.wasmHash || opts.wasmHash.length !== 32) {\n    throw new TypeError(\n      `expected hash(contract WASM) in 'opts.wasmHash', got ${opts.wasmHash}`\n    );\n  }\n  if (salt.length !== 32) {\n    throw new TypeError(\n      `expected 32-byte salt in 'opts.salt', got ${opts.wasmHash}`\n    );\n  }\n\n  return this.invokeHostFunction({\n    source: opts.source,\n    auth: opts.auth,\n    func: xdr.HostFunction.hostFunctionTypeCreateContract(\n      new xdr.CreateContractArgs({\n        executable: xdr.ContractExecutable.contractExecutableWasm(\n          Buffer.from(opts.wasmHash)\n        ),\n        contractIdPreimage:\n          xdr.ContractIdPreimage.contractIdPreimageFromAddress(\n            new xdr.ContractIdPreimageFromAddress({\n              address: opts.address.toScAddress(),\n              salt\n            })\n          )\n      })\n    )\n  });\n}\n\n/**\n * Returns an operation that wraps a Stellar asset into a token contract.\n *\n * @function\n * @alias Operation.createStellarAssetContract\n *\n * @param {any}          opts - the set of parameters\n * @param {Asset|string} opts.asset - the Stellar asset to wrap, either as an\n *    {@link Asset} object or in canonical form (SEP-11, `code:issuer`)\n * @param {xdr.SorobanAuthorizationEntry[]} [opts.auth] - an optional list\n *    outlining the tree of authorizations required for the call\n * @param {string} [opts.source] - an optional source account\n *\n * @returns {xdr.Operation} an Invoke Host Function operation\n *    (xdr.InvokeHostFunctionOp)\n *\n * @see https://stellar.org/protocol/sep-11#alphanum4-alphanum12\n * @see\n * https://soroban.stellar.org/docs/fundamentals-and-concepts/invoking-contracts-with-transactions\n * @see\n * https://soroban.stellar.org/docs/advanced-tutorials/stellar-asset-contract\n * @see Operation.invokeHostFunction\n */\nexport function createStellarAssetContract(opts) {\n  let asset = opts.asset;\n  if (typeof asset === 'string') {\n    const [code, issuer] = asset.split(':');\n    asset = new Asset(code, issuer); // handles 'xlm' by default\n  }\n\n  if (!(asset instanceof Asset)) {\n    throw new TypeError(`expected Asset in 'opts.asset', got ${asset}`);\n  }\n\n  return this.invokeHostFunction({\n    source: opts.source,\n    auth: opts.auth,\n    func: xdr.HostFunction.hostFunctionTypeCreateContract(\n      new xdr.CreateContractArgs({\n        executable: xdr.ContractExecutable.contractExecutableStellarAsset(),\n        contractIdPreimage: xdr.ContractIdPreimage.contractIdPreimageFromAsset(\n          asset.toXDRObject()\n        )\n      })\n    )\n  });\n}\n\n/**\n * Returns an operation that uploads WASM for a contract.\n *\n * @function\n * @alias Operation.uploadContractWasm\n *\n * @param {any}               opts - the set of parameters\n * @param {Uint8Array|Buffer} opts.wasm - a WASM blob to upload to the ledger\n * @param {xdr.SorobanAuthorizationEntry[]} [opts.auth] - an optional list\n *    outlining the tree of authorizations required for the call\n * @param {string} [opts.source] - an optional source account\n *\n * @returns {xdr.Operation} an Invoke Host Function operation\n *    (xdr.InvokeHostFunctionOp)\n *\n * @see\n * https://soroban.stellar.org/docs/fundamentals-and-concepts/invoking-contracts-with-transactions#function\n */\nexport function uploadContractWasm(opts) {\n  return this.invokeHostFunction({\n    source: opts.source,\n    auth: opts.auth,\n    func: xdr.HostFunction.hostFunctionTypeUploadContractWasm(\n      Buffer.from(opts.wasm) // coalesce so we can drop `Buffer` someday\n    )\n  });\n}\n\n/** @returns {Buffer} a random 256-bit \"salt\" value. */\nfunction getSalty() {\n  return Keypair.random().xdrPublicKey().value(); // dilithium2 is 256 bits, too\n}\n","import xdr from '../xdr';\n\n/**\n * Creates a liquidity pool deposit operation.\n *\n * @function\n * @alias Operation.liquidityPoolDeposit\n * @see https://developers.stellar.org/docs/start/list-of-operations/#liquidity-pool-deposit\n *\n * @param {object} opts - Options object\n * @param {string} opts.liquidityPoolId - The liquidity pool ID.\n * @param {string} opts.maxAmountA - Maximum amount of first asset to deposit.\n * @param {string} opts.maxAmountB - Maximum amount of second asset to deposit.\n * @param {number|string|BigNumber|Object} opts.minPrice -  Minimum depositA/depositB price.\n * @param {number} opts.minPrice.n - If `opts.minPrice` is an object: the price numerator\n * @param {number} opts.minPrice.d - If `opts.minPrice` is an object: the price denominator\n * @param {number|string|BigNumber|Object} opts.maxPrice -  Maximum depositA/depositB price.\n * @param {number} opts.maxPrice.n - If `opts.maxPrice` is an object: the price numerator\n * @param {number} opts.maxPrice.d - If `opts.maxPrice` is an object: the price denominator\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n *\n * @returns {xdr.Operation} The resulting operation (xdr.LiquidityPoolDepositOp).\n */\nexport function liquidityPoolDeposit(opts = {}) {\n  const { liquidityPoolId, maxAmountA, maxAmountB, minPrice, maxPrice } = opts;\n  const attributes = {};\n\n  if (!liquidityPoolId) {\n    throw new TypeError('liquidityPoolId argument is required');\n  }\n  attributes.liquidityPoolId = xdr.PoolId.fromXDR(liquidityPoolId, 'hex');\n\n  if (!this.isValidAmount(maxAmountA, true)) {\n    throw new TypeError(this.constructAmountRequirementsError('maxAmountA'));\n  }\n  attributes.maxAmountA = this._toXDRAmount(maxAmountA);\n\n  if (!this.isValidAmount(maxAmountB, true)) {\n    throw new TypeError(this.constructAmountRequirementsError('maxAmountB'));\n  }\n  attributes.maxAmountB = this._toXDRAmount(maxAmountB);\n\n  if (minPrice === undefined) {\n    throw new TypeError('minPrice argument is required');\n  }\n  attributes.minPrice = this._toXDRPrice(minPrice);\n\n  if (maxPrice === undefined) {\n    throw new TypeError('maxPrice argument is required');\n  }\n  attributes.maxPrice = this._toXDRPrice(maxPrice);\n\n  const liquidityPoolDepositOp = new xdr.LiquidityPoolDepositOp(attributes);\n  const opAttributes = {\n    body: xdr.OperationBody.liquidityPoolDeposit(liquidityPoolDepositOp)\n  };\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\n\n/**\n * Creates a liquidity pool withdraw operation.\n *\n * @function\n * @alias Operation.liquidityPoolWithdraw\n * @see https://developers.stellar.org/docs/start/list-of-operations/#liquidity-pool-withdraw\n *\n * @param {object} opts - Options object\n * @param {string} opts.liquidityPoolId - The liquidity pool ID.\n * @param {string} opts.amount - Amount of pool shares to withdraw.\n * @param {string} opts.minAmountA - Minimum amount of first asset to withdraw.\n * @param {string} opts.minAmountB - Minimum amount of second asset to withdraw.\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n *\n * @returns {xdr.Operation}   The resulting operation (xdr.LiquidityPoolWithdrawOp).\n */\nexport function liquidityPoolWithdraw(opts = {}) {\n  const attributes = {};\n  if (!opts.liquidityPoolId) {\n    throw new TypeError('liquidityPoolId argument is required');\n  }\n  attributes.liquidityPoolId = xdr.PoolId.fromXDR(opts.liquidityPoolId, 'hex');\n\n  if (!this.isValidAmount(opts.amount)) {\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\n  }\n  attributes.amount = this._toXDRAmount(opts.amount);\n\n  if (!this.isValidAmount(opts.minAmountA, true)) {\n    throw new TypeError(this.constructAmountRequirementsError('minAmountA'));\n  }\n  attributes.minAmountA = this._toXDRAmount(opts.minAmountA);\n\n  if (!this.isValidAmount(opts.minAmountB, true)) {\n    throw new TypeError(this.constructAmountRequirementsError('minAmountB'));\n  }\n  attributes.minAmountB = this._toXDRAmount(opts.minAmountB);\n\n  const liquidityPoolWithdrawOp = new xdr.LiquidityPoolWithdrawOp(attributes);\n  const opAttributes = {\n    body: xdr.OperationBody.liquidityPoolWithdraw(liquidityPoolWithdrawOp)\n  };\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import { Hyper } from '@stellar/js-xdr';\nimport xdr from '../xdr';\n/**\n * Returns a XDR ManageBuyOfferOp. A \"manage buy offer\" operation creates, updates, or\n * deletes a buy offer.\n * @function\n * @alias Operation.manageBuyOffer\n * @param {object} opts Options object\n * @param {Asset} opts.selling - What you're selling.\n * @param {Asset} opts.buying - What you're buying.\n * @param {string} opts.buyAmount - The total amount you're buying. If 0, deletes the offer.\n * @param {number|string|BigNumber|Object} opts.price - Price of 1 unit of `buying` in terms of `selling`.\n * @param {number} opts.price.n - If `opts.price` is an object: the price numerator\n * @param {number} opts.price.d - If `opts.price` is an object: the price denominator\n * @param {number|string} [opts.offerId ] - If `0`, will create a new offer (default). Otherwise, edits an exisiting offer.\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n * @throws {Error} Throws `Error` when the best rational approximation of `price` cannot be found.\n * @returns {xdr.ManageBuyOfferOp} Manage Buy Offer operation\n */\nexport function manageBuyOffer(opts) {\n  const attributes = {};\n  attributes.selling = opts.selling.toXDRObject();\n  attributes.buying = opts.buying.toXDRObject();\n  if (!this.isValidAmount(opts.buyAmount, true)) {\n    throw new TypeError(this.constructAmountRequirementsError('buyAmount'));\n  }\n  attributes.buyAmount = this._toXDRAmount(opts.buyAmount);\n  if (opts.price === undefined) {\n    throw new TypeError('price argument is required');\n  }\n  attributes.price = this._toXDRPrice(opts.price);\n\n  if (opts.offerId !== undefined) {\n    opts.offerId = opts.offerId.toString();\n  } else {\n    opts.offerId = '0';\n  }\n\n  attributes.offerId = Hyper.fromString(opts.offerId);\n  const manageBuyOfferOp = new xdr.ManageBuyOfferOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.manageBuyOffer(manageBuyOfferOp);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\n\n/**\n * This operation adds data entry to the ledger.\n * @function\n * @alias Operation.manageData\n * @param {object} opts Options object\n * @param {string} opts.name - The name of the data entry.\n * @param {string|Buffer} opts.value - The value of the data entry.\n * @param {string} [opts.source] - The optional source account.\n * @returns {xdr.ManageDataOp} Manage Data operation\n */\nexport function manageData(opts) {\n  const attributes = {};\n\n  if (!(typeof opts.name === 'string' && opts.name.length <= 64)) {\n    throw new Error('name must be a string, up to 64 characters');\n  }\n  attributes.dataName = opts.name;\n\n  if (\n    typeof opts.value !== 'string' &&\n    !Buffer.isBuffer(opts.value) &&\n    opts.value !== null\n  ) {\n    throw new Error('value must be a string, Buffer or null');\n  }\n\n  if (typeof opts.value === 'string') {\n    attributes.dataValue = Buffer.from(opts.value);\n  } else {\n    attributes.dataValue = opts.value;\n  }\n\n  if (attributes.dataValue !== null && attributes.dataValue.length > 64) {\n    throw new Error('value cannot be longer that 64 bytes');\n  }\n\n  const manageDataOp = new xdr.ManageDataOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.manageData(manageDataOp);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import { Hyper } from '@stellar/js-xdr';\nimport xdr from '../xdr';\n/**\n * Returns a XDR ManageSellOfferOp. A \"manage sell offer\" operation creates, updates, or\n * deletes an offer.\n * @function\n * @alias Operation.manageSellOffer\n * @param {object} opts Options object\n * @param {Asset} opts.selling - What you're selling.\n * @param {Asset} opts.buying - What you're buying.\n * @param {string} opts.amount - The total amount you're selling. If 0, deletes the offer.\n * @param {number|string|BigNumber|Object} opts.price - Price of 1 unit of `selling` in terms of `buying`.\n * @param {number} opts.price.n - If `opts.price` is an object: the price numerator\n * @param {number} opts.price.d - If `opts.price` is an object: the price denominator\n * @param {number|string} [opts.offerId ] - If `0`, will create a new offer (default). Otherwise, edits an exisiting offer.\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n * @throws {Error} Throws `Error` when the best rational approximation of `price` cannot be found.\n * @returns {xdr.ManageSellOfferOp} Manage Sell Offer operation\n */\nexport function manageSellOffer(opts) {\n  const attributes = {};\n  attributes.selling = opts.selling.toXDRObject();\n  attributes.buying = opts.buying.toXDRObject();\n  if (!this.isValidAmount(opts.amount, true)) {\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\n  }\n  attributes.amount = this._toXDRAmount(opts.amount);\n  if (opts.price === undefined) {\n    throw new TypeError('price argument is required');\n  }\n  attributes.price = this._toXDRPrice(opts.price);\n\n  if (opts.offerId !== undefined) {\n    opts.offerId = opts.offerId.toString();\n  } else {\n    opts.offerId = '0';\n  }\n\n  attributes.offerId = Hyper.fromString(opts.offerId);\n  const manageSellOfferOp = new xdr.ManageSellOfferOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.manageSellOffer(manageSellOfferOp);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\nimport { decodeAddressToMuxedAccount } from '../util/decode_encode_muxed_account';\n\n/**\n * Creates a PathPaymentStrictReceive operation.\n *\n * A `PathPaymentStrictReceive` operation sends the specified amount to the\n * destination account. It credits the destination with `destAmount` of\n * `destAsset`, while debiting at most `sendMax` of `sendAsset` from the source.\n * The transfer optionally occurs through a path. XLM payments create the\n * destination account if it does not exist.\n *\n * @function\n * @alias Operation.pathPaymentStrictReceive\n * @see https://developers.stellar.org/docs/start/list-of-operations/#path-payment-strict-receive\n *\n * @param {object}  opts - Options object\n * @param {Asset}   opts.sendAsset    - asset to pay with\n * @param {string}  opts.sendMax      - maximum amount of sendAsset to send\n * @param {string}  opts.destination  - destination account to send to\n * @param {Asset}   opts.destAsset    - asset the destination will receive\n * @param {string}  opts.destAmount   - amount the destination receives\n * @param {Asset[]} opts.path         - array of Asset objects to use as the path\n *\n * @param {string}  [opts.source]     - The source account for the payment.\n *     Defaults to the transaction's source account.\n *\n * @returns {xdr.PathPaymentStrictReceiveOp} the resulting path payment op\n */\nexport function pathPaymentStrictReceive(opts) {\n  switch (true) {\n    case !opts.sendAsset:\n      throw new Error('Must specify a send asset');\n    case !this.isValidAmount(opts.sendMax):\n      throw new TypeError(this.constructAmountRequirementsError('sendMax'));\n    case !opts.destAsset:\n      throw new Error('Must provide a destAsset for a payment operation');\n    case !this.isValidAmount(opts.destAmount):\n      throw new TypeError(this.constructAmountRequirementsError('destAmount'));\n    default:\n      break;\n  }\n\n  const attributes = {};\n  attributes.sendAsset = opts.sendAsset.toXDRObject();\n  attributes.sendMax = this._toXDRAmount(opts.sendMax);\n  try {\n    attributes.destination = decodeAddressToMuxedAccount(opts.destination);\n  } catch (e) {\n    throw new Error('destination is invalid');\n  }\n\n  attributes.destAsset = opts.destAsset.toXDRObject();\n  attributes.destAmount = this._toXDRAmount(opts.destAmount);\n\n  const path = opts.path ? opts.path : [];\n  attributes.path = path.map((x) => x.toXDRObject());\n\n  const payment = new xdr.PathPaymentStrictReceiveOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.pathPaymentStrictReceive(payment);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\nimport { decodeAddressToMuxedAccount } from '../util/decode_encode_muxed_account';\n\n/**\n * Creates a PathPaymentStrictSend operation.\n *\n * A `PathPaymentStrictSend` operation sends the specified amount to the\n * destination account crediting at least `destMin` of `destAsset`, optionally\n * through a path. XLM payments create the destination account if it does not\n * exist.\n *\n * @function\n * @alias Operation.pathPaymentStrictSend\n * @see https://developers.stellar.org/docs/start/list-of-operations/#path-payment-strict-send\n *\n * @param {object}  opts - Options object\n * @param {Asset}   opts.sendAsset    - asset to pay with\n * @param {string}  opts.sendAmount   - amount of sendAsset to send (excluding fees)\n * @param {string}  opts.destination  - destination account to send to\n * @param {Asset}   opts.destAsset    - asset the destination will receive\n * @param {string}  opts.destMin      - minimum amount of destAsset to be receive\n * @param {Asset[]} opts.path         - array of Asset objects to use as the path\n *\n * @param {string}  [opts.source]     - The source account for the payment.\n *     Defaults to the transaction's source account.\n *\n * @returns {xdr.Operation}   the resulting path payment operation\n *     (xdr.PathPaymentStrictSendOp)\n */\nexport function pathPaymentStrictSend(opts) {\n  switch (true) {\n    case !opts.sendAsset:\n      throw new Error('Must specify a send asset');\n    case !this.isValidAmount(opts.sendAmount):\n      throw new TypeError(this.constructAmountRequirementsError('sendAmount'));\n    case !opts.destAsset:\n      throw new Error('Must provide a destAsset for a payment operation');\n    case !this.isValidAmount(opts.destMin):\n      throw new TypeError(this.constructAmountRequirementsError('destMin'));\n    default:\n      break;\n  }\n\n  const attributes = {};\n  attributes.sendAsset = opts.sendAsset.toXDRObject();\n  attributes.sendAmount = this._toXDRAmount(opts.sendAmount);\n  try {\n    attributes.destination = decodeAddressToMuxedAccount(opts.destination);\n  } catch (e) {\n    throw new Error('destination is invalid');\n  }\n  attributes.destAsset = opts.destAsset.toXDRObject();\n  attributes.destMin = this._toXDRAmount(opts.destMin);\n\n  const path = opts.path ? opts.path : [];\n  attributes.path = path.map((x) => x.toXDRObject());\n\n  const payment = new xdr.PathPaymentStrictSendOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.pathPaymentStrictSend(payment);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\nimport { decodeAddressToMuxedAccount } from '../util/decode_encode_muxed_account';\n\n/**\n * Create a payment operation.\n *\n * @function\n * @alias Operation.payment\n * @see https://developers.stellar.org/docs/start/list-of-operations/#payment\n *\n * @param {object}  opts - Options object\n * @param {string}  opts.destination  - destination account ID\n * @param {Asset}   opts.asset        - asset to send\n * @param {string}  opts.amount       - amount to send\n *\n * @param {string}  [opts.source]     - The source account for the payment.\n *     Defaults to the transaction's source account.\n *\n * @returns {xdr.Operation}   The resulting payment operation (xdr.PaymentOp)\n */\nexport function payment(opts) {\n  if (!opts.asset) {\n    throw new Error('Must provide an asset for a payment operation');\n  }\n  if (!this.isValidAmount(opts.amount)) {\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\n  }\n\n  const attributes = {};\n  try {\n    attributes.destination = decodeAddressToMuxedAccount(opts.destination);\n  } catch (e) {\n    throw new Error('destination is invalid');\n  }\n\n  attributes.asset = opts.asset.toXDRObject();\n  attributes.amount = this._toXDRAmount(opts.amount);\n  const paymentOp = new xdr.PaymentOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.payment(paymentOp);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\n\n/**\n * Builds an operation to restore the archived ledger entries specified\n * by the ledger keys.\n *\n * The ledger keys to restore are specified separately from the operation\n * in read-write footprint of the transaction.\n *\n * It takes no parameters because the relevant footprint is derived from the\n * transaction itself. See {@link TransactionBuilder}'s `opts.sorobanData`\n * parameter (or {@link TransactionBuilder.setSorobanData} /\n * {@link TransactionBuilder.setLedgerKeys}), which is a\n * {@link xdr.SorobanTransactionData} instance that contains fee data & resource\n * usage as part of {@link xdr.SorobanTransactionData}.\n *\n * @function\n * @alias Operation.restoreFootprint\n *\n * @param {object} [opts] - an optional set of parameters\n * @param {string} [opts.source] - an optional source account\n *\n * @returns {xdr.Operation} a Bump Footprint Expiration operation\n *    (xdr.RestoreFootprintOp)\n */\nexport function restoreFootprint(opts = {}) {\n  const op = new xdr.RestoreFootprintOp({ ext: new xdr.ExtensionPoint(0) });\n  const opAttributes = {\n    body: xdr.OperationBody.restoreFootprint(op)\n  };\n  this.setSourceAccount(opAttributes, opts ?? {});\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\nimport { StrKey } from '../strkey';\nimport { Keypair } from '../keypair';\nimport { Asset } from '../asset';\nimport { LiquidityPoolId } from '../liquidity_pool_id';\n\n/**\n * Create a \"revoke sponsorship\" operation for an account.\n *\n * @function\n * @alias Operation.revokeAccountSponsorship\n * @param {object} opts Options object\n * @param {string} opts.account - The sponsored account ID.\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n * @returns {xdr.Operation} xdr operation\n *\n * @example\n * const op = Operation.revokeAccountSponsorship({\n *   account: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7\n * });\n *\n */\nexport function revokeAccountSponsorship(opts = {}) {\n  if (!StrKey.isValidDilithium2PublicKey(opts.account)) {\n    throw new Error('account is invalid');\n  }\n\n  const ledgerKey = xdr.LedgerKey.account(\n    new xdr.LedgerKeyAccount({\n      accountId: Keypair.fromPublicKey(opts.account).xdrAccountId()\n    })\n  );\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n\n/**\n * Create a \"revoke sponsorship\" operation for a trustline.\n *\n * @function\n * @alias Operation.revokeTrustlineSponsorship\n * @param {object} opts Options object\n * @param {string} opts.account - The account ID which owns the trustline.\n * @param {Asset | LiquidityPoolId} opts.asset - The trustline asset.\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n * @returns {xdr.Operation} xdr operation\n *\n * @example\n * const op = Operation.revokeTrustlineSponsorship({\n *   account: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7\n *   asset: new StellarBase.LiquidityPoolId(\n *     'USDUSD',\n *     'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7'\n *   )\n * });\n *\n */\nexport function revokeTrustlineSponsorship(opts = {}) {\n  if (!StrKey.isValidDilithium2PublicKey(opts.account)) {\n    throw new Error('account is invalid');\n  }\n\n  let asset;\n  if (opts.asset instanceof Asset) {\n    asset = opts.asset.toTrustLineXDRObject();\n  } else if (opts.asset instanceof LiquidityPoolId) {\n    asset = opts.asset.toXDRObject();\n  } else {\n    throw new TypeError('asset must be an Asset or LiquidityPoolId');\n  }\n\n  const ledgerKey = xdr.LedgerKey.trustline(\n    new xdr.LedgerKeyTrustLine({\n      accountId: Keypair.fromPublicKey(opts.account).xdrAccountId(),\n      asset\n    })\n  );\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n\n/**\n * Create a \"revoke sponsorship\" operation for an offer.\n *\n * @function\n * @alias Operation.revokeOfferSponsorship\n * @param {object} opts Options object\n * @param {string} opts.seller - The account ID which created the offer.\n * @param {string} opts.offerId - The offer ID.\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n * @returns {xdr.Operation} xdr operation\n *\n * @example\n * const op = Operation.revokeOfferSponsorship({\n *   seller: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7\n *   offerId: '1234'\n * });\n *\n */\nexport function revokeOfferSponsorship(opts = {}) {\n  if (!StrKey.isValidDilithium2PublicKey(opts.seller)) {\n    throw new Error('seller is invalid');\n  }\n  if (typeof opts.offerId !== 'string') {\n    throw new Error('offerId is invalid');\n  }\n\n  const ledgerKey = xdr.LedgerKey.offer(\n    new xdr.LedgerKeyOffer({\n      sellerId: Keypair.fromPublicKey(opts.seller).xdrAccountId(),\n      offerId: xdr.Int64.fromString(opts.offerId)\n    })\n  );\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n\n/**\n * Create a \"revoke sponsorship\" operation for a data entry.\n *\n * @function\n * @alias Operation.revokeDataSponsorship\n * @param {object} opts Options object\n * @param {string} opts.account - The account ID which owns the data entry.\n * @param {string} opts.name - The name of the data entry\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n * @returns {xdr.Operation} xdr operation\n *\n * @example\n * const op = Operation.revokeDataSponsorship({\n *   account: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7\n *   name: 'foo'\n * });\n *\n */\nexport function revokeDataSponsorship(opts = {}) {\n  if (!StrKey.isValidDilithium2PublicKey(opts.account)) {\n    throw new Error('account is invalid');\n  }\n  if (typeof opts.name !== 'string' || opts.name.length > 64) {\n    throw new Error('name must be a string, up to 64 characters');\n  }\n\n  const ledgerKey = xdr.LedgerKey.data(\n    new xdr.LedgerKeyData({\n      accountId: Keypair.fromPublicKey(opts.account).xdrAccountId(),\n      dataName: opts.name\n    })\n  );\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n\n/**\n * Create a \"revoke sponsorship\" operation for a claimable balance.\n *\n * @function\n * @alias Operation.revokeClaimableBalanceSponsorship\n * @param {object} opts Options object\n * @param {string} opts.balanceId - The sponsored claimable balance ID.\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n * @returns {xdr.Operation} xdr operation\n *\n * @example\n * const op = Operation.revokeClaimableBalanceSponsorship({\n *   balanceId: '00000000da0d57da7d4850e7fc10d2a9d0ebc731f7afb40574c03395b17d49149b91f5be',\n * });\n *\n */\nexport function revokeClaimableBalanceSponsorship(opts = {}) {\n  if (typeof opts.balanceId !== 'string') {\n    throw new Error('balanceId is invalid');\n  }\n\n  const ledgerKey = xdr.LedgerKey.claimableBalance(\n    new xdr.LedgerKeyClaimableBalance({\n      balanceId: xdr.ClaimableBalanceId.fromXDR(opts.balanceId, 'hex')\n    })\n  );\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n\n/**\n * Creates a \"revoke sponsorship\" operation for a liquidity pool.\n *\n * @function\n * @alias Operation.revokeLiquidityPoolSponsorship\n * @param {object} opts – Options object.\n * @param {string} opts.liquidityPoolId - The sponsored liquidity pool ID in 'hex' string.\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n * @returns {xdr.Operation} xdr Operation.\n *\n * @example\n * const op = Operation.revokeLiquidityPoolSponsorship({\n *   liquidityPoolId: 'dd7b1ab831c273310ddbec6f97870aa83c2fbd78ce22aded37ecbf4f3380fac7',\n * });\n *\n */\nexport function revokeLiquidityPoolSponsorship(opts = {}) {\n  if (typeof opts.liquidityPoolId !== 'string') {\n    throw new Error('liquidityPoolId is invalid');\n  }\n\n  const ledgerKey = xdr.LedgerKey.liquidityPool(\n    new xdr.LedgerKeyLiquidityPool({\n      liquidityPoolId: xdr.PoolId.fromXDR(opts.liquidityPoolId, 'hex')\n    })\n  );\n\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\n  const opAttributes = {\n    body: xdr.OperationBody.revokeSponsorship(op)\n  };\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n\n/**\n * Create a \"revoke sponsorship\" operation for a signer.\n *\n * @function\n * @alias Operation.revokeSignerSponsorship\n * @param {object} opts Options object\n * @param {string} opts.account - The account ID where the signer sponsorship is being removed from.\n * @param {object} opts.signer - The signer whose sponsorship is being removed.\n * @param {string} [opts.signer.dilithium2PublicKey] - The dilithium2 public key of the signer.\n * @param {Buffer|string} [opts.signer.sha256Hash] - sha256 hash (Buffer or hex string).\n * @param {Buffer|string} [opts.signer.preAuthTx] - Hash (Buffer or hex string) of transaction.\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n * @returns {xdr.Operation} xdr operation\n *\n * @example\n * const op = Operation.revokeSignerSponsorship({\n *   account: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7\n *   signer: {\n *     dilithium2PublicKey: 'GCEZWKCA5VLDNRLN3RPRJMRZOX3Z6G5CHCGSNFHEYVXM3XOJMDS674JZ'\n *   }\n * })\n *\n */\nexport function revokeSignerSponsorship(opts = {}) {\n  if (!StrKey.isValidDilithium2PublicKey(opts.account)) {\n    throw new Error('account is invalid');\n  }\n  let key;\n  if (opts.signer.dilithium2PublicKey) {\n    if (!StrKey.isValidDilithium2PublicKey(opts.signer.dilithium2PublicKey)) {\n      throw new Error('signer.dilithium2PublicKey is invalid.');\n    }\n    const rawKey = StrKey.decodeDilithium2PublicKey(opts.signer.dilithium2PublicKey);\n\n    key = new xdr.SignerKey.signerKeyTypeDilithium2(rawKey);\n  } else if (opts.signer.preAuthTx) {\n    let buffer;\n    if (typeof opts.signer.preAuthTx === 'string') {\n      buffer = Buffer.from(opts.signer.preAuthTx, 'hex');\n    } else {\n      buffer = opts.signer.preAuthTx;\n    }\n\n    if (!(Buffer.isBuffer(buffer) && buffer.length === 32)) {\n      throw new Error('signer.preAuthTx must be 32 bytes Buffer.');\n    }\n\n    key = new xdr.SignerKey.signerKeyTypePreAuthTx(buffer);\n  } else if (opts.signer.sha256Hash) {\n    let buffer;\n    if (typeof opts.signer.sha256Hash === 'string') {\n      buffer = Buffer.from(opts.signer.sha256Hash, 'hex');\n    } else {\n      buffer = opts.signer.sha256Hash;\n    }\n\n    if (!(Buffer.isBuffer(buffer) && buffer.length === 32)) {\n      throw new Error('signer.sha256Hash must be 32 bytes Buffer.');\n    }\n\n    key = new xdr.SignerKey.signerKeyTypeHashX(buffer);\n  } else {\n    throw new Error('signer is invalid');\n  }\n\n  const signer = new xdr.RevokeSponsorshipOpSigner({\n    accountId: Keypair.fromPublicKey(opts.account).xdrAccountId(),\n    signerKey: key\n  });\n\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipSigner(signer);\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","/* eslint-disable no-param-reassign */\n\nimport xdr from '../xdr';\nimport { Keypair } from '../keypair';\nimport { StrKey } from '../strkey';\n\nfunction weightCheckFunction(value, name) {\n  if (value >= 0 && value <= 255) {\n    return true;\n  }\n  throw new Error(`${name} value must be between 0 and 255`);\n}\n\n/**\n * Returns an XDR SetOptionsOp. A \"set options\" operations set or clear account flags,\n * set the account's inflation destination, and/or add new signers to the account.\n * The flags used in `opts.clearFlags` and `opts.setFlags` can be the following:\n *   - `{@link AuthRequiredFlag}`\n *   - `{@link AuthRevocableFlag}`\n *   - `{@link AuthImmutableFlag}`\n *   - `{@link AuthClawbackEnabledFlag}`\n *\n * It's possible to set/clear multiple flags at once using logical or.\n *\n * @function\n * @alias Operation.setOptions\n *\n * @param {object} opts Options object\n * @param {string} [opts.inflationDest] - Set this account ID as the account's inflation destination.\n * @param {(number|string)} [opts.clearFlags] - Bitmap integer for which account flags to clear.\n * @param {(number|string)} [opts.setFlags] - Bitmap integer for which account flags to set.\n * @param {number|string} [opts.masterWeight] - The master key weight.\n * @param {number|string} [opts.lowThreshold] - The sum weight for the low threshold.\n * @param {number|string} [opts.medThreshold] - The sum weight for the medium threshold.\n * @param {number|string} [opts.highThreshold] - The sum weight for the high threshold.\n * @param {object} [opts.signer] - Add or remove a signer from the account. The signer is\n *                                 deleted if the weight is 0. Only one of `dilithium2PublicKey`, `sha256Hash`, `preAuthTx` should be defined.\n * @param {string} [opts.signer.dilithium2PublicKey] - The dilithium2 public key of the signer.\n * @param {Buffer|string} [opts.signer.sha256Hash] - sha256 hash (Buffer or hex string) of preimage that will unlock funds. Preimage should be used as signature of future transaction.\n * @param {Buffer|string} [opts.signer.preAuthTx] - Hash (Buffer or hex string) of transaction that will unlock funds.\n * @param {string} [opts.signer.dilithium2SignedPayload] - Signed payload signer (dilithium2 public key + raw payload) for atomic transaction signature disclosure.\n * @param {number|string} [opts.signer.weight] - The weight of the new signer (0 to delete or 1-255)\n * @param {string} [opts.homeDomain] - sets the home domain used for reverse federation lookup.\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n *\n * @returns {xdr.SetOptionsOp}  XDR operation\n * @see [Account flags](https://developers.stellar.org/docs/glossary/accounts/#flags)\n */\nexport function setOptions(opts) {\n  const attributes = {};\n\n  if (opts.inflationDest) {\n    if (!StrKey.isValidDilithium2PublicKey(opts.inflationDest)) {\n      throw new Error('inflationDest is invalid');\n    }\n    attributes.inflationDest = Keypair.fromPublicKey(\n      opts.inflationDest\n    ).xdrAccountId();\n  }\n\n  attributes.clearFlags = this._checkUnsignedIntValue(\n    'clearFlags',\n    opts.clearFlags\n  );\n  attributes.setFlags = this._checkUnsignedIntValue('setFlags', opts.setFlags);\n  attributes.masterWeight = this._checkUnsignedIntValue(\n    'masterWeight',\n    opts.masterWeight,\n    weightCheckFunction\n  );\n  attributes.lowThreshold = this._checkUnsignedIntValue(\n    'lowThreshold',\n    opts.lowThreshold,\n    weightCheckFunction\n  );\n  attributes.medThreshold = this._checkUnsignedIntValue(\n    'medThreshold',\n    opts.medThreshold,\n    weightCheckFunction\n  );\n  attributes.highThreshold = this._checkUnsignedIntValue(\n    'highThreshold',\n    opts.highThreshold,\n    weightCheckFunction\n  );\n\n  if (opts.homeDomain !== undefined && typeof opts.homeDomain !== 'string') {\n    throw new TypeError('homeDomain argument must be of type String');\n  }\n  attributes.homeDomain = opts.homeDomain;\n\n  if (opts.signer) {\n    const weight = this._checkUnsignedIntValue(\n      'signer.weight',\n      opts.signer.weight,\n      weightCheckFunction\n    );\n    let key;\n\n    let setValues = 0;\n\n    if (opts.signer.dilithium2PublicKey) {\n      if (!StrKey.isValidDilithium2PublicKey(opts.signer.dilithium2PublicKey)) {\n        throw new Error('signer.dilithium2PublicKey is invalid.');\n      }\n      const rawKey = StrKey.decodeDilithium2PublicKey(\n        opts.signer.dilithium2PublicKey\n      );\n\n      // eslint-disable-next-line new-cap\n      key = new xdr.SignerKey.signerKeyTypeDilithium2(rawKey);\n      setValues += 1;\n    }\n\n    if (opts.signer.preAuthTx) {\n      if (typeof opts.signer.preAuthTx === 'string') {\n        opts.signer.preAuthTx = Buffer.from(opts.signer.preAuthTx, 'hex');\n      }\n\n      if (\n        !(\n          Buffer.isBuffer(opts.signer.preAuthTx) &&\n          opts.signer.preAuthTx.length === 32\n        )\n      ) {\n        throw new Error('signer.preAuthTx must be 32 bytes Buffer.');\n      }\n\n      // eslint-disable-next-line new-cap\n      key = new xdr.SignerKey.signerKeyTypePreAuthTx(opts.signer.preAuthTx);\n      setValues += 1;\n    }\n\n    if (opts.signer.sha256Hash) {\n      if (typeof opts.signer.sha256Hash === 'string') {\n        opts.signer.sha256Hash = Buffer.from(opts.signer.sha256Hash, 'hex');\n      }\n\n      if (\n        !(\n          Buffer.isBuffer(opts.signer.sha256Hash) &&\n          opts.signer.sha256Hash.length === 32\n        )\n      ) {\n        throw new Error('signer.sha256Hash must be 32 bytes Buffer.');\n      }\n\n      // eslint-disable-next-line new-cap\n      key = new xdr.SignerKey.signerKeyTypeHashX(opts.signer.sha256Hash);\n      setValues += 1;\n    }\n\n    if (opts.signer.dilithium2SignedPayload) {\n      if (!StrKey.isValidSignedPayload(opts.signer.dilithium2SignedPayload)) {\n        throw new Error('signer.dilithium2SignedPayload is invalid.');\n      }\n      const rawKey = StrKey.decodeSignedPayload(\n        opts.signer.dilithium2SignedPayload\n      );\n      const signedPayloadXdr =\n        xdr.SignerKeyDilithium2SignedPayload.fromXDR(rawKey);\n\n      // eslint-disable-next-line new-cap\n      key = xdr.SignerKey.signerKeyTypeDilithium2SignedPayload(signedPayloadXdr);\n      setValues += 1;\n    }\n\n    if (setValues !== 1) {\n      throw new Error(\n        'Signer object must contain exactly one of signer.dilithium2PublicKey, signer.sha256Hash, signer.preAuthTx.'\n      );\n    }\n\n    attributes.signer = new xdr.Signer({ key, weight });\n  }\n\n  const setOptionsOp = new xdr.SetOptionsOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.setOptions(setOptionsOp);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\nimport { Keypair } from '../keypair';\n\n/**\n * Creates a trustline flag configuring operation.\n *\n * For the flags, set them to true to enable them and false to disable them. Any\n * unmodified operations will be marked `undefined` in the result.\n *\n * Note that you can only **clear** the clawbackEnabled flag set; it must be set\n * account-wide via operations.SetOptions (setting\n * xdr.AccountFlags.clawbackEnabled).\n *\n * @function\n * @alias Operation.setTrustLineFlags\n *\n * @param {object} opts - Options object\n * @param {string} opts.trustor     - the account whose trustline this is\n * @param {Asset}  opts.asset       - the asset on the trustline\n * @param {object} opts.flags       - the set of flags to modify\n *\n * @param {bool}   [opts.flags.authorized]  - authorize account to perform\n *     transactions with its credit\n * @param {bool}   [opts.flags.authorizedToMaintainLiabilities] - authorize\n *     account to maintain and reduce liabilities for its credit\n * @param {bool}   [opts.flags.clawbackEnabled] - stop claimable balances on\n *     this trustlines from having clawbacks enabled (this flag can only be set\n *     to false!)\n * @param {string} [opts.source] - The source account for the operation.\n *                                 Defaults to the transaction's source account.\n *\n * @note You must include at least one flag.\n *\n * @return {xdr.SetTrustLineFlagsOp}\n *\n * @link xdr.AccountFlags\n * @link xdr.TrustLineFlags\n * @see https://github.com/stellar/stellar-protocol/blob/master/core/cap-0035.md#set-trustline-flags-operation\n * @see https://developers.stellar.org/docs/start/list-of-operations/#set-options\n */\nexport function setTrustLineFlags(opts = {}) {\n  const attributes = {};\n\n  if (typeof opts.flags !== 'object' || Object.keys(opts.flags).length === 0) {\n    throw new Error('opts.flags must be a map of boolean flags to modify');\n  }\n\n  const mapping = {\n    authorized: xdr.TrustLineFlags.authorizedFlag(),\n    authorizedToMaintainLiabilities:\n      xdr.TrustLineFlags.authorizedToMaintainLiabilitiesFlag(),\n    clawbackEnabled: xdr.TrustLineFlags.trustlineClawbackEnabledFlag()\n  };\n\n  /* eslint no-bitwise: \"off\" */\n  let clearFlag = 0;\n  let setFlag = 0;\n\n  Object.keys(opts.flags).forEach((flagName) => {\n    if (!Object.prototype.hasOwnProperty.call(mapping, flagName)) {\n      throw new Error(`unsupported flag name specified: ${flagName}`);\n    }\n\n    const flagValue = opts.flags[flagName];\n    const bit = mapping[flagName].value;\n    if (flagValue === true) {\n      setFlag |= bit;\n    } else if (flagValue === false) {\n      clearFlag |= bit;\n    }\n  });\n\n  attributes.trustor = Keypair.fromPublicKey(opts.trustor).xdrAccountId();\n  attributes.asset = opts.asset.toXDRObject();\n  attributes.clearFlags = clearFlag;\n  attributes.setFlags = setFlag;\n\n  const opAttributes = {\n    body: xdr.OperationBody.setTrustLineFlags(\n      new xdr.SetTrustLineFlagsOp(attributes)\n    )\n  };\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from './xdr';\n\nimport { Address } from './address';\nimport { Contract } from './contract';\nimport { ScInt, XdrLargeInt, scValToBigInt } from './numbers/index';\n\n/**\n * Attempts to convert native types into smart contract values\n * ({@link xdr.ScVal}).\n *\n * Provides conversions from smart contract XDR values ({@link xdr.ScVal}) to\n * native JavaScript types.\n *\n * The conversions are as follows:\n *\n *  - xdr.ScVal -> passthrough\n *  - null/undefined -> scvVoid\n *  - string -> scvString (a copy is made)\n *  - UintArray8 -> scvBytes (a copy is made)\n *  - boolean -> scvBool\n *\n *  - number/bigint -> the smallest possible XDR integer type that will fit the\n *    input value (if you want a specific type, use {@link ScInt})\n *\n *  - {@link Address} or {@link Contract} -> scvAddress (for contracts and\n *    public keys)\n *\n *  - Array<T> -> scvVec after attempting to convert each item of type `T` to an\n *    xdr.ScVal (recursively). note that all values must be the same type!\n *\n *  - object -> scvMap after attempting to convert each key and value to an\n *    xdr.ScVal (recursively). note that there is no restriction on types\n *    matching anywhere (unlike arrays)\n *\n * When passing an integer-like native value, you can also optionally specify a\n * type which will force a particular interpretation of that value.\n *\n * Note that not all type specifications are compatible with all `ScVal`s, e.g.\n * `toScVal(\"a string\", {type: \"i256\"})` will throw.\n *\n * @param {any} val -       a native (or convertible) input value to wrap\n * @param {object} [opts] - an optional set of hints around the type of\n *    conversion you'd like to see\n * @param {string} [opts.type] - there is different behavior for different input\n *    types for `val`:\n *\n *     - when `val` is an integer-like type (i.e. number|bigint), this will be\n *       forwarded to {@link ScInt} or forced to be u32/i32.\n *\n *     - when `val` is an array type, this is forwarded to the recursion\n *\n *     - when `val` is an object type (key-value entries), this should be an\n *       object in which each key has a pair of types (to represent forced types\n *       for the key and the value), where `null` (or a missing entry) indicates\n *       the default interpretation(s) (refer to the examples, below)\n *\n *     - when `val` is a string type, this can be 'string' or 'symbol' to force\n *       a particular interpretation of `val`.\n *\n *     - when `val` is a bytes-like type, this can be 'string', 'symbol', or\n *       'bytes' to force a particular interpretation\n *\n *    As a simple example, `nativeToScVal(\"hello\", {type: 'symbol'})` will\n *    return an `scvSymbol`, whereas without the type it would have been an\n *    `scvString`.\n *\n * @returns {xdr.ScVal} a wrapped, smart, XDR version of the input value\n * @throws {TypeError} if...\n *  - there are arrays with more than one type in them\n *  - there are values that do not have a sensible conversion (e.g. random XDR\n *    types, custom classes)\n *  - the type of the input object (or some inner value of said object) cannot\n *    be determined (via `typeof`)\n *  - the type you specified (via `opts.type`) is incompatible with the value\n *    you passed in (`val`), e.g. `nativeToScVal(\"a string\", { type: 'i128' })`,\n *    though this does not apply for types that ignore `opts` (e.g. addresses).\n * @see scValToNative\n *\n * @example\n * nativeToScVal(1000);                   // gives ScValType === scvU64\n * nativeToScVal(1000n);                  // gives ScValType === scvU64\n * nativeToScVal(1n << 100n);             // gives ScValType === scvU128\n * nativeToScVal(1000, { type: 'u32' });  // gives ScValType === scvU32\n * nativeToScVal(1000, { type: 'i125' }); // gives ScValType === scvI256\n * nativeToScVal(\"a string\");                     // gives ScValType === scvString\n * nativeToScVal(\"a string\", { type: 'symbol' }); // gives scvSymbol\n * nativeToScVal(new Uint8Array(5));                      // scvBytes\n * nativeToScVal(new Uint8Array(5), { type: 'symbol' });  // scvSymbol\n * nativeToScVal(null); // scvVoid\n * nativeToScVal(true); // scvBool\n * nativeToScVal([1, 2, 3]);                    // gives scvVec with each element as scvU64\n * nativeToScVal([1, 2, 3], { type: 'i128' });  // scvVec<scvI128>\n * nativeToScVal({ 'hello': 1, 'world': [ true, false ] }, {\n *   type: {\n *     'hello': [ 'symbol', 'i128' ],\n *   }\n * })\n * // gives scvMap with entries: [\n * //     [ scvSymbol, scvI128 ],\n * //     [ scvString, scvArray<scvBool> ]\n * // ]\n *\n * @example\n * import {\n *   nativeToScVal,\n *   scValToNative,\n *   ScInt,\n *   xdr\n * } from '@stellar/stellar-base';\n *\n * let gigaMap = {\n *   bool: true,\n *   void: null,\n *   u32: xdr.ScVal.scvU32(1),\n *   i32: xdr.ScVal.scvI32(1),\n *   u64: 1n,\n *   i64: -1n,\n *   u128: new ScInt(1).toU128(),\n *   i128: new ScInt(1).toI128(),\n *   u256: new ScInt(1).toU256(),\n *   i256: new ScInt(1).toI256(),\n *   map: {\n *     arbitrary: 1n,\n *     nested: 'values',\n *     etc: false\n *   },\n *   vec: ['same', 'type', 'list'],\n * };\n *\n * // then, simply:\n * let scv = nativeToScVal(gigaMap);    // scv.switch() == xdr.ScValType.scvMap()\n *\n * // then...\n * someContract.call(\"method\", scv);\n *\n * // Similarly, the inverse should work:\n * scValToNative(scv) == gigaMap;       // true\n */\nexport function nativeToScVal(val, opts = {}) {\n  switch (typeof val) {\n    case 'object': {\n      if (val === null) {\n        return xdr.ScVal.scvVoid();\n      }\n\n      if (val instanceof xdr.ScVal) {\n        return val; // should we copy?\n      }\n\n      if (val instanceof Address) {\n        return val.toScVal();\n      }\n\n      if (val instanceof Contract) {\n        return val.address().toScVal();\n      }\n\n      if (val instanceof Uint8Array || Buffer.isBuffer(val)) {\n        const copy = Uint8Array.from(val);\n        switch (opts?.type ?? 'bytes') {\n          case 'bytes':\n            return xdr.ScVal.scvBytes(copy);\n          case 'symbol':\n            return xdr.ScVal.scvSymbol(copy);\n          case 'string':\n            return xdr.ScVal.scvString(copy);\n          default:\n            throw new TypeError(\n              `invalid type (${opts.type}) specified for bytes-like value`\n            );\n        }\n      }\n\n      if (Array.isArray(val)) {\n        if (val.length > 0 && val.some((v) => typeof v !== typeof val[0])) {\n          throw new TypeError(\n            `array values (${val}) must have the same type (types: ${val\n              .map((v) => typeof v)\n              .join(',')})`\n          );\n        }\n        return xdr.ScVal.scvVec(val.map((v) => nativeToScVal(v, opts)));\n      }\n\n      if ((val.constructor?.name ?? '') !== 'Object') {\n        throw new TypeError(\n          `cannot interpret ${\n            val.constructor?.name\n          } value as ScVal (${JSON.stringify(val)})`\n        );\n      }\n\n      return xdr.ScVal.scvMap(\n        Object.entries(val)\n          // The Soroban runtime expects maps to have their keys in sorted\n          // order, so let's do that here as part of the conversion to prevent\n          // confusing error messages on execution.\n          .sort(([key1], [key2]) => key1.localeCompare(key2))\n          .map(([k, v]) => {\n            // the type can be specified with an entry for the key and the value,\n            // e.g. val = { 'hello': 1 } and opts.type = { hello: [ 'symbol',\n            // 'u128' ]} or you can use `null` for the default interpretation\n            const [keyType, valType] = (opts?.type ?? {})[k] ?? [null, null];\n            const keyOpts = keyType ? { type: keyType } : {};\n            const valOpts = valType ? { type: valType } : {};\n\n            return new xdr.ScMapEntry({\n              key: nativeToScVal(k, keyOpts),\n              val: nativeToScVal(v, valOpts)\n            });\n          })\n      );\n    }\n\n    case 'number':\n    case 'bigint':\n      switch (opts?.type) {\n        case 'u32':\n          return xdr.ScVal.scvU32(val);\n\n        case 'i32':\n          return xdr.ScVal.scvI32(val);\n\n        default:\n          break;\n      }\n\n      return new ScInt(val, { type: opts?.type }).toScVal();\n\n    case 'string': {\n      const optType = opts?.type ?? 'string';\n      switch (optType) {\n        case 'string':\n          return xdr.ScVal.scvString(val);\n\n        case 'symbol':\n          return xdr.ScVal.scvSymbol(val);\n\n        case 'address':\n          return new Address(val).toScVal();\n\n        case 'u32':\n          return xdr.ScVal.scvU32(parseInt(val, 10));\n\n        case 'i32':\n          return xdr.ScVal.scvI32(parseInt(val, 10));\n\n        default:\n          if (XdrLargeInt.isType(optType)) {\n            return new XdrLargeInt(optType, val).toScVal();\n          }\n\n          throw new TypeError(\n            `invalid type (${opts.type}) specified for string value`\n          );\n      }\n    }\n\n    case 'boolean':\n      return xdr.ScVal.scvBool(val);\n\n    case 'undefined':\n      return xdr.ScVal.scvVoid();\n\n    case 'function': // FIXME: Is this too helpful?\n      return nativeToScVal(val());\n\n    default:\n      throw new TypeError(`failed to convert typeof ${typeof val} (${val})`);\n  }\n}\n\n/**\n * Given a smart contract value, attempt to convert it to a native type.\n * Possible conversions include:\n *\n *  - void -> `null`\n *  - u32, i32 -> `number`\n *  - u64, i64, u128, i128, u256, i256 -> `bigint`\n *  - vec -> `Array` of any of the above (via recursion)\n *  - map -> key-value object of any of the above (via recursion)\n *  - bool -> `boolean`\n *  - bytes -> `Uint8Array`\n *  - symbol -> `string`\n *  - string -> `string` IF the underlying buffer can be decoded as ascii/utf8,\n *              `Uint8Array` of the raw contents in any error case\n *\n * If no viable conversion can be determined, this just \"unwraps\" the smart\n * value to return its underlying XDR value.\n *\n * @param {xdr.ScVal} scv - the input smart contract value\n *\n * @returns {any}\n * @see nativeToScVal\n */\nexport function scValToNative(scv) {\n  // we use the verbose xdr.ScValType.<type>.value form here because it's faster\n  // than string comparisons and the underlying constants never need to be\n  // updated\n  switch (scv.switch().value) {\n    case xdr.ScValType.scvVoid().value:\n      return null;\n\n    // these can be converted to bigints directly\n    case xdr.ScValType.scvU64().value:\n    case xdr.ScValType.scvI64().value:\n      return scv.value().toBigInt();\n\n    // these can be parsed by internal abstractions note that this can also\n    // handle the above two cases, but it's not as efficient (another\n    // type-check, parsing, etc.)\n    case xdr.ScValType.scvU128().value:\n    case xdr.ScValType.scvI128().value:\n    case xdr.ScValType.scvU256().value:\n    case xdr.ScValType.scvI256().value:\n      return scValToBigInt(scv);\n\n    case xdr.ScValType.scvVec().value:\n      return (scv.vec() ?? []).map(scValToNative);\n\n    case xdr.ScValType.scvAddress().value:\n      return Address.fromScVal(scv).toString();\n\n    case xdr.ScValType.scvMap().value:\n      return Object.fromEntries(\n        (scv.map() ?? []).map((entry) => [\n          scValToNative(entry.key()),\n          scValToNative(entry.val())\n        ])\n      );\n\n    // these return the primitive type directly\n    case xdr.ScValType.scvBool().value:\n    case xdr.ScValType.scvU32().value:\n    case xdr.ScValType.scvI32().value:\n    case xdr.ScValType.scvBytes().value:\n      return scv.value();\n\n    // Symbols are limited to [a-zA-Z0-9_]+, so we can safely make ascii strings\n    //\n    // Strings, however, are \"presented\" as strings and we treat them as such\n    // (in other words, string = bytes with a hint that it's text). If the user\n    // encoded non-printable bytes in their string value, that's on them.\n    //\n    // Note that we assume a utf8 encoding (ascii-compatible). For other\n    // encodings, you should probably use bytes anyway. If it cannot be decoded,\n    // the raw bytes are returned.\n    case xdr.ScValType.scvSymbol().value:\n    case xdr.ScValType.scvString().value: {\n      const v = scv.value(); // string|Buffer\n      if (Buffer.isBuffer(v) || ArrayBuffer.isView(v)) {\n        try {\n          return new TextDecoder().decode(v);\n        } catch (e) {\n          return new Uint8Array(v.buffer); // copy of bytes\n        }\n      }\n      return v; // string already\n    }\n\n    // these can be converted to bigint\n    case xdr.ScValType.scvTimepoint().value:\n    case xdr.ScValType.scvDuration().value:\n      return new xdr.Uint64(scv.value()).toBigInt();\n\n    case xdr.ScValType.scvError().value:\n      switch (scv.error().switch().value) {\n        // Distinguish errors from the user contract.\n        case xdr.ScErrorType.sceContract().value:\n          return { type: 'contract', code: scv.error().contractCode() };\n        default: {\n          const err = scv.error();\n          return {\n            type: 'system',\n            code: err.code().value,\n            value: err.code().name\n          };\n        }\n      }\n\n    // in the fallthrough case, just return the underlying value directly\n    default:\n      return scv.value();\n  }\n}\n","import xdr from './xdr';\nimport { StrKey, encodeCheck, decodeCheck } from './strkey';\n\n/**\n * A container class with helpers to convert between signer keys\n * (`xdr.SignerKey`) and {@link StrKey}s.\n *\n * It's primarly used for manipulating the `extraSigners` precondition on a\n * {@link Transaction}.\n *\n * @see {@link TransactionBuilder.setExtraSigners}\n */\nexport class SignerKey {\n  /**\n   * Decodes a StrKey address into an xdr.SignerKey instance.\n   *\n   * Only dilithium2 public keys (D...), pre-auth transactions (T...), hashes\n   * (H...), and signed payloads (P...) can be signer keys.\n   *\n   * @param   {string} address  a StrKey-encoded signer address\n   * @returns {xdr.SignerKey}\n   */\n  static decodeAddress(address) {\n    const signerKeyMap = {\n      dilithium2PublicKey: xdr.SignerKey.signerKeyTypeDilithium2,\n      preAuthTx: xdr.SignerKey.signerKeyTypePreAuthTx,\n      sha256Hash: xdr.SignerKey.signerKeyTypeHashX,\n      signedPayload: xdr.SignerKey.signerKeyTypeDilithium2SignedPayload\n    };\n\n    const vb = StrKey.getVersionByteForPrefix(address);\n    const encoder = signerKeyMap[vb];\n    if (!encoder) {\n      throw new Error(`invalid signer key type (${vb})`);\n    }\n\n    const raw = decodeCheck(vb, address);\n    switch (vb) {\n      case 'signedPayload':\n        return encoder(\n          new xdr.SignerKeyDilithium2SignedPayload({\n            dilithium2: raw.slice(0, 1312),\n            payload: raw.slice(1312 + 4)\n          })\n        );\n\n      case 'dilithium2PublicKey': // falls through\n      case 'preAuthTx': // falls through\n      case 'sha256Hash': // falls through\n      default:\n        return encoder(raw);\n    }\n  }\n\n  /**\n   * Encodes a signer key into its StrKey equivalent.\n   *\n   * @param   {xdr.SignerKey} signerKey   the signer\n   * @returns {string} the StrKey representation of the signer\n   */\n  static encodeSignerKey(signerKey) {\n    let strkeyType;\n    let raw;\n\n    switch (signerKey.switch()) {\n\n      case xdr.SignerKeyType.signerKeyTypeDilithium2():\n        strkeyType = 'dilithium2PublicKey';\n        raw = signerKey.value();\n        break;\n\n      case xdr.SignerKeyType.signerKeyTypePreAuthTx():\n        strkeyType = 'preAuthTx';\n        raw = signerKey.value();\n        break;\n\n      case xdr.SignerKeyType.signerKeyTypeHashX():\n        strkeyType = 'sha256Hash';\n        raw = signerKey.value();\n        break;\n\n      case xdr.SignerKeyType.signerKeyTypeDilithium2SignedPayload():\n        strkeyType = 'signedPayload';\n        raw = signerKey.dilithium2SignedPayload().toXDR('raw');\n        break;\n\n      default:\n        throw new Error(`invalid SignerKey (type: ${signerKey.switch()})`);\n    }\n\n    return encodeCheck(strkeyType, raw);\n  }\n}\n","import { ml_dsa44 } from '@noble/post-quantum/ml-dsa';\n\nexport const FastSigning = true;\n\n// Function to sign data using a secret key\nexport function sign(data, secretKey) {\n  data = Buffer.from(data);\n  const dataUint8  = new Uint8Array(data.toJSON().data);\n  const secretKeyUint8  = new Uint8Array(secretKey.toJSON().data);\n  const signature = ml_dsa44.sign(secretKeyUint8 , dataUint8 );\n  return Buffer.from(signature);\n}\n\n// Function to verify a signature using publicKey and data\nexport function verify(data, signature, publicKey) {\n  data = Buffer.from(data);\n  const dataUint8  = new Uint8Array(data.toJSON().data);\n  const signatureUint8  = new Uint8Array(signature.toJSON().data);\n  const publicKeyUint8  = new Uint8Array(publicKey.toJSON().data);\n  return ml_dsa44.verify( publicKeyUint8 , dataUint8 , signatureUint8 );\n}\n\n// Function to generate a public key from a seed key\nexport function generate(secretKey) {\n  const secretKeyUint8 = new Uint8Array(secretKey);\n  const aliceKeys = ml_dsa44.keygen(secretKeyUint8);\n  return Buffer.from(aliceKeys.publicKey);\n}\n\n// Function to generate a secret key from a seed key\n\nexport function generateSK(secretKey) {\n  const secretKeyUint8 = new Uint8Array(secretKey);\n  const aliceKeys = ml_dsa44.keygen(secretKeyUint8);\n  return Buffer.from(aliceKeys.secretKey);\n}","/* Helper class to assist with formatting and parsing token amounts. */\nexport class Soroban {\n  /**\n   * Given a whole number smart contract amount of a token and an amount of\n   * decimal places (if the token has any), it returns a \"display\" value.\n   *\n   * All arithmetic inside the contract is performed on integers to avoid\n   * potential precision and consistency issues of floating-point.\n   *\n   * @param {string} amount   the token amount you want to display\n   * @param {number} decimals specify how many decimal places a token has\n   *\n   * @returns {string} the display value\n   * @throws {TypeError} if the given amount has a decimal point already\n   * @example\n   * formatTokenAmount(\"123000\", 4) === \"12.3\";\n   */\n  static formatTokenAmount(amount, decimals) {\n    if (amount.includes('.')) {\n      throw new TypeError('No decimals are allowed');\n    }\n\n    let formatted = amount;\n    if (decimals > 0) {\n      if (decimals > formatted.length) {\n        formatted = ['0', formatted.toString().padStart(decimals, '0')].join(\n          '.'\n        );\n      } else {\n        formatted = [\n          formatted.slice(0, -decimals),\n          formatted.slice(-decimals)\n        ].join('.');\n      }\n    }\n\n    // remove trailing zero if any\n    return formatted.replace(/(\\.\\d*?)0+$/, '$1');\n  }\n\n  /**\n   * Parse a token amount to use it on smart contract\n   *\n   * This function takes the display value and its decimals (if the token has\n   * any) and returns a string that'll be used within the smart contract.\n   *\n   * @param {string} value      the token amount you want to use it on smart\n   *    contract which you've been displaying in a UI\n   * @param {number} decimals   the number of decimal places expected in the\n   *    display value (different than the \"actual\" number, because suffix zeroes\n   *    might not be present)\n   *\n   * @returns {string}  the whole number token amount represented by the display\n   *    value with the decimal places shifted over\n   *\n   * @example\n   * const displayValueAmount = \"123.4560\"\n   * const parsedAmtForSmartContract = parseTokenAmount(displayValueAmount, 5);\n   * parsedAmtForSmartContract === \"12345600\"\n   */\n  static parseTokenAmount(value, decimals) {\n    const [whole, fraction, ...rest] = value.split('.').slice();\n\n    if (rest.length) {\n      throw new Error(`Invalid decimal value: ${value}`);\n    }\n\n    const shifted = BigInt(\n      whole + (fraction?.padEnd(decimals, '0') ?? '0'.repeat(decimals))\n    );\n\n    return shifted.toString();\n  }\n}\n","import xdr from './xdr';\n\n/**\n * Supports building {@link xdr.SorobanTransactionData} structures with various\n * items set to specific values.\n *\n * This is recommended for when you are building\n * {@link Operation.extendFootprintTtl} / {@link Operation.restoreFootprint}\n * operations and need to {@link TransactionBuilder.setSorobanData} to avoid\n * (re)building the entire data structure from scratch.\n *\n * @constructor\n *\n * @param {string | xdr.SorobanTransactionData} [sorobanData]  either a\n *      base64-encoded string that represents an\n *      {@link xdr.SorobanTransactionData} instance or an XDR instance itself\n *      (it will be copied); if omitted or \"falsy\" (e.g. an empty string), it\n *      starts with an empty instance\n *\n * @example\n * // You want to use an existing data blob but override specific parts.\n * const newData = new SorobanDataBuilder(existing)\n *   .setReadOnly(someLedgerKeys)\n *   .setRefundableFee(\"1000\")\n *   .build();\n *\n * // You want an instance from scratch\n * const newData = new SorobanDataBuilder()\n *   .setFootprint([someLedgerKey], [])\n *   .setRefundableFee(\"1000\")\n *   .build();\n */\nexport class SorobanDataBuilder {\n  _data;\n\n  constructor(sorobanData) {\n    let data;\n\n    if (!sorobanData) {\n      data = new xdr.SorobanTransactionData({\n        resources: new xdr.SorobanResources({\n          footprint: new xdr.LedgerFootprint({ readOnly: [], readWrite: [] }),\n          instructions: 0,\n          readBytes: 0,\n          writeBytes: 0\n        }),\n        ext: new xdr.ExtensionPoint(0),\n        resourceFee: new xdr.Int64(0)\n      });\n    } else if (\n      typeof sorobanData === 'string' ||\n      ArrayBuffer.isView(sorobanData)\n    ) {\n      data = SorobanDataBuilder.fromXDR(sorobanData);\n    } else {\n      data = SorobanDataBuilder.fromXDR(sorobanData.toXDR()); // copy\n    }\n\n    this._data = data;\n  }\n\n  /**\n   * Decodes and builds a {@link xdr.SorobanTransactionData} instance.\n   * @param {Uint8Array|Buffer|string} data   raw input to decode\n   * @returns {xdr.SorobanTransactionData}\n   */\n  static fromXDR(data) {\n    return xdr.SorobanTransactionData.fromXDR(\n      data,\n      typeof data === 'string' ? 'base64' : 'raw'\n    );\n  }\n\n  /**\n   * Sets the resource fee portion of the Soroban data.\n   * @param {number | bigint | string} fee  the resource fee to set (int64)\n   * @returns {SorobanDataBuilder}\n   */\n  setResourceFee(fee) {\n    this._data.resourceFee(new xdr.Int64(fee));\n    return this;\n  }\n\n  /**\n   * Sets up the resource metrics.\n   *\n   * You should almost NEVER need this, as its often generated / provided to you\n   * by transaction simulation/preflight from a Soroban RPC server.\n   *\n   * @param {number} cpuInstrs      number of CPU instructions\n   * @param {number} readBytes      number of bytes being read\n   * @param {number} writeBytes     number of bytes being written\n   *\n   * @returns {SorobanDataBuilder}\n   */\n  setResources(cpuInstrs, readBytes, writeBytes) {\n    this._data.resources().instructions(cpuInstrs);\n    this._data.resources().readBytes(readBytes);\n    this._data.resources().writeBytes(writeBytes);\n\n    return this;\n  }\n\n  /**\n   * Appends the given ledger keys to the existing storage access footprint.\n   * @param {xdr.LedgerKey[]} readOnly   read-only keys to add\n   * @param {xdr.LedgerKey[]} readWrite  read-write keys to add\n   * @returns {SorobanDataBuilder} this builder instance\n   */\n  appendFootprint(readOnly, readWrite) {\n    return this.setFootprint(\n      this.getReadOnly().concat(readOnly),\n      this.getReadWrite().concat(readWrite)\n    );\n  }\n\n  /**\n   * Sets the storage access footprint to be a certain set of ledger keys.\n   *\n   * You can also set each field explicitly via\n   * {@link SorobanDataBuilder.setReadOnly} and\n   * {@link SorobanDataBuilder.setReadWrite} or add to the existing footprint\n   * via {@link SorobanDataBuilder.appendFootprint}.\n   *\n   * Passing `null|undefined` to either parameter will IGNORE the existing\n   * values. If you want to clear them, pass `[]`, instead.\n   *\n   * @param {xdr.LedgerKey[]|null} [readOnly]   the set of ledger keys to set in\n   *    the read-only portion of the transaction's `sorobanData`, or `null |\n   *    undefined` to keep the existing keys\n   * @param {xdr.LedgerKey[]|null} [readWrite]  the set of ledger keys to set in\n   *    the read-write portion of the transaction's `sorobanData`, or `null |\n   *    undefined` to keep the existing keys\n   * @returns {SorobanDataBuilder} this builder instance\n   */\n  setFootprint(readOnly, readWrite) {\n    if (readOnly !== null) {\n      // null means \"leave me alone\"\n      this.setReadOnly(readOnly);\n    }\n    if (readWrite !== null) {\n      this.setReadWrite(readWrite);\n    }\n    return this;\n  }\n\n  /**\n   * @param {xdr.LedgerKey[]} readOnly  read-only keys in the access footprint\n   * @returns {SorobanDataBuilder}\n   */\n  setReadOnly(readOnly) {\n    this._data\n      .resources()\n      .footprint()\n      .readOnly(readOnly ?? []);\n    return this;\n  }\n\n  /**\n   * @param {xdr.LedgerKey[]} readWrite  read-write keys in the access footprint\n   * @returns {SorobanDataBuilder}\n   */\n  setReadWrite(readWrite) {\n    this._data\n      .resources()\n      .footprint()\n      .readWrite(readWrite ?? []);\n    return this;\n  }\n\n  /**\n   * @returns {xdr.SorobanTransactionData} a copy of the final data structure\n   */\n  build() {\n    return xdr.SorobanTransactionData.fromXDR(this._data.toXDR()); // clone\n  }\n\n  //\n  // getters follow\n  //\n\n  /** @returns {xdr.LedgerKey[]} the read-only storage access pattern */\n  getReadOnly() {\n    return this.getFootprint().readOnly();\n  }\n\n  /** @returns {xdr.LedgerKey[]} the read-write storage access pattern */\n  getReadWrite() {\n    return this.getFootprint().readWrite();\n  }\n\n  /** @returns {xdr.LedgerFootprint} the storage access pattern */\n  getFootprint() {\n    return this._data.resources().footprint();\n  }\n}\n","/* eslint no-bitwise: [\"error\", {\"allow\": [\"<<\", \">>\", \"^\", \"&\", \"&=\"]}] */\n\nimport base32 from 'base32.js';\nimport { verifyChecksum } from './util/checksum';\n\nconst versionBytes = {\n  mdilithium2PublicKey: 12 << 3, // M    96\n  preAuthTx: 19 << 3, // T  = 152\n  sha256Hash: 23 << 3, // X = 184\n  signedPayload: 15 << 3, // P = 120\n  contract: 2 << 3, // C = 16\n  dilithium2PublicKey: 3 << 3, // D = 3 * 2^3 = 24\n  dilithium2SecretSeed: 4 << 3 // E = 4 * 2^3 = 32\n};\n\nconst strkeyTypes = {\n  M: 'mdilithium2PublicKey',\n  T: 'preAuthTx',\n  X: 'sha256Hash',\n  P: 'signedPayload',\n  C: 'contract',\n  D: 'dilithium2PublicKey',\n  E: 'dilithium2SecretSeed'\n};\n\n/**\n * StrKey is a helper class that allows encoding and decoding Stellar keys\n * to/from strings, i.e. between their binary (Buffer, xdr.PublicKey, etc.) and\n * string (i.e. \"GABCD...\", etc.) representations.\n */\nexport class StrKey {\n \n// Dilithium2 \n\n/**\n   * Encodes `data` to strkey dilithium2 public key.\n   *\n   * @param   {Buffer} data   raw data to encode\n   * @returns {string}        \"D...\" representation of the key\n   */\nstatic encodeDilithium2PublicKey(data) {\n  return encodeCheck('dilithium2PublicKey', data);\n}\n\n/**\n * Decodes strkey dilithium2 public key to raw data.\n *\n * If the parameter is a muxed account key (\"M...\"), this will only encode it\n * as a basic dilithium2 key (as if in \"D...\" format).\n *\n * @param   {string} data   \"D...\" (or \"M...\") key representation to decode\n * @returns {Buffer}        raw key\n */\nstatic decodeDilithium2PublicKey(data) {\n  return decodeCheck('dilithium2PublicKey', data);\n}\n\n/**\n * Returns true if the given Stellar public key is a valid dilithium2 public key.\n * @param {string} publicKey public key to check\n * @returns {boolean}\n */\nstatic isValidDilithium2PublicKey(publicKey) {\n  return isValid('dilithium2PublicKey', publicKey);\n}\n/**\n   * Encodes data to strkey dilithium2 seed.\n   * @param {Buffer} data data to encode\n   * @returns {string}\n   */\nstatic encodeDilithium2SecretSeed(data) {\n  return encodeCheck('dilithium2SecretSeed', data);\n}\n\n/**\n * Decodes strkey dilithium2 seed to raw data.\n * @param {string} address data to decode\n * @returns {Buffer}\n */\nstatic decodeDilithium2SecretSeed(address) {\n  return decodeCheck('dilithium2SecretSeed', address);\n}\n\n/**\n * Returns true if the given Stellar secret key is a valid dilithium2 secret seed.\n * @param {string} seed seed to check\n * @returns {boolean}\n */\nstatic isValidDilithium2SecretSeed(seed) {\n  return isValid('dilithium2SecretSeed', seed);\n}\n\n\n  /**\n   * Encodes data to strkey mdilithium2 public key.\n   * @param {Buffer} data data to encode\n   * @returns {string}\n   */\n  static encodeMdilithium2PublicKey(data) {\n    return encodeCheck('mdilithium2PublicKey', data);\n  }\n\n  /**\n   * Decodes strkey mdilithium2 public key to raw data.\n   * @param {string} address data to decode\n   * @returns {Buffer}\n   */\n  static decodeMdilithium2PublicKey(address) {\n    return decodeCheck('mdilithium2PublicKey', address);\n  }\n\n  /**\n   * Returns true if the given Stellar public key is a valid mdilithium2 public key.\n   * @param {string} publicKey public key to check\n   * @returns {boolean}\n   */\n  static isValidMdilithium2PublicKey(publicKey) {\n    return isValid('mdilithium2PublicKey', publicKey);\n  }\n\n  /**\n   * Encodes data to strkey preAuthTx.\n   * @param {Buffer} data data to encode\n   * @returns {string}\n   */\n  static encodePreAuthTx(data) {\n    return encodeCheck('preAuthTx', data);\n  }\n\n  /**\n   * Decodes strkey PreAuthTx to raw data.\n   * @param {string} address data to decode\n   * @returns {Buffer}\n   */\n  static decodePreAuthTx(address) {\n    return decodeCheck('preAuthTx', address);\n  }\n\n  /**\n   * Encodes data to strkey sha256 hash.\n   * @param {Buffer} data data to encode\n   * @returns {string}\n   */\n  static encodeSha256Hash(data) {\n    return encodeCheck('sha256Hash', data);\n  }\n\n  /**\n   * Decodes strkey sha256 hash to raw data.\n   * @param {string} address data to decode\n   * @returns {Buffer}\n   */\n  static decodeSha256Hash(address) {\n    return decodeCheck('sha256Hash', address);\n  }\n\n  /**\n   * Encodes raw data to strkey signed payload (P...).\n   * @param   {Buffer} data  data to encode\n   * @returns {string}\n   */\n  static encodeSignedPayload(data) {\n    return encodeCheck('signedPayload', data);\n  }\n\n  /**\n   * Decodes strkey signed payload (P...) to raw data.\n   * @param   {string} address  address to decode\n   * @returns {Buffer}\n   */\n  static decodeSignedPayload(address) {\n    return decodeCheck('signedPayload', address);\n  }\n\n  /**\n   * Checks validity of alleged signed payload (P...) strkey address.\n   * @param   {string} address  signer key to check\n   * @returns {boolean}\n   */\n  static isValidSignedPayload(address) {\n    return isValid('signedPayload', address);\n  }\n\n  /**\n   * Encodes raw data to strkey contract (C...).\n   * @param   {Buffer} data  data to encode\n   * @returns {string}\n   */\n  static encodeContract(data) {\n    return encodeCheck('contract', data);\n  }\n\n  /**\n   * Decodes strkey contract (C...) to raw data.\n   * @param   {string} address  address to decode\n   * @returns {Buffer}\n   */\n  static decodeContract(address) {\n    return decodeCheck('contract', address);\n  }\n\n  /**\n   * Checks validity of alleged contract (C...) strkey address.\n   * @param   {string} address  signer key to check\n   * @returns {boolean}\n   */\n  static isValidContract(address) {\n    return isValid('contract', address);\n  }\n\n  static getVersionByteForPrefix(address) {\n    return strkeyTypes[address[0]];\n  }\n}\n\n/**\n * Sanity-checks whether or not a strkey *appears* valid.\n *\n * @param  {string}  versionByteName the type of strkey to expect in `encoded`\n * @param  {string}  encoded         the strkey to validate\n *\n * @return {Boolean} whether or not the `encoded` strkey appears valid for the\n *     `versionByteName` strkey type (see `versionBytes`, above).\n *\n * @note This isn't a *definitive* check of validity, but rather a best-effort\n *     check based on (a) input length, (b) whether or not it can be decoded,\n *     and (c) output length.\n */\nfunction isValid(versionByteName, encoded) {\n  if (typeof encoded !== 'string') {\n    return false;\n  }\n\n  // basic length checks on the strkey lengths\n  switch (versionByteName) {\n    case 'preAuthTx': // falls through\n    case 'sha256Hash': // falls through\n    case 'contract':\n      if (encoded.length !== 2104) {\n        return false;\n      }\n      break;\n\n    // Base32 5 byte = 8 charecter  so (1312 + 2 + 1) * 8 / 5 = 2104  \n    case 'dilithium2PublicKey': // falls through\n      if (encoded.length !== 2104) {\n        return false;\n      }\n      break;\n\n    // Base32 5 byte = 8 charecter  so (32+1+2) * 8 / 5 = 56 \n    case 'dilithium2SecretSeed': // falls through\n    if (encoded.length !== 56 ) {\n      return false;\n    }\n    break;\n    // 1312 + 8 = 1320  => (1320+3)*8/5=2117\n    case 'medilithium2PublicKey':\n      if (encoded.length !== 2117) {\n        return false;\n      }\n      break;\n\n    case 'signedPayload':\n      if (encoded.length < 2117 || encoded.length > 5983) {\n        return false;\n      }\n      break;\n\n    default:\n      return false;\n  }\n\n  let decoded = '';\n  try {\n    decoded = decodeCheck(versionByteName, encoded);\n  } catch (err) {\n    return false;\n  }\n\n  // basic length checks on the resulting buffer sizes\n  switch (versionByteName) {\n    case 'preAuthTx': // falls through\n    case 'sha256Hash': // falls through\n    case 'contract':\n      return decoded.length === 1312;\n\n    // Dilithium2  PublicKey = 1312 byte  \n    case 'dilithium2PublicKey': // falls through\n      return decoded.length === 1312;\n\n    // Dilithium2  SecretSeed = 32 byte  \n    case 'dilithium2SecretSeed': // falls through\n      return decoded.length === 32;\n\n    case 'mdilithium2PublicKey':\n      return decoded.length === 1320; // +8 bytes for the ID\n\n    case 'signedPayload':\n      return (\n        // 32 for the signer, +4 for the payload size, then either +4 for the\n        // min or +64 for the max payload\n        decoded.length >= 1312 + 4 + 4 && decoded.length <= 1312 + 4 + 2420\n      );\n\n    default:\n      return false;\n  }\n}\n\nexport function decodeCheck(versionByteName, encoded) {\n  if (typeof encoded !== 'string') {\n    throw new TypeError('encoded argument must be of type String');\n  }\n\n  const decoded = base32.decode(encoded);\n  const versionByte = decoded[0];\n  const payload = decoded.slice(0, -2);\n  const data = payload.slice(1);\n  const checksum = decoded.slice(-2);\n\n  if (encoded !== base32.encode(decoded)) {\n    throw new Error('invalid encoded string');\n  }\n\n  const expectedVersion = versionBytes[versionByteName];\n\n  if (expectedVersion === undefined) {\n    throw new Error(\n      `${versionByteName} is not a valid version byte name. ` +\n        `Expected one of ${Object.keys(versionBytes).join(', ')}`\n    );\n  }\n\n  if (versionByte !== expectedVersion) {\n    throw new Error(\n      `invalid version byte. expected ${expectedVersion}, got ${versionByte}`\n    );\n  }\n\n  const expectedChecksum = calculateChecksum(payload);\n\n  if (!verifyChecksum(expectedChecksum, checksum)) {\n    throw new Error(`invalid checksum`);\n  }\n\n  return Buffer.from(data);\n}\n\nexport function encodeCheck(versionByteName, data) {\n  if (data === null || data === undefined) {\n    throw new Error('cannot encode null data');\n  }\n\n  const versionByte = versionBytes[versionByteName];\n\n  if (versionByte === undefined) {\n    throw new Error(\n      `${versionByteName} is not a valid version byte name. ` +\n        `Expected one of ${Object.keys(versionBytes).join(', ')}`\n    );\n  }\n  data = Buffer.from(data);\n\n  const versionBuffer = Buffer.from([versionByte]);\n  const payload = Buffer.concat([versionBuffer, data]);\n  const checksum = Buffer.from(calculateChecksum(payload));\n  const unencoded = Buffer.concat([payload, checksum]);\n  return base32.encode(unencoded);\n}\n\n// Computes the CRC16-XModem checksum of `payload` in little-endian order\nfunction calculateChecksum(payload) {\n  const crcTable = [\n    0x0000, 0x1021, 0x2042, 0x3063, 0x4084, 0x50a5, 0x60c6, 0x70e7, 0x8108,\n    0x9129, 0xa14a, 0xb16b, 0xc18c, 0xd1ad, 0xe1ce, 0xf1ef, 0x1231, 0x0210,\n    0x3273, 0x2252, 0x52b5, 0x4294, 0x72f7, 0x62d6, 0x9339, 0x8318, 0xb37b,\n    0xa35a, 0xd3bd, 0xc39c, 0xf3ff, 0xe3de, 0x2462, 0x3443, 0x0420, 0x1401,\n    0x64e6, 0x74c7, 0x44a4, 0x5485, 0xa56a, 0xb54b, 0x8528, 0x9509, 0xe5ee,\n    0xf5cf, 0xc5ac, 0xd58d, 0x3653, 0x2672, 0x1611, 0x0630, 0x76d7, 0x66f6,\n    0x5695, 0x46b4, 0xb75b, 0xa77a, 0x9719, 0x8738, 0xf7df, 0xe7fe, 0xd79d,\n    0xc7bc, 0x48c4, 0x58e5, 0x6886, 0x78a7, 0x0840, 0x1861, 0x2802, 0x3823,\n    0xc9cc, 0xd9ed, 0xe98e, 0xf9af, 0x8948, 0x9969, 0xa90a, 0xb92b, 0x5af5,\n    0x4ad4, 0x7ab7, 0x6a96, 0x1a71, 0x0a50, 0x3a33, 0x2a12, 0xdbfd, 0xcbdc,\n    0xfbbf, 0xeb9e, 0x9b79, 0x8b58, 0xbb3b, 0xab1a, 0x6ca6, 0x7c87, 0x4ce4,\n    0x5cc5, 0x2c22, 0x3c03, 0x0c60, 0x1c41, 0xedae, 0xfd8f, 0xcdec, 0xddcd,\n    0xad2a, 0xbd0b, 0x8d68, 0x9d49, 0x7e97, 0x6eb6, 0x5ed5, 0x4ef4, 0x3e13,\n    0x2e32, 0x1e51, 0x0e70, 0xff9f, 0xefbe, 0xdfdd, 0xcffc, 0xbf1b, 0xaf3a,\n    0x9f59, 0x8f78, 0x9188, 0x81a9, 0xb1ca, 0xa1eb, 0xd10c, 0xc12d, 0xf14e,\n    0xe16f, 0x1080, 0x00a1, 0x30c2, 0x20e3, 0x5004, 0x4025, 0x7046, 0x6067,\n    0x83b9, 0x9398, 0xa3fb, 0xb3da, 0xc33d, 0xd31c, 0xe37f, 0xf35e, 0x02b1,\n    0x1290, 0x22f3, 0x32d2, 0x4235, 0x5214, 0x6277, 0x7256, 0xb5ea, 0xa5cb,\n    0x95a8, 0x8589, 0xf56e, 0xe54f, 0xd52c, 0xc50d, 0x34e2, 0x24c3, 0x14a0,\n    0x0481, 0x7466, 0x6447, 0x5424, 0x4405, 0xa7db, 0xb7fa, 0x8799, 0x97b8,\n    0xe75f, 0xf77e, 0xc71d, 0xd73c, 0x26d3, 0x36f2, 0x0691, 0x16b0, 0x6657,\n    0x7676, 0x4615, 0x5634, 0xd94c, 0xc96d, 0xf90e, 0xe92f, 0x99c8, 0x89e9,\n    0xb98a, 0xa9ab, 0x5844, 0x4865, 0x7806, 0x6827, 0x18c0, 0x08e1, 0x3882,\n    0x28a3, 0xcb7d, 0xdb5c, 0xeb3f, 0xfb1e, 0x8bf9, 0x9bd8, 0xabbb, 0xbb9a,\n    0x4a75, 0x5a54, 0x6a37, 0x7a16, 0x0af1, 0x1ad0, 0x2ab3, 0x3a92, 0xfd2e,\n    0xed0f, 0xdd6c, 0xcd4d, 0xbdaa, 0xad8b, 0x9de8, 0x8dc9, 0x7c26, 0x6c07,\n    0x5c64, 0x4c45, 0x3ca2, 0x2c83, 0x1ce0, 0x0cc1, 0xef1f, 0xff3e, 0xcf5d,\n    0xdf7c, 0xaf9b, 0xbfba, 0x8fd9, 0x9ff8, 0x6e17, 0x7e36, 0x4e55, 0x5e74,\n    0x2e93, 0x3eb2, 0x0ed1, 0x1ef0\n  ];\n\n  let crc16 = 0x0;\n\n  for (let i = 0; i < payload.length; i += 1) {\n    const byte = payload[i];\n    const lookupIndex = (crc16 >> 8) ^ byte;\n    crc16 = (crc16 << 8) ^ crcTable[lookupIndex];\n    crc16 &= 0xffff;\n  }\n  const checksum = new Uint8Array(2);\n  checksum[0] = crc16 & 0xff;\n  checksum[1] = (crc16 >> 8) & 0xff;\n  return checksum;\n}\n","import xdr from './xdr';\nimport { hash } from './hashing';\n\nimport { StrKey } from './strkey';\nimport { Operation } from './operation';\nimport { Memo } from './memo';\nimport { TransactionBase } from './transaction_base';\nimport {\n  extractBaseAddress,\n  encodeMuxedAccountToAddress\n} from './util/decode_encode_muxed_account';\n\n/**\n * Use {@link TransactionBuilder} to build a transaction object. If you have an\n * object or base64-encoded string of the transaction envelope XDR, use {@link\n * TransactionBuilder.fromXDR}.\n *\n * Once a Transaction has been created, its attributes and operations should not\n * be changed. You should only add signatures (using {@link Transaction#sign})\n * to a Transaction object before submitting to the network or forwarding on to\n * additional signers.\n *\n * @constructor\n *\n * @param {string|xdr.TransactionEnvelope} envelope - transaction envelope\n *     object or base64 encoded string\n * @param {string}  [networkPassphrase] - passphrase of the target stellar\n *     network (e.g. \"Public Global Stellar Network ; September 2015\")\n *\n * @extends TransactionBase\n */\nexport class Transaction extends TransactionBase {\n  constructor(envelope, networkPassphrase) {\n    if (typeof envelope === 'string') {\n      const buffer = Buffer.from(envelope, 'base64');\n      envelope = xdr.TransactionEnvelope.fromXDR(buffer);\n    }\n\n    const envelopeType = envelope.switch();\n    if (\n      !(\n        envelopeType === xdr.EnvelopeType.envelopeTypeTxV0() ||\n        envelopeType === xdr.EnvelopeType.envelopeTypeTx()\n      )\n    ) {\n      throw new Error(\n        `Invalid TransactionEnvelope: expected an envelopeTypeTxV0 or envelopeTypeTx but received an ${envelopeType.name}.`\n      );\n    }\n\n    const txEnvelope = envelope.value();\n    const tx = txEnvelope.tx();\n    const fee = tx.fee().toString();\n    const signatures = (txEnvelope.signatures() || []).slice();\n\n    super(tx, signatures, fee, networkPassphrase);\n\n    this._envelopeType = envelopeType;\n    this._memo = tx.memo();\n    this._sequence = tx.seqNum().toString();\n\n    switch (this._envelopeType) {\n      case xdr.EnvelopeType.envelopeTypeTxV0():\n        this._source = StrKey.encodeDilithium2PublicKey(\n          this.tx.sourceAccountDilithium2()\n        );\n        break;\n      default:\n        this._source = encodeMuxedAccountToAddress(this.tx.sourceAccount());\n        break;\n    }\n\n    let cond = null;\n    let timeBounds = null;\n    switch (this._envelopeType) {\n      case xdr.EnvelopeType.envelopeTypeTxV0():\n        timeBounds = tx.timeBounds();\n        break;\n\n      case xdr.EnvelopeType.envelopeTypeTx():\n        switch (tx.cond().switch()) {\n          case xdr.PreconditionType.precondTime():\n            timeBounds = tx.cond().timeBounds();\n            break;\n\n          case xdr.PreconditionType.precondV2():\n            cond = tx.cond().v2();\n            timeBounds = cond.timeBounds();\n            break;\n\n          default:\n            break;\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    if (timeBounds) {\n      this._timeBounds = {\n        minTime: timeBounds.minTime().toString(),\n        maxTime: timeBounds.maxTime().toString()\n      };\n    }\n\n    if (cond) {\n      const ledgerBounds = cond.ledgerBounds();\n      if (ledgerBounds) {\n        this._ledgerBounds = {\n          minLedger: ledgerBounds.minLedger(),\n          maxLedger: ledgerBounds.maxLedger()\n        };\n      }\n\n      const minSeq = cond.minSeqNum();\n      if (minSeq) {\n        this._minAccountSequence = minSeq.toString();\n      }\n\n      this._minAccountSequenceAge = cond.minSeqAge();\n      this._minAccountSequenceLedgerGap = cond.minSeqLedgerGap();\n      this._extraSigners = cond.extraSigners();\n    }\n\n    const operations = tx.operations() || [];\n    this._operations = operations.map((op) => Operation.fromXDRObject(op));\n  }\n\n  /**\n   * @type {object}\n   * @property {string} 64 bit unix timestamp\n   * @property {string} 64 bit unix timestamp\n   * @readonly\n   */\n  get timeBounds() {\n    return this._timeBounds;\n  }\n  set timeBounds(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * @type {object}\n   * @property {number} minLedger - smallest ledger bound (uint32)\n   * @property {number} maxLedger - largest ledger bound (or 0 for inf)\n   * @readonly\n   */\n  get ledgerBounds() {\n    return this._ledgerBounds;\n  }\n  set ledgerBounds(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * 64 bit account sequence\n   * @readonly\n   * @type {string}\n   */\n  get minAccountSequence() {\n    return this._minAccountSequence;\n  }\n  set minAccountSequence(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * 64 bit number of seconds\n   * @type {number}\n   * @readonly\n   */\n  get minAccountSequenceAge() {\n    return this._minAccountSequenceAge;\n  }\n  set minAccountSequenceAge(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * 32 bit number of ledgers\n   * @type {number}\n   * @readonly\n   */\n  get minAccountSequenceLedgerGap() {\n    return this._minAccountSequenceLedgerGap;\n  }\n  set minAccountSequenceLedgerGap(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * array of extra signers ({@link StrKey}s)\n   * @type {string[]}\n   * @readonly\n   */\n  get extraSigners() {\n    return this._extraSigners;\n  }\n  set extraSigners(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * @type {string}\n   * @readonly\n   */\n  get sequence() {\n    return this._sequence;\n  }\n  set sequence(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * @type {string}\n   * @readonly\n   */\n  get source() {\n    return this._source;\n  }\n  set source(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * @type {Array.<xdr.Operation>}\n   * @readonly\n   */\n  get operations() {\n    return this._operations;\n  }\n  set operations(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * @type {string}\n   * @readonly\n   */\n  get memo() {\n    return Memo.fromXDRObject(this._memo);\n  }\n  set memo(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * Returns the \"signature base\" of this transaction, which is the value\n   * that, when hashed, should be signed to create a signature that\n   * validators on the Stellar Network will accept.\n   *\n   * It is composed of a 4 prefix bytes followed by the xdr-encoded form\n   * of this transaction.\n   * @returns {Buffer}\n   */\n  signatureBase() {\n    let tx = this.tx;\n\n    // Backwards Compatibility: Use ENVELOPE_TYPE_TX to sign ENVELOPE_TYPE_TX_V0\n    // we need a Transaction to generate the signature base\n    if (this._envelopeType === xdr.EnvelopeType.envelopeTypeTxV0()) {\n      tx = xdr.Transaction.fromXDR(\n        Buffer.concat([\n          // TransactionV0 is a transaction with the AccountID discriminant\n          // stripped off, we need to put it back to build a valid transaction\n          // which we can use to build a TransactionSignaturePayloadTaggedTransaction\n          xdr.PublicKeyType.publicKeyTypeDilithium2().toXDR(),\n          tx.toXDR()\n        ])\n      );\n    }\n\n    const taggedTransaction =\n      new xdr.TransactionSignaturePayloadTaggedTransaction.envelopeTypeTx(tx);\n\n    const txSignature = new xdr.TransactionSignaturePayload({\n      networkId: xdr.Hash.fromXDR(hash(this.networkPassphrase)),\n      taggedTransaction\n    });\n\n    return txSignature.toXDR();\n  }\n\n  /**\n   * To envelope returns a xdr.TransactionEnvelope which can be submitted to the network.\n   * @returns {xdr.TransactionEnvelope}\n   */\n  toEnvelope() {\n    const rawTx = this.tx.toXDR();\n    const signatures = this.signatures.slice(); // make a copy of the signatures\n\n    let envelope;\n    switch (this._envelopeType) {\n      case xdr.EnvelopeType.envelopeTypeTxV0():\n        envelope = new xdr.TransactionEnvelope.envelopeTypeTxV0(\n          new xdr.TransactionV0Envelope({\n            tx: xdr.TransactionV0.fromXDR(rawTx), // make a copy of tx\n            signatures\n          })\n        );\n        break;\n      case xdr.EnvelopeType.envelopeTypeTx():\n        envelope = new xdr.TransactionEnvelope.envelopeTypeTx(\n          new xdr.TransactionV1Envelope({\n            tx: xdr.Transaction.fromXDR(rawTx), // make a copy of tx\n            signatures\n          })\n        );\n        break;\n      default:\n        throw new Error(\n          `Invalid TransactionEnvelope: expected an envelopeTypeTxV0 or envelopeTypeTx but received an ${this._envelopeType.name}.`\n        );\n    }\n\n    return envelope;\n  }\n\n  /**\n   * Calculate the claimable balance ID for an operation within the transaction.\n   *\n   * @param   {integer}  opIndex   the index of the CreateClaimableBalance op\n   * @returns {string}   a hex string representing the claimable balance ID\n   *\n   * @throws {RangeError}   for invalid `opIndex` value\n   * @throws {TypeError}    if op at `opIndex` is not `CreateClaimableBalance`\n   * @throws for general XDR un/marshalling failures\n   *\n   * @see https://github.com/stellar/go/blob/d712346e61e288d450b0c08038c158f8848cc3e4/txnbuild/transaction.go#L392-L435\n   *\n   */\n  getClaimableBalanceId(opIndex) {\n    // Validate and then extract the operation from the transaction.\n    if (\n      !Number.isInteger(opIndex) ||\n      opIndex < 0 ||\n      opIndex >= this.operations.length\n    ) {\n      throw new RangeError('invalid operation index');\n    }\n\n    let op = this.operations[opIndex];\n    try {\n      op = Operation.createClaimableBalance(op);\n    } catch (err) {\n      throw new TypeError(\n        `expected createClaimableBalance, got ${op.type}: ${err}`\n      );\n    }\n\n    // Always use the transaction's *unmuxed* source.\n    const account = StrKey.decodeDilithium2PublicKey(\n      extractBaseAddress(this.source)\n    );\n    const operationId = xdr.HashIdPreimage.envelopeTypeOpId(\n      new xdr.HashIdPreimageOperationId({\n        sourceAccount: xdr.AccountId.publicKeyTypeDilithium2(account),\n        seqNum: xdr.SequenceNumber.fromString(this.sequence),\n        opNum: opIndex\n      })\n    );\n\n    const opIdHash = hash(operationId.toXDR('raw'));\n    const balanceId = xdr.ClaimableBalanceId.claimableBalanceIdTypeV0(opIdHash);\n    return balanceId.toXDR('hex');\n  }\n}\n","import xdr from './xdr';\nimport { hash } from './hashing';\nimport { Keypair } from './keypair';\n\n/**\n * @ignore\n */\nexport class TransactionBase {\n  constructor(tx, signatures, fee, networkPassphrase) {\n    if (typeof networkPassphrase !== 'string') {\n      throw new Error(\n        `Invalid passphrase provided to Transaction: expected a string but got a ${typeof networkPassphrase}`\n      );\n    }\n\n    this._networkPassphrase = networkPassphrase;\n    this._tx = tx;\n    this._signatures = signatures;\n    this._fee = fee;\n  }\n\n  /**\n   * @type {Array.<xdr.DecoratedSignature>}\n   * @readonly\n   */\n  get signatures() {\n    return this._signatures;\n  }\n\n  set signatures(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  get tx() {\n    return this._tx;\n  }\n\n  set tx(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * @type {string}\n   * @readonly\n   */\n  get fee() {\n    return this._fee;\n  }\n\n  set fee(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * @type {string}\n   * @readonly\n   */\n  get networkPassphrase() {\n    return this._networkPassphrase;\n  }\n\n  set networkPassphrase(networkPassphrase) {\n    this._networkPassphrase = networkPassphrase;\n  }\n\n  /**\n   * Signs the transaction with the given {@link Keypair}.\n   * @param {...Keypair} keypairs Keypairs of signers\n   * @returns {void}\n   */\n  sign(...keypairs) {\n    const txHash = this.hash();\n    keypairs.forEach((kp) => {\n      const sig = kp.signDecorated(txHash);\n      this.signatures.push(sig);\n    });\n  }\n\n  /**\n   * Signs a transaction with the given {@link Keypair}. Useful if someone sends\n   * you a transaction XDR for you to sign and return (see\n   * [addSignature](#addSignature) for more information).\n   *\n   * When you get a transaction XDR to sign....\n   * - Instantiate a `Transaction` object with the XDR\n   * - Use {@link Keypair} to generate a keypair object for your Stellar seed.\n   * - Run `getKeypairSignature` with that keypair\n   * - Send back the signature along with your publicKey (not your secret seed!)\n   *\n   * Example:\n   * ```javascript\n   * // `transactionXDR` is a string from the person generating the transaction\n   * const transaction = new Transaction(transactionXDR, networkPassphrase);\n   * const keypair = Keypair.fromSecret(myStellarSeed);\n   * return transaction.getKeypairSignature(keypair);\n   * ```\n   *\n   * @param {Keypair} keypair Keypair of signer\n   * @returns {string} Signature string\n   */\n  getKeypairSignature(keypair) {\n    return keypair.sign(this.hash()).toString('base64');\n  }\n\n  /**\n   * Add a signature to the transaction. Useful when a party wants to pre-sign\n   * a transaction but doesn't want to give access to their secret keys.\n   * This will also verify whether the signature is valid.\n   *\n   * Here's how you would use this feature to solicit multiple signatures.\n   * - Use `TransactionBuilder` to build a new transaction.\n   * - Make sure to set a long enough timeout on that transaction to give your\n   * signers enough time to sign!\n   * - Once you build the transaction, use `transaction.toXDR()` to get the\n   * base64-encoded XDR string.\n   * - _Warning!_ Once you've built this transaction, don't submit any other\n   * transactions onto your account! Doing so will invalidate this pre-compiled\n   * transaction!\n   * - Send this XDR string to your other parties. They can use the instructions\n   * for [getKeypairSignature](#getKeypairSignature) to sign the transaction.\n   * - They should send you back their `publicKey` and the `signature` string\n   * from [getKeypairSignature](#getKeypairSignature), both of which you pass to\n   * this function.\n   *\n   * @param {string} publicKey The public key of the signer\n   * @param {string} signature The base64 value of the signature XDR\n   * @returns {void}\n   */\n  addSignature(publicKey = '', signature = '') {\n    if (!signature || typeof signature !== 'string') {\n      throw new Error('Invalid signature');\n    }\n\n    if (!publicKey || typeof publicKey !== 'string') {\n      throw new Error('Invalid publicKey');\n    }\n\n    let keypair;\n    let hint;\n    const signatureBuffer = Buffer.from(signature, 'base64');\n\n    try {\n      keypair = Keypair.fromPublicKey(publicKey);\n      hint = keypair.signatureHint();\n    } catch (e) {\n      throw new Error('Invalid publicKey');\n    }\n\n    if (!keypair.verify(this.hash(), signatureBuffer)) {\n      throw new Error('Invalid signature');\n    }\n\n    this.signatures.push(\n      new xdr.DecoratedSignature({\n        hint,\n        signature: signatureBuffer\n      })\n    );\n  }\n\n  /**\n   * Add a decorated signature directly to the transaction envelope.\n   *\n   * @param {xdr.DecoratedSignature} signature    raw signature to add\n   * @returns {void}\n   *\n   * @see Keypair.signDecorated\n   * @see Keypair.signPayloadDecorated\n   */\n  addDecoratedSignature(signature) {\n    this.signatures.push(signature);\n  }\n\n  /**\n   * Add `hashX` signer preimage as signature.\n   * @param {Buffer|String} preimage Preimage of hash used as signer\n   * @returns {void}\n   */\n  signHashX(preimage) {\n    if (typeof preimage === 'string') {\n      preimage = Buffer.from(preimage, 'hex');\n    }\n\n    if (preimage.length > 64) {\n      throw new Error('preimage cannnot be longer than 64 bytes');\n    }\n\n    const signature = preimage;\n    const hashX = hash(preimage);\n    const hint = hashX.slice(hashX.length - 4);\n    this.signatures.push(new xdr.DecoratedSignature({ hint, signature }));\n  }\n\n  /**\n   * Returns a hash for this transaction, suitable for signing.\n   * @returns {Buffer}\n   */\n  hash() {\n    return hash(this.signatureBase());\n  }\n\n  signatureBase() {\n    throw new Error('Implement in subclass');\n  }\n\n  toEnvelope() {\n    throw new Error('Implement in subclass');\n  }\n\n  /**\n   * Get the transaction envelope as a base64-encoded string\n   * @returns {string} XDR string\n   */\n  toXDR() {\n    return this.toEnvelope().toXDR().toString('base64');\n  }\n}\n","import { UnsignedHyper } from '@stellar/js-xdr';\nimport BigNumber from './util/bignumber';\n\nimport xdr from './xdr';\n\nimport { Account } from './account';\nimport { MuxedAccount } from './muxed_account';\nimport { decodeAddressToMuxedAccount } from './util/decode_encode_muxed_account';\n\nimport { Transaction } from './transaction';\nimport { FeeBumpTransaction } from './fee_bump_transaction';\nimport { SorobanDataBuilder } from './sorobandata_builder';\n\nimport { StrKey } from './strkey';\nimport { SignerKey } from './signerkey';\nimport { Memo } from './memo';\n\n/**\n * Minimum base fee for transactions. If this fee is below the network\n * minimum, the transaction will fail. The more operations in the\n * transaction, the greater the required fee. Use {@link\n * Server#fetchBaseFee} to get an accurate value of minimum transaction\n * fee on the network.\n *\n * @constant\n * @see [Fees](https://developers.stellar.org/docs/glossary/fees/)\n */\nexport const BASE_FEE = '100'; // Stroops\n\n/**\n * @constant\n * @see {@link TransactionBuilder#setTimeout}\n * @see [Timeout](https://developers.stellar.org/api/resources/transactions/post/)\n */\nexport const TimeoutInfinite = 0;\n\n/**\n * <p>Transaction builder helps constructs a new `{@link Transaction}` using the\n * given {@link Account} as the transaction's \"source account\". The transaction\n * will use the current sequence number of the given account as its sequence\n * number and increment the given account's sequence number by one. The given\n * source account must include a private key for signing the transaction or an\n * error will be thrown.</p>\n *\n * <p>Operations can be added to the transaction via their corresponding builder\n * methods, and each returns the TransactionBuilder object so they can be\n * chained together. After adding the desired operations, call the `build()`\n * method on the `TransactionBuilder` to return a fully constructed `{@link\n * Transaction}` that can be signed. The returned transaction will contain the\n * sequence number of the source account and include the signature from the\n * source account.</p>\n *\n * <p><strong>Be careful about unsubmitted transactions!</strong> When you build\n * a transaction, `stellar-sdk` automatically increments the source account's\n * sequence number. If you end up not submitting this transaction and submitting\n * another one instead, it'll fail due to the sequence number being wrong. So if\n * you decide not to use a built transaction, make sure to update the source\n * account's sequence number with\n * [Server.loadAccount](https://stellar.github.io/js-stellar-sdk/Server.html#loadAccount)\n * before creating another transaction.</p>\n *\n * <p>The following code example creates a new transaction with {@link\n * Operation.createAccount} and {@link Operation.payment} operations. The\n * Transaction's source account first funds `destinationA`, then sends a payment\n * to `destinationB`. The built transaction is then signed by\n * `sourceKeypair`.</p>\n *\n * ```\n * var transaction = new TransactionBuilder(source, { fee, networkPassphrase: Networks.TESTNET })\n * .addOperation(Operation.createAccount({\n *     destination: destinationA,\n *     startingBalance: \"20\"\n * })) // <- funds and creates destinationA\n * .addOperation(Operation.payment({\n *     destination: destinationB,\n *     amount: \"100\",\n *     asset: Asset.native()\n * })) // <- sends 100 XLM to destinationB\n * .setTimeout(30)\n * .build();\n *\n * transaction.sign(sourceKeypair);\n * ```\n *\n * @constructor\n *\n * @param {Account} sourceAccount - source account for this transaction\n * @param {object}  opts          - Options object\n * @param {string}  opts.fee      - max fee you're willing to pay per\n *     operation in this transaction (**in stroops**)\n *\n * @param {object}              [opts.timebounds] - timebounds for the\n *     validity of this transaction\n * @param {number|string|Date}  [opts.timebounds.minTime] - 64-bit UNIX\n *     timestamp or Date object\n * @param {number|string|Date}  [opts.timebounds.maxTime] - 64-bit UNIX\n *     timestamp or Date object\n * @param {object}              [opts.ledgerbounds] - ledger bounds for the\n *     validity of this transaction\n * @param {number}              [opts.ledgerbounds.minLedger] - number of the minimum\n *     ledger sequence\n * @param {number}              [opts.ledgerbounds.maxLedger] - number of the maximum\n *     ledger sequence\n * @param {string}              [opts.minAccountSequence] - number for\n *     the minimum account sequence\n * @param {number}              [opts.minAccountSequenceAge] - number of\n *     seconds for the minimum account sequence age\n * @param {number}              [opts.minAccountSequenceLedgerGap] - number of\n *     ledgers for the minimum account sequence ledger gap\n * @param {string[]}            [opts.extraSigners] - list of the extra signers\n *     required for this transaction\n * @param {Memo}                [opts.memo] - memo for the transaction\n * @param {string}              [opts.networkPassphrase] passphrase of the\n *     target Stellar network (e.g. \"Public Global Stellar Network ; September\n *     2015\" for the pubnet)\n * @param {xdr.SorobanTransactionData | string}  [opts.sorobanData] - an\n *     optional instance of {@link xdr.SorobanTransactionData} to be set as the\n *     internal `Transaction.Ext.SorobanData` field (either the xdr object or a\n *     base64 string). In the case of Soroban transactions, this can be obtained\n *     from a prior simulation of the transaction with a contract invocation and\n *     provides necessary resource estimations. You can also use\n *     {@link SorobanDataBuilder} to construct complicated combinations of\n *     parameters without mucking with XDR directly. **Note:** For\n *     non-contract(non-Soroban) transactions, this has no effect.\n */\nexport class TransactionBuilder {\n  constructor(sourceAccount, opts = {}) {\n    if (!sourceAccount) {\n      throw new Error('must specify source account for the transaction');\n    }\n\n    if (opts.fee === undefined) {\n      throw new Error('must specify fee for the transaction (in stroops)');\n    }\n\n    this.source = sourceAccount;\n    this.operations = [];\n\n    this.baseFee = opts.fee;\n    this.timebounds = opts.timebounds ? { ...opts.timebounds } : null;\n    this.ledgerbounds = opts.ledgerbounds ? { ...opts.ledgerbounds } : null;\n    this.minAccountSequence = opts.minAccountSequence || null;\n    this.minAccountSequenceAge = opts.minAccountSequenceAge || null;\n    this.minAccountSequenceLedgerGap = opts.minAccountSequenceLedgerGap || null;\n    this.extraSigners = opts.extraSigners ? [...opts.extraSigners] : null;\n    this.memo = opts.memo || Memo.none();\n    this.networkPassphrase = opts.networkPassphrase || null;\n\n    this.sorobanData = opts.sorobanData\n      ? new SorobanDataBuilder(opts.sorobanData).build()\n      : null;\n  }\n\n  /**\n   * Creates a builder instance using an existing {@link Transaction} as a\n   * template, ignoring any existing envelope signatures.\n   *\n   * Note that the sequence number WILL be cloned, so EITHER this transaction or\n   * the one it was cloned from will be valid. This is useful in situations\n   * where you are constructing a transaction in pieces and need to make\n   * adjustments as you go (for example, when filling out Soroban resource\n   * information).\n   *\n   * @param {Transaction} tx  a \"template\" transaction to clone exactly\n   * @param {object} [opts]   additional options to override the clone, e.g.\n   *    {fee: '1000'} will override the existing base fee derived from `tx` (see\n   *    the {@link TransactionBuilder} constructor for detailed options)\n   *\n   * @returns {TransactionBuilder} a \"prepared\" builder instance with the same\n   *    configuration and operations as the given transaction\n   *\n   * @warning This does not clone the transaction's\n   *    {@link xdr.SorobanTransactionData} (if applicable), use\n   *    {@link SorobanDataBuilder} and {@link TransactionBuilder.setSorobanData}\n   *    as needed, instead..\n   *\n   * @todo This cannot clone {@link FeeBumpTransaction}s, yet.\n   */\n  static cloneFrom(tx, opts = {}) {\n    if (!(tx instanceof Transaction)) {\n      throw new TypeError(`expected a 'Transaction', got: ${tx}`);\n    }\n\n    const sequenceNum = (BigInt(tx.sequence) - 1n).toString();\n\n    let source;\n    // rebuild the source account based on the strkey\n    if (StrKey.isValidMdilithium2PublicKey(tx.source)) {\n      source = MuxedAccount.fromAddress(tx.source, sequenceNum);\n    } else if (StrKey.isValidDilithium2PublicKey(tx.source)) {\n      source = new Account(tx.source, sequenceNum);\n    } else {\n      throw new TypeError(`unsupported tx source account: ${tx.source}`);\n    }\n\n    // the initial fee passed to the builder gets scaled up based on the number\n    // of operations at the end, so we have to down-scale first\n    const unscaledFee = parseInt(tx.fee, 10) / tx.operations.length;\n\n    const builder = new TransactionBuilder(source, {\n      fee: (unscaledFee || BASE_FEE).toString(),\n      memo: tx.memo,\n      networkPassphrase: tx.networkPassphrase,\n      timebounds: tx.timeBounds,\n      ledgerbounds: tx.ledgerBounds,\n      minAccountSequence: tx.minAccountSequence,\n      minAccountSequenceAge: tx.minAccountSequenceAge,\n      minAccountSequenceLedgerGap: tx.minAccountSequenceLedgerGap,\n      extraSigners: tx.extraSigners,\n      ...opts\n    });\n\n    tx._tx.operations().forEach((op) => builder.addOperation(op));\n\n    return builder;\n  }\n\n  /**\n   * Adds an operation to the transaction.\n   *\n   * @param {xdr.Operation} operation   The xdr operation object, use {@link\n   *     Operation} static methods.\n   *\n   * @returns {TransactionBuilder}\n   */\n  addOperation(operation) {\n    this.operations.push(operation);\n    return this;\n  }\n\n  /**\n   * Adds an operation to the transaction at a specific index.\n   *\n   * @param {xdr.Operation} operation - The xdr operation object to add, use {@link Operation} static methods.\n   * @param {number} index - The index at which to insert the operation.\n   *\n   * @returns {TransactionBuilder} - The TransactionBuilder instance for method chaining.\n   */\n  addOperationAt(operation, index) {\n    this.operations.splice(index, 0, operation);\n    return this;\n  }\n\n  /**\n   * Removes the operations from the builder (useful when cloning).\n   * @returns {TransactionBuilder} this builder instance\n   */\n  clearOperations() {\n    this.operations = [];\n    return this;\n  }\n\n  /**\n   * Removes the operation at the specified index from the transaction.\n   *\n   * @param {number} index - The index of the operation to remove.\n   *\n   * @returns {TransactionBuilder} The TransactionBuilder instance for method chaining.\n   */\n  clearOperationAt(index) {\n    this.operations.splice(index, 1);\n    return this;\n  }\n\n  /**\n   * Adds a memo to the transaction.\n   * @param {Memo} memo {@link Memo} object\n   * @returns {TransactionBuilder}\n   */\n  addMemo(memo) {\n    this.memo = memo;\n    return this;\n  }\n\n  /**\n   * Sets a timeout precondition on the transaction.\n   *\n   *  Because of the distributed nature of the Stellar network it is possible\n   *  that the status of your transaction will be determined after a long time\n   *  if the network is highly congested. If you want to be sure to receive the\n   *  status of the transaction within a given period you should set the {@link\n   *  TimeBounds} with `maxTime` on the transaction (this is what `setTimeout`\n   *  does internally; if there's `minTime` set but no `maxTime` it will be\n   *  added).\n   *\n   *  A call to `TransactionBuilder.setTimeout` is **required** if Transaction\n   *  does not have `max_time` set. If you don't want to set timeout, use\n   *  `{@link TimeoutInfinite}`. In general you should set `{@link\n   *  TimeoutInfinite}` only in smart contracts.\n   *\n   *  Please note that Horizon may still return <code>504 Gateway Timeout</code>\n   *  error, even for short timeouts. In such case you need to resubmit the same\n   *  transaction again without making any changes to receive a status. This\n   *  method is using the machine system time (UTC), make sure it is set\n   *  correctly.\n   *\n   * @param {number} timeoutSeconds   Number of seconds the transaction is good.\n   *     Can't be negative. If the value is {@link TimeoutInfinite}, the\n   *     transaction is good indefinitely.\n   *\n   * @returns {TransactionBuilder}\n   *\n   * @see {@link TimeoutInfinite}\n   * @see https://developers.stellar.org/docs/tutorials/handling-errors/\n   */\n  setTimeout(timeoutSeconds) {\n    if (this.timebounds !== null && this.timebounds.maxTime > 0) {\n      throw new Error(\n        'TimeBounds.max_time has been already set - setting timeout would overwrite it.'\n      );\n    }\n\n    if (timeoutSeconds < 0) {\n      throw new Error('timeout cannot be negative');\n    }\n\n    if (timeoutSeconds > 0) {\n      const timeoutTimestamp = Math.floor(Date.now() / 1000) + timeoutSeconds;\n      if (this.timebounds === null) {\n        this.timebounds = { minTime: 0, maxTime: timeoutTimestamp };\n      } else {\n        this.timebounds = {\n          minTime: this.timebounds.minTime,\n          maxTime: timeoutTimestamp\n        };\n      }\n    } else {\n      this.timebounds = {\n        minTime: 0,\n        maxTime: 0\n      };\n    }\n\n    return this;\n  }\n\n  /**\n   * If you want to prepare a transaction which will become valid at some point\n   * in the future, or be invalid after some time, you can set a timebounds\n   * precondition. Internally this will set the `minTime`, and `maxTime`\n   * preconditions. Conflicts with `setTimeout`, so use one or the other.\n   *\n   * @param {Date|number} minEpochOrDate  Either a JS Date object, or a number\n   *     of UNIX epoch seconds. The transaction is valid after this timestamp.\n   *     Can't be negative. If the value is `0`, the transaction is valid\n   *     immediately.\n   * @param {Date|number} maxEpochOrDate  Either a JS Date object, or a number\n   *     of UNIX epoch seconds. The transaction is valid until this timestamp.\n   *     Can't be negative. If the value is `0`, the transaction is valid\n   *     indefinitely.\n   *\n   * @returns {TransactionBuilder}\n   */\n  setTimebounds(minEpochOrDate, maxEpochOrDate) {\n    // Force it to a date type\n    if (typeof minEpochOrDate === 'number') {\n      minEpochOrDate = new Date(minEpochOrDate * 1000);\n    }\n    if (typeof maxEpochOrDate === 'number') {\n      maxEpochOrDate = new Date(maxEpochOrDate * 1000);\n    }\n\n    if (this.timebounds !== null) {\n      throw new Error(\n        'TimeBounds has been already set - setting timebounds would overwrite it.'\n      );\n    }\n\n    // Convert that date to the epoch seconds\n    const minTime = Math.floor(minEpochOrDate.valueOf() / 1000);\n    const maxTime = Math.floor(maxEpochOrDate.valueOf() / 1000);\n    if (minTime < 0) {\n      throw new Error('min_time cannot be negative');\n    }\n    if (maxTime < 0) {\n      throw new Error('max_time cannot be negative');\n    }\n    if (maxTime > 0 && minTime > maxTime) {\n      throw new Error('min_time cannot be greater than max_time');\n    }\n\n    this.timebounds = { minTime, maxTime };\n\n    return this;\n  }\n\n  /**\n   * If you want to prepare a transaction which will only be valid within some\n   * range of ledgers, you can set a ledgerbounds precondition.\n   * Internally this will set the `minLedger` and `maxLedger` preconditions.\n   *\n   * @param {number} minLedger  The minimum ledger this transaction is valid at\n   *     or after. Cannot be negative. If the value is `0` (the default), the\n   *     transaction is valid immediately.\n   *\n   * @param {number} maxLedger  The maximum ledger this transaction is valid\n   *     before. Cannot be negative. If the value is `0`, the transaction is\n   *     valid indefinitely.\n   *\n   * @returns {TransactionBuilder}\n   */\n  setLedgerbounds(minLedger, maxLedger) {\n    if (this.ledgerbounds !== null) {\n      throw new Error(\n        'LedgerBounds has been already set - setting ledgerbounds would overwrite it.'\n      );\n    }\n\n    if (minLedger < 0) {\n      throw new Error('min_ledger cannot be negative');\n    }\n    if (maxLedger < 0) {\n      throw new Error('max_ledger cannot be negative');\n    }\n    if (maxLedger > 0 && minLedger > maxLedger) {\n      throw new Error('min_ledger cannot be greater than max_ledger');\n    }\n\n    this.ledgerbounds = { minLedger, maxLedger };\n\n    return this;\n  }\n\n  /**\n   * If you want to prepare a transaction which will be valid only while the\n   * account sequence number is\n   *\n   *     minAccountSequence <= sourceAccountSequence < tx.seqNum\n   *\n   * Note that after execution the account's sequence number is always raised to\n   * `tx.seqNum`. Internally this will set the `minAccountSequence`\n   * precondition.\n   *\n   * @param {string} minAccountSequence   The minimum source account sequence\n   *     number this transaction is valid for. If the value is `0` (the\n   *     default), the transaction is valid when `sourceAccount's sequence\n   *     number == tx.seqNum- 1`.\n   *\n   * @returns {TransactionBuilder}\n   */\n  setMinAccountSequence(minAccountSequence) {\n    if (this.minAccountSequence !== null) {\n      throw new Error(\n        'min_account_sequence has been already set - setting min_account_sequence would overwrite it.'\n      );\n    }\n\n    this.minAccountSequence = minAccountSequence;\n\n    return this;\n  }\n\n  /**\n   * For the transaction to be valid, the current ledger time must be at least\n   * `minAccountSequenceAge` greater than sourceAccount's `sequenceTime`.\n   * Internally this will set the `minAccountSequenceAge` precondition.\n   *\n   * @param {number} durationInSeconds  The minimum amount of time between\n   *     source account sequence time and the ledger time when this transaction\n   *     will become valid. If the value is `0`, the transaction is unrestricted\n   *     by the account sequence age. Cannot be negative.\n   *\n   * @returns {TransactionBuilder}\n   */\n  setMinAccountSequenceAge(durationInSeconds) {\n    if (typeof durationInSeconds !== 'number') {\n      throw new Error('min_account_sequence_age must be a number');\n    }\n    if (this.minAccountSequenceAge !== null) {\n      throw new Error(\n        'min_account_sequence_age has been already set - setting min_account_sequence_age would overwrite it.'\n      );\n    }\n\n    if (durationInSeconds < 0) {\n      throw new Error('min_account_sequence_age cannot be negative');\n    }\n\n    this.minAccountSequenceAge = durationInSeconds;\n\n    return this;\n  }\n\n  /**\n   * For the transaction to be valid, the current ledger number must be at least\n   * `minAccountSequenceLedgerGap` greater than sourceAccount's ledger sequence.\n   * Internally this will set the `minAccountSequenceLedgerGap` precondition.\n   *\n   * @param {number} gap  The minimum number of ledgers between source account\n   *     sequence and the ledger number when this transaction will become valid.\n   *     If the value is `0`, the transaction is unrestricted by the account\n   *     sequence ledger. Cannot be negative.\n   *\n   * @returns {TransactionBuilder}\n   */\n  setMinAccountSequenceLedgerGap(gap) {\n    if (this.minAccountSequenceLedgerGap !== null) {\n      throw new Error(\n        'min_account_sequence_ledger_gap has been already set - setting min_account_sequence_ledger_gap would overwrite it.'\n      );\n    }\n\n    if (gap < 0) {\n      throw new Error('min_account_sequence_ledger_gap cannot be negative');\n    }\n\n    this.minAccountSequenceLedgerGap = gap;\n\n    return this;\n  }\n\n  /**\n   * For the transaction to be valid, there must be a signature corresponding to\n   * every Signer in this array, even if the signature is not otherwise required\n   * by the sourceAccount or operations. Internally this will set the\n   * `extraSigners` precondition.\n   *\n   * @param {string[]} extraSigners   required extra signers (as {@link StrKey}s)\n   *\n   * @returns {TransactionBuilder}\n   */\n  setExtraSigners(extraSigners) {\n    if (!Array.isArray(extraSigners)) {\n      throw new Error('extra_signers must be an array of strings.');\n    }\n\n    if (this.extraSigners !== null) {\n      throw new Error(\n        'extra_signers has been already set - setting extra_signers would overwrite it.'\n      );\n    }\n\n    if (extraSigners.length > 2) {\n      throw new Error('extra_signers cannot be longer than 2 elements.');\n    }\n\n    this.extraSigners = [...extraSigners];\n\n    return this;\n  }\n\n  /**\n   * Set network nassphrase for the Transaction that will be built.\n   *\n   * @param {string} networkPassphrase    passphrase of the target Stellar\n   *     network (e.g. \"Public Global Stellar Network ; September 2015\").\n   *\n   * @returns {TransactionBuilder}\n   */\n  setNetworkPassphrase(networkPassphrase) {\n    this.networkPassphrase = networkPassphrase;\n    return this;\n  }\n\n  /**\n   * Sets the transaction's internal Soroban transaction data (resources,\n   * footprint, etc.).\n   *\n   * For non-contract(non-Soroban) transactions, this setting has no effect. In\n   * the case of Soroban transactions, this is either an instance of\n   * {@link xdr.SorobanTransactionData} or a base64-encoded string of said\n   * structure. This is usually obtained from the simulation response based on a\n   * transaction with a Soroban operation (e.g.\n   * {@link Operation.invokeHostFunction}, providing necessary resource\n   * and storage footprint estimations for contract invocation.\n   *\n   * @param {xdr.SorobanTransactionData | string} sorobanData    the\n   *    {@link xdr.SorobanTransactionData} as a raw xdr object or a base64\n   *    string to be decoded\n   *\n   * @returns {TransactionBuilder}\n   * @see {SorobanDataBuilder}\n   */\n  setSorobanData(sorobanData) {\n    this.sorobanData = new SorobanDataBuilder(sorobanData).build();\n    return this;\n  }\n\n  /**\n   * This will build the transaction.\n   * It will also increment the source account's sequence number by 1.\n   * @returns {Transaction} This method will return the built {@link Transaction}.\n   */\n  build() {\n    const sequenceNumber = new BigNumber(this.source.sequenceNumber()).plus(1);\n    const fee = new BigNumber(this.baseFee)\n      .times(this.operations.length)\n      .toNumber();\n    const attrs = {\n      fee,\n      seqNum: xdr.SequenceNumber.fromString(sequenceNumber.toString()),\n      memo: this.memo ? this.memo.toXDRObject() : null\n    };\n\n    if (\n      this.timebounds === null ||\n      typeof this.timebounds.minTime === 'undefined' ||\n      typeof this.timebounds.maxTime === 'undefined'\n    ) {\n      throw new Error(\n        'TimeBounds has to be set or you must call setTimeout(TimeoutInfinite).'\n      );\n    }\n\n    if (isValidDate(this.timebounds.minTime)) {\n      this.timebounds.minTime = this.timebounds.minTime.getTime() / 1000;\n    }\n    if (isValidDate(this.timebounds.maxTime)) {\n      this.timebounds.maxTime = this.timebounds.maxTime.getTime() / 1000;\n    }\n\n    this.timebounds.minTime = UnsignedHyper.fromString(\n      this.timebounds.minTime.toString()\n    );\n    this.timebounds.maxTime = UnsignedHyper.fromString(\n      this.timebounds.maxTime.toString()\n    );\n\n    const timeBounds = new xdr.TimeBounds(this.timebounds);\n\n    if (this.hasV2Preconditions()) {\n      let ledgerBounds = null;\n      if (this.ledgerbounds !== null) {\n        ledgerBounds = new xdr.LedgerBounds(this.ledgerbounds);\n      }\n\n      let minSeqNum = this.minAccountSequence || '0';\n      minSeqNum = xdr.SequenceNumber.fromString(minSeqNum);\n\n      const minSeqAge = UnsignedHyper.fromString(\n        this.minAccountSequenceAge !== null\n          ? this.minAccountSequenceAge.toString()\n          : '0'\n      );\n\n      const minSeqLedgerGap = this.minAccountSequenceLedgerGap || 0;\n\n      const extraSigners =\n        this.extraSigners !== null\n          ? this.extraSigners.map(SignerKey.decodeAddress)\n          : [];\n\n      attrs.cond = xdr.Preconditions.precondV2(\n        new xdr.PreconditionsV2({\n          timeBounds,\n          ledgerBounds,\n          minSeqNum,\n          minSeqAge,\n          minSeqLedgerGap,\n          extraSigners\n        })\n      );\n    } else {\n      attrs.cond = xdr.Preconditions.precondTime(timeBounds);\n    }\n\n    attrs.sourceAccount = decodeAddressToMuxedAccount(this.source.accountId());\n\n    // TODO - remove this workaround for TransactionExt ts constructor\n    //       and use the typescript generated static factory method once fixed\n    //       https://github.com/stellar/dts-xdr/issues/5\n    if (this.sorobanData) {\n      // @ts-ignore\n      attrs.ext = new xdr.TransactionExt(1, this.sorobanData);\n    } else {\n      // @ts-ignore\n      attrs.ext = new xdr.TransactionExt(0, xdr.Void);\n    }\n\n    const xtx = new xdr.Transaction(attrs);\n    xtx.operations(this.operations);\n    const txEnvelope = new xdr.TransactionEnvelope.envelopeTypeTx(\n      new xdr.TransactionV1Envelope({ tx: xtx })\n    );\n\n    const tx = new Transaction(txEnvelope, this.networkPassphrase);\n\n    this.source.incrementSequenceNumber();\n\n    return tx;\n  }\n\n  hasV2Preconditions() {\n    return (\n      this.ledgerbounds !== null ||\n      this.minAccountSequence !== null ||\n      this.minAccountSequenceAge !== null ||\n      this.minAccountSequenceLedgerGap !== null ||\n      (this.extraSigners !== null && this.extraSigners.length > 0)\n    );\n  }\n\n  /**\n   * Builds a {@link FeeBumpTransaction}, enabling you to resubmit an existing\n   * transaction with a higher fee.\n   *\n   * @param {Keypair|string}  feeSource - account paying for the transaction,\n   *     in the form of either a Keypair (only the public key is used) or\n   *     an account ID (in G... or M... form, but refer to `withMuxing`)\n   * @param {string}          baseFee   - max fee willing to pay per operation\n   *     in inner transaction (**in stroops**)\n   * @param {Transaction}     innerTx   - {@link Transaction} to be bumped by\n   *     the fee bump transaction\n   * @param {string}          networkPassphrase - passphrase of the target\n   *     Stellar network (e.g. \"Public Global Stellar Network ; September 2015\",\n   *     see {@link Networks})\n   *\n   * @todo Alongside the next major version bump, this type signature can be\n   *       changed to be less awkward: accept a MuxedAccount as the `feeSource`\n   *       rather than a keypair or string.\n   *\n   * @note Your fee-bump amount should be >= 10x the original fee.\n   * @see  https://developers.stellar.org/docs/glossary/fee-bumps/#replace-by-fee\n   *\n   * @returns {FeeBumpTransaction}\n   */\n  static buildFeeBumpTransaction(\n    feeSource,\n    baseFee,\n    innerTx,\n    networkPassphrase\n  ) {\n    const innerOps = innerTx.operations.length;\n    const innerBaseFeeRate = new BigNumber(innerTx.fee).div(innerOps);\n    const base = new BigNumber(baseFee);\n\n    // The fee rate for fee bump is at least the fee rate of the inner transaction\n    if (base.lt(innerBaseFeeRate)) {\n      throw new Error(\n        `Invalid baseFee, it should be at least ${innerBaseFeeRate} stroops.`\n      );\n    }\n\n    const minBaseFee = new BigNumber(BASE_FEE);\n\n    // The fee rate is at least the minimum fee\n    if (base.lt(minBaseFee)) {\n      throw new Error(\n        `Invalid baseFee, it should be at least ${minBaseFee} stroops.`\n      );\n    }\n\n    let innerTxEnvelope = innerTx.toEnvelope();\n    if (innerTxEnvelope.switch() === xdr.EnvelopeType.envelopeTypeTxV0()) {\n      const v0Tx = innerTxEnvelope.v0().tx();\n      const v1Tx = new xdr.Transaction({\n        sourceAccount: new xdr.MuxedAccount.keyTypeDilithium2(\n          v0Tx.sourceAccountDilithium2()\n        ),\n        fee: v0Tx.fee(),\n        seqNum: v0Tx.seqNum(),\n        cond: xdr.Preconditions.precondTime(v0Tx.timeBounds()),\n        memo: v0Tx.memo(),\n        operations: v0Tx.operations(),\n        ext: new xdr.TransactionExt(0)\n      });\n      innerTxEnvelope = new xdr.TransactionEnvelope.envelopeTypeTx(\n        new xdr.TransactionV1Envelope({\n          tx: v1Tx,\n          signatures: innerTxEnvelope.v0().signatures()\n        })\n      );\n    }\n\n    let feeSourceAccount;\n    if (typeof feeSource === 'string') {\n      feeSourceAccount = decodeAddressToMuxedAccount(feeSource);\n    } else {\n      feeSourceAccount = feeSource.xdrMuxedAccount();\n    }\n\n    const tx = new xdr.FeeBumpTransaction({\n      feeSource: feeSourceAccount,\n      fee: xdr.Int64.fromString(base.times(innerOps + 1).toString()),\n      innerTx: xdr.FeeBumpTransactionInnerTx.envelopeTypeTx(\n        innerTxEnvelope.v1()\n      ),\n      ext: new xdr.FeeBumpTransactionExt(0)\n    });\n    const feeBumpTxEnvelope = new xdr.FeeBumpTransactionEnvelope({\n      tx,\n      signatures: []\n    });\n    const envelope = new xdr.TransactionEnvelope.envelopeTypeTxFeeBump(\n      feeBumpTxEnvelope\n    );\n\n    return new FeeBumpTransaction(envelope, networkPassphrase);\n  }\n\n  /**\n   * Build a {@link Transaction} or {@link FeeBumpTransaction} from an\n   * xdr.TransactionEnvelope.\n   *\n   * @param {string|xdr.TransactionEnvelope} envelope - The transaction envelope\n   *     object or base64 encoded string.\n   * @param {string} networkPassphrase - The network passphrase of the target\n   *     Stellar network (e.g. \"Public Global Stellar Network ; September\n   *     2015\"), see {@link Networks}.\n   *\n   * @returns {Transaction|FeeBumpTransaction}\n   */\n  static fromXDR(envelope, networkPassphrase) {\n    if (typeof envelope === 'string') {\n      envelope = xdr.TransactionEnvelope.fromXDR(envelope, 'base64');\n    }\n\n    if (envelope.switch() === xdr.EnvelopeType.envelopeTypeTxFeeBump()) {\n      return new FeeBumpTransaction(envelope, networkPassphrase);\n    }\n\n    return new Transaction(envelope, networkPassphrase);\n  }\n}\n\n/**\n * Checks whether a provided object is a valid Date.\n * @argument {Date} d date object\n * @returns {boolean}\n */\nexport function isValidDate(d) {\n  // isnan is okay here because it correctly checks for invalid date objects\n  // eslint-disable-next-line no-restricted-globals\n  return d instanceof Date && !isNaN(d);\n}\n","import OriginBigNumber from 'bignumber.js';\n\nconst BigNumber = OriginBigNumber.clone();\n\nBigNumber.DEBUG = true; // gives us exceptions on bad constructor values\n\nexport default BigNumber;\n","export function verifyChecksum(expected, actual) {\n  if (expected.length !== actual.length) {\n    return false;\n  }\n\n  if (expected.length === 0) {\n    return true;\n  }\n\n  for (let i = 0; i < expected.length; i += 1) {\n    if (expected[i] !== actual[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import BigNumber from './bignumber';\n\n// eslint-disable-next-line no-bitwise\nconst MAX_INT = ((1 << 31) >>> 0) - 1;\n\n/**\n * Calculates and returns the best rational approximation of the given real number.\n * @private\n * @param {string|number|BigNumber} rawNumber Real number\n * @throws Error Throws `Error` when the best rational approximation cannot be found.\n * @returns {array} first element is n (numerator), second element is d (denominator)\n */\nexport function best_r(rawNumber) {\n  let number = new BigNumber(rawNumber);\n  let a;\n  let f;\n  const fractions = [\n    [new BigNumber(0), new BigNumber(1)],\n    [new BigNumber(1), new BigNumber(0)]\n  ];\n  let i = 2;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (number.gt(MAX_INT)) {\n      break;\n    }\n    a = number.integerValue(BigNumber.ROUND_FLOOR);\n    f = number.minus(a);\n    const h = a.times(fractions[i - 1][0]).plus(fractions[i - 2][0]);\n    const k = a.times(fractions[i - 1][1]).plus(fractions[i - 2][1]);\n    if (h.gt(MAX_INT) || k.gt(MAX_INT)) {\n      break;\n    }\n    fractions.push([h, k]);\n    if (f.eq(0)) {\n      break;\n    }\n    number = new BigNumber(1).div(f);\n    i += 1;\n  }\n  const [n, d] = fractions[fractions.length - 1];\n\n  if (n.isZero() || d.isZero()) {\n    throw new Error(\"Couldn't find approximation\");\n  }\n\n  return [n.toNumber(), d.toNumber()];\n}\n","import xdr from '../xdr';\nimport { StrKey } from '../strkey';\n\n/**\n * Converts a Stellar address (in G... or M... form) to an `xdr.MuxedAccount`\n * structure, using the dilithium2 representation when possible.\n *\n * This supports full muxed accounts, where an `M...` address will resolve to\n * both its underlying `G...` address and an integer ID.\n *\n * @param   {string}  address   G... or M... address to encode into XDR\n * @returns {xdr.MuxedAccount}  a muxed account object for this address string\n */\nexport function decodeAddressToMuxedAccount(address) {\n  if (StrKey.isValidMdilithium2PublicKey(address)) {\n    return _decodeAddressFullyToMuxedAccount(address);\n  }\n\n  return xdr.MuxedAccount.keyTypeDilithium2(\n    StrKey.decodeDilithium2PublicKey(address)\n  );\n}\n\n/**\n * Converts an xdr.MuxedAccount to its StrKey representation.\n *\n * This returns its \"M...\" string representation if there is a muxing ID within\n * the object and returns the \"G...\" representation otherwise.\n *\n * @param   {xdr.MuxedAccount} muxedAccount   Raw account to stringify\n * @returns {string} Stringified G... (corresponding to the underlying pubkey)\n *     or M... address (corresponding to both the key and the muxed ID)\n *\n * @see https://stellar.org/protocol/sep-23\n */\nexport function encodeMuxedAccountToAddress(muxedAccount) {\n  if (\n    muxedAccount.switch().value ===\n    xdr.CryptoKeyType.keyTypeMuxedDilithium2().value\n  ) {\n    return _encodeMuxedAccountFullyToAddress(muxedAccount);\n  }\n\n  return StrKey.encodeDilithium2PublicKey(muxedAccount.dilithium2());\n}\n\n/**\n * Transform a Stellar address (D...) and an ID into its XDR representation.\n *\n * @param  {string} address   - a Stellar D... address\n * @param  {string} id        - a Uint64 ID represented as a string\n *\n * @return {xdr.MuxedAccount} - XDR representation of the above muxed account\n */\nexport function encodeMuxedAccount(address, id) {\n  if (!StrKey.isValidDilithium2PublicKey(address)) {\n    throw new Error('address should be a Stellar account ID (G...)');\n  }\n  if (typeof id !== 'string') {\n    throw new Error('id should be a string representing a number (uint64)');\n  }\n\n  return xdr.MuxedAccount.keyTypeMuxedDilithium2(\n    new xdr.MuxedAccountMdilithium2({\n      id: xdr.Uint64.fromString(id),\n      dilithium2: StrKey.decodeDilithium2PublicKey(address)\n    })\n  );\n}\n\n/**\n * Extracts the underlying base (D...) address from an M-address.\n * @param  {string} address   an account address (either M... or DS...)\n * @return {string} a Stellar public key address (D...)\n */\nexport function extractBaseAddress(address) {\n  if (StrKey.isValidDilithium2PublicKey(address)) {\n    return address;\n  }\n\n  if (!StrKey.isValidMdilithium2PublicKey(address)) {\n    throw new TypeError(`expected muxed account (M...), got ${address}`);\n  }\n\n  const muxedAccount = decodeAddressToMuxedAccount(address);\n  return StrKey.encodeDilithium2PublicKey(muxedAccount.mdilithium2().dilithium2());\n}\n\n// Decodes an \"M...\" account ID into its MuxedAccount object representation.\nfunction _decodeAddressFullyToMuxedAccount(address) {\n  const rawBytes = StrKey.decodeMdilithium2PublicKey(address);\n\n  // Decoding M... addresses cannot be done through a simple\n  // MuxedAccountMdilithium2.fromXDR() call, because the definition is:\n  //\n  //    constructor(attributes: { id: Uint64; dilithium2: Buffer });\n  //\n  // Note the ID is the first attribute. However, the ID comes *last* in the\n  // stringified (base32-encoded) address itself (it's the last 8-byte suffix).\n  // The `fromXDR()` method interprets bytes in order, so we need to parse out\n  // the raw binary into its requisite parts, i.e. use the MuxedAccountMdilithium2\n  // constructor directly.\n  //\n  // Refer to https://github.com/stellar/go/blob/master/xdr/muxed_account.go#L26\n  // for the Golang implementation of the M... parsing.\n  return xdr.MuxedAccount.keyTypeMuxedDilithium2(\n    new xdr.MuxedAccountMdilithium2({\n      id: xdr.Uint64.fromXDR(rawBytes.subarray(-8)),\n      dilithium2: rawBytes.subarray(0, -8)\n    })\n  );\n}\n\n// Converts an xdr.MuxedAccount into its *true* \"M...\" string representation.\nfunction _encodeMuxedAccountFullyToAddress(muxedAccount) {\n  if (muxedAccount.switch() === xdr.CryptoKeyType.keyTypeDilithium2()) {\n    return encodeMuxedAccountToAddress(muxedAccount);\n  }\n\n  const muxed = muxedAccount.mdilithium2();\n  return StrKey.encodeMdilithium2PublicKey(\n    Buffer.concat([muxed.dilithium2(), muxed.id().toXDR('raw')])\n  );\n}\n","export const trimEnd = (input, char) => {\n  const isNumber = typeof input === 'number';\n  let str = String(input);\n\n  while (str.endsWith(char)) {\n    str = str.slice(0, -1);\n  }\n\n  return isNumber ? Number(str) : str;\n};\n","import xdr from './generated/curr_generated';\n\nexport default xdr;\n","\"use strict\";\n\n/**\n * Generate a character map.\n * @param {string} alphabet e.g. \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\"\n * @param {object} mappings map overrides from key to value\n * @method\n */\n\nvar charmap = function (alphabet, mappings) {\n  mappings || (mappings = {});\n  alphabet.split(\"\").forEach(function (c, i) {\n    if (!(c in mappings)) mappings[c] = i;\n  });\n  return mappings;\n}\n\n/**\n * The RFC 4648 base 32 alphabet and character map.\n * @see {@link https://tools.ietf.org/html/rfc4648}\n */\n\nvar rfc4648 = {\n  alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",\n  charmap: {\n    0: 14,\n    1: 8\n  }\n};\n\nrfc4648.charmap = charmap(rfc4648.alphabet, rfc4648.charmap);\n\n/**\n * The Crockford base 32 alphabet and character map.\n * @see {@link http://www.crockford.com/wrmg/base32.html}\n */\n\nvar crockford = {\n  alphabet: \"0123456789ABCDEFGHJKMNPQRSTVWXYZ\",\n  charmap: {\n    O: 0,\n    I: 1,\n    L: 1\n  }\n};\n\ncrockford.charmap = charmap(crockford.alphabet, crockford.charmap);\n\n/**\n * base32hex\n * @see {@link https://en.wikipedia.org/wiki/Base32#base32hex}\n */\n\nvar base32hex = {\n  alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV\",\n  charmap: {}\n};\n\nbase32hex.charmap = charmap(base32hex.alphabet, base32hex.charmap);\n\n/**\n * Create a new `Decoder` with the given options.\n *\n * @param {object} [options]\n *   @param {string} [type] Supported Base-32 variants are \"rfc4648\" and\n *     \"crockford\".\n *   @param {object} [charmap] Override the character map used in decoding.\n * @constructor\n */\n\nfunction Decoder (options) {\n  this.buf = [];\n  this.shift = 8;\n  this.carry = 0;\n\n  if (options) {\n\n    switch (options.type) {\n      case \"rfc4648\":\n        this.charmap = exports.rfc4648.charmap;\n        break;\n      case \"crockford\":\n        this.charmap = exports.crockford.charmap;\n        break;\n      case \"base32hex\":\n        this.charmap = exports.base32hex.charmap;\n        break;\n      default:\n        throw new Error(\"invalid type\");\n    }\n\n    if (options.charmap) this.charmap = options.charmap;\n  }\n}\n\n/**\n * The default character map coresponds to RFC4648.\n */\n\nDecoder.prototype.charmap = rfc4648.charmap;\n\n/**\n * Decode a string, continuing from the previous state.\n *\n * @param {string} str\n * @return {Decoder} this\n */\n\nDecoder.prototype.write = function (str) {\n  var charmap = this.charmap;\n  var buf = this.buf;\n  var shift = this.shift;\n  var carry = this.carry;\n\n  // decode string\n  str.toUpperCase().split(\"\").forEach(function (char) {\n\n    // ignore padding\n    if (char == \"=\") return;\n\n    // lookup symbol\n    var symbol = charmap[char] & 0xff;\n\n    // 1: 00000 000\n    // 2:          00 00000 0\n    // 3:                    0000 0000\n    // 4:                             0 00000 00\n    // 5:                                       000 00000\n    // 6:                                                00000 000\n    // 7:                                                         00 00000 0\n\n    shift -= 5;\n    if (shift > 0) {\n      carry |= symbol << shift;\n    } else if (shift < 0) {\n      buf.push(carry | (symbol >> -shift));\n      shift += 8;\n      carry = (symbol << shift) & 0xff;\n    } else {\n      buf.push(carry | symbol);\n      shift = 8;\n      carry = 0;\n    }\n  });\n\n  // save state\n  this.shift = shift;\n  this.carry = carry;\n\n  // for chaining\n  return this;\n};\n\n/**\n * Finish decoding.\n *\n * @param {string} [str] The final string to decode.\n * @return {Array} Decoded byte array.\n */\n\nDecoder.prototype.finalize = function (str) {\n  if (str) {\n    this.write(str);\n  }\n  if (this.shift !== 8 && this.carry !== 0) {\n    this.buf.push(this.carry);\n    this.shift = 8;\n    this.carry = 0;\n  }\n  return this.buf;\n};\n\n/**\n * Create a new `Encoder` with the given options.\n *\n * @param {object} [options]\n *   @param {string} [type] Supported Base-32 variants are \"rfc4648\" and\n *     \"crockford\".\n *   @param {object} [alphabet] Override the alphabet used in encoding.\n * @constructor\n */\n\nfunction Encoder (options) {\n  this.buf = \"\";\n  this.shift = 3;\n  this.carry = 0;\n\n  if (options) {\n\n    switch (options.type) {\n      case \"rfc4648\":\n        this.alphabet = exports.rfc4648.alphabet;\n        break;\n      case \"crockford\":\n        this.alphabet = exports.crockford.alphabet;\n        break;\n      case \"base32hex\":\n        this.alphabet = exports.base32hex.alphabet;\n        break;\n      default:\n        throw new Error(\"invalid type\");\n    }\n\n    if (options.alphabet) this.alphabet = options.alphabet;\n    else if (options.lc) this.alphabet = this.alphabet.toLowerCase();\n  }\n}\n\n/**\n * The default alphabet coresponds to RFC4648.\n */\n\nEncoder.prototype.alphabet = rfc4648.alphabet;\n\n/**\n * Encode a byte array, continuing from the previous state.\n *\n * @param {byte[]} buf The byte array to encode.\n * @return {Encoder} this\n */\n\nEncoder.prototype.write = function (buf) {\n  var shift = this.shift;\n  var carry = this.carry;\n  var symbol;\n  var byte;\n  var i;\n\n  // encode each byte in buf\n  for (i = 0; i < buf.length; i++) {\n    byte = buf[i];\n\n    // 1: 00000 000\n    // 2:          00 00000 0\n    // 3:                    0000 0000\n    // 4:                             0 00000 00\n    // 5:                                       000 00000\n    // 6:                                                00000 000\n    // 7:                                                         00 00000 0\n\n    symbol = carry | (byte >> shift);\n    this.buf += this.alphabet[symbol & 0x1f];\n\n    if (shift > 5) {\n      shift -= 5;\n      symbol = byte >> shift;\n      this.buf += this.alphabet[symbol & 0x1f];\n    }\n\n    shift = 5 - shift;\n    carry = byte << shift;\n    shift = 8 - shift;\n  }\n\n  // save state\n  this.shift = shift;\n  this.carry = carry;\n\n  // for chaining\n  return this;\n};\n\n/**\n * Finish encoding.\n *\n * @param {byte[]} [buf] The final byte array to encode.\n * @return {string} The encoded byte array.\n */\n\nEncoder.prototype.finalize = function (buf) {\n  if (buf) {\n    this.write(buf);\n  }\n  if (this.shift !== 3) {\n    this.buf += this.alphabet[this.carry & 0x1f];\n    this.shift = 3;\n    this.carry = 0;\n  }\n  return this.buf;\n};\n\n/**\n * Convenience encoder.\n *\n * @param {byte[]} buf The byte array to encode.\n * @param {object} [options] Options to pass to the encoder.\n * @return {string} The encoded string.\n */\n\nexports.encode = function (buf, options) {\n  return new Encoder(options).finalize(buf);\n};\n\n/**\n * Convenience decoder.\n *\n * @param {string} str The string to decode.\n * @param {object} [options] Options to pass to the decoder.\n * @return {byte[]} The decoded byte array.\n */\n\nexports.decode = function (str, options) {\n  return new Decoder(options).finalize(str);\n};\n\n// Exports.\nexports.Decoder = Decoder;\nexports.Encoder = Encoder;\nexports.charmap = charmap;\nexports.crockford = crockford;\nexports.rfc4648 = rfc4648;\nexports.base32hex = base32hex;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\nvar setFunctionLength = require('set-function-length');\n\nvar $TypeError = require('es-errors/type');\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $defineProperty = require('es-define-property');\nvar $max = GetIntrinsic('%Math.max%');\n\nmodule.exports = function callBind(originalFunction) {\n\tif (typeof originalFunction !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\tvar func = $reflectApply(bind, $call, arguments);\n\treturn setFunctionLength(\n\t\tfunc,\n\t\t1 + $max(0, originalFunction.length - (arguments.length - 1)),\n\t\ttrue\n\t);\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","/*global window, global*/\nvar util = require(\"util\")\nvar assert = require(\"assert\")\nfunction now() { return new Date().getTime() }\n\nvar slice = Array.prototype.slice\nvar console\nvar times = {}\n\nif (typeof global !== \"undefined\" && global.console) {\n    console = global.console\n} else if (typeof window !== \"undefined\" && window.console) {\n    console = window.console\n} else {\n    console = {}\n}\n\nvar functions = [\n    [log, \"log\"],\n    [info, \"info\"],\n    [warn, \"warn\"],\n    [error, \"error\"],\n    [time, \"time\"],\n    [timeEnd, \"timeEnd\"],\n    [trace, \"trace\"],\n    [dir, \"dir\"],\n    [consoleAssert, \"assert\"]\n]\n\nfor (var i = 0; i < functions.length; i++) {\n    var tuple = functions[i]\n    var f = tuple[0]\n    var name = tuple[1]\n\n    if (!console[name]) {\n        console[name] = f\n    }\n}\n\nmodule.exports = console\n\nfunction log() {}\n\nfunction info() {\n    console.log.apply(console, arguments)\n}\n\nfunction warn() {\n    console.log.apply(console, arguments)\n}\n\nfunction error() {\n    console.warn.apply(console, arguments)\n}\n\nfunction time(label) {\n    times[label] = now()\n}\n\nfunction timeEnd(label) {\n    var time = times[label]\n    if (!time) {\n        throw new Error(\"No such label: \" + label)\n    }\n\n    delete times[label]\n    var duration = now() - time\n    console.log(label + \": \" + duration + \"ms\")\n}\n\nfunction trace() {\n    var err = new Error()\n    err.name = \"Trace\"\n    err.message = util.format.apply(null, arguments)\n    console.error(err.stack)\n}\n\nfunction dir(object) {\n    console.log(util.inspect(object) + \"\\n\")\n}\n\nfunction consoleAssert(expression) {\n    if (!expression) {\n        var arr = slice.call(arguments, 1)\n        assert.ok(false, util.format.apply(null, arr))\n    }\n}\n","'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\n\nvar gopd = require('gopd');\n\n/** @type {import('.')} */\nmodule.exports = function defineDataProperty(\n\tobj,\n\tproperty,\n\tvalue\n) {\n\tif (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n\t\tthrow new $TypeError('`obj` must be an object or a function`');\n\t}\n\tif (typeof property !== 'string' && typeof property !== 'symbol') {\n\t\tthrow new $TypeError('`property` must be a string or a symbol`');\n\t}\n\tif (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\n\t\tthrow new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\n\t\tthrow new $TypeError('`nonWritable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\n\t\tthrow new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\n\t\tthrow new $TypeError('`loose`, if provided, must be a boolean');\n\t}\n\n\tvar nonEnumerable = arguments.length > 3 ? arguments[3] : null;\n\tvar nonWritable = arguments.length > 4 ? arguments[4] : null;\n\tvar nonConfigurable = arguments.length > 5 ? arguments[5] : null;\n\tvar loose = arguments.length > 6 ? arguments[6] : false;\n\n\t/* @type {false | TypedPropertyDescriptor<unknown>} */\n\tvar desc = !!gopd && gopd(obj, property);\n\n\tif ($defineProperty) {\n\t\t$defineProperty(obj, property, {\n\t\t\tconfigurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\n\t\t\tenumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\n\t\t\tvalue: value,\n\t\t\twritable: nonWritable === null && desc ? desc.writable : !nonWritable\n\t\t});\n\t} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {\n\t\t// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\n\t\tobj[property] = value; // eslint-disable-line no-param-reassign\n\t} else {\n\t\tthrow new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\n\t}\n};\n","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar defineDataProperty = require('define-data-property');\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar supportsDescriptors = require('has-property-descriptors')();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object) {\n\t\tif (predicate === true) {\n\t\t\tif (object[name] === value) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (!isFunction(predicate) || !predicate()) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (supportsDescriptors) {\n\t\tdefineDataProperty(object, name, value, true);\n\t} else {\n\t\tdefineDataProperty(object, name, value);\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\n/** @type {import('.')} */\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true) || false;\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nmodule.exports = $defineProperty;\n","'use strict';\n\n/** @type {import('./eval')} */\nmodule.exports = EvalError;\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Error;\n","'use strict';\n\n/** @type {import('./range')} */\nmodule.exports = RangeError;\n","'use strict';\n\n/** @type {import('./ref')} */\nmodule.exports = ReferenceError;\n","'use strict';\n\n/** @type {import('./syntax')} */\nmodule.exports = SyntaxError;\n","'use strict';\n\n/** @type {import('./type')} */\nmodule.exports = TypeError;\n","'use strict';\n\n/** @type {import('./uri')} */\nmodule.exports = URIError;\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar undefined;\n\nvar $Error = require('es-errors');\nvar $EvalError = require('es-errors/eval');\nvar $RangeError = require('es-errors/range');\nvar $ReferenceError = require('es-errors/ref');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar $URIError = require('es-errors/uri');\n\nvar $Function = Function;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar hasProto = require('has-proto')();\n\nvar getProto = Object.getPrototypeOf || (\n\thasProto\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\n\t\t: null\n);\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t__proto__: null,\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': $Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': $EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': $RangeError,\n\t'%ReferenceError%': $ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': $URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t__proto__: null,\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\treturn !!$defineProperty;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!$defineProperty) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n","'use strict';\n\nvar test = {\n\t__proto__: null,\n\tfoo: {}\n};\n\nvar $Object = Object;\n\n/** @type {import('.')} */\nmodule.exports = function hasProto() {\n\t// @ts-expect-error: TS errors on an inherited property for some reason\n\treturn { __proto__: test }.foo === test.foo\n\t\t&& !(test instanceof $Object);\n};\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n","'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {import('.')} */\nmodule.exports = bind.call(call, $hasOwn);\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\ttry {\n\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\tget: function () {\n\t\t\t\tthrow isCallableMarker;\n\t\t\t}\n\t\t});\n\t\tisCallableMarker = {};\n\t\t// eslint-disable-next-line no-throw-literal\n\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t} catch (_) {\n\t\tif (_ !== isCallableMarker) {\n\t\t\treflectApply = null;\n\t\t}\n\t}\n} else {\n\treflectApply = null;\n}\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar objectClass = '[object Object]';\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar ddaClass = '[object HTMLAllCollection]'; // IE 11\nvar ddaClass2 = '[object HTML document.all class]';\nvar ddaClass3 = '[object HTMLCollection]'; // IE 9-10\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n\nvar isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing\n\nvar isDDA = function isDocumentDotAll() { return false; };\nif (typeof document === 'object') {\n\t// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n\tvar all = document.all;\n\tif (toStr.call(all) === toStr.call(document.all)) {\n\t\tisDDA = function isDocumentDotAll(value) {\n\t\t\t/* globals document: false */\n\t\t\t// in IE 6-8, typeof document.all is \"object\" and it's truthy\n\t\t\tif ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {\n\t\t\t\ttry {\n\t\t\t\t\tvar str = toStr.call(value);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tstr === ddaClass\n\t\t\t\t\t\t|| str === ddaClass2\n\t\t\t\t\t\t|| str === ddaClass3 // opera 12.16\n\t\t\t\t\t\t|| str === objectClass // IE 6-8\n\t\t\t\t\t) && value('') == null; // eslint-disable-line eqeqeq\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t}\n}\n\nmodule.exports = reflectApply\n\t? function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\ttry {\n\t\t\treflectApply(value, null, badArrayLike);\n\t\t} catch (e) {\n\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t}\n\t\treturn !isES6ClassFn(value) && tryFunctionObject(value);\n\t}\n\t: function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\tif (strClass !== fnClass && strClass !== genClass && !(/^\\[object HTML/).test(strClass)) { return false; }\n\t\treturn tryFunctionObject(value);\n\t};\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n","'use strict';\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function isNaN(value) {\n\treturn value !== value;\n};\n","'use strict';\n\nvar callBind = require('call-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Number);\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (Number.isNaN && Number.isNaN(NaN) && !Number.isNaN('a')) {\n\t\treturn Number.isNaN;\n\t}\n\treturn implementation;\n};\n","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function shimNumberIsNaN() {\n\tvar polyfill = getPolyfill();\n\tdefine(Number, { isNaN: polyfill }, {\n\t\tisNaN: function testIsNaN() {\n\t\t\treturn Number.isNaN !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","'use strict';\n\nvar whichTypedArray = require('which-typed-array');\n\n/** @type {import('.')} */\nmodule.exports = function isTypedArray(value) {\n\treturn !!whichTypedArray(value);\n};\n","'use strict';\n\nvar numberIsNaN = function (value) {\n\treturn value !== value;\n};\n\nmodule.exports = function is(a, b) {\n\tif (a === 0 && b === 0) {\n\t\treturn 1 / a === 1 / b;\n\t}\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (numberIsNaN(a) && numberIsNaN(b)) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n","'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Object);\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.is === 'function' ? Object.is : implementation;\n};\n","'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimObjectIs() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { is: polyfill }, {\n\t\tis: function testObjectIs() {\n\t\t\treturn Object.is !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","'use strict';\n\n// modified from https://github.com/es-shims/es6-shim\nvar objectKeys = require('object-keys');\nvar hasSymbols = require('has-symbols/shams')();\nvar callBound = require('call-bind/callBound');\nvar toObject = Object;\nvar $push = callBound('Array.prototype.push');\nvar $propIsEnumerable = callBound('Object.prototype.propertyIsEnumerable');\nvar originalGetSymbols = hasSymbols ? Object.getOwnPropertySymbols : null;\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function assign(target, source1) {\n\tif (target == null) { throw new TypeError('target must be an object'); }\n\tvar to = toObject(target); // step 1\n\tif (arguments.length === 1) {\n\t\treturn to; // step 2\n\t}\n\tfor (var s = 1; s < arguments.length; ++s) {\n\t\tvar from = toObject(arguments[s]); // step 3.a.i\n\n\t\t// step 3.a.ii:\n\t\tvar keys = objectKeys(from);\n\t\tvar getSymbols = hasSymbols && (Object.getOwnPropertySymbols || originalGetSymbols);\n\t\tif (getSymbols) {\n\t\t\tvar syms = getSymbols(from);\n\t\t\tfor (var j = 0; j < syms.length; ++j) {\n\t\t\t\tvar key = syms[j];\n\t\t\t\tif ($propIsEnumerable(from, key)) {\n\t\t\t\t\t$push(keys, key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// step 3.a.iii:\n\t\tfor (var i = 0; i < keys.length; ++i) {\n\t\t\tvar nextKey = keys[i];\n\t\t\tif ($propIsEnumerable(from, nextKey)) { // step 3.a.iii.2\n\t\t\t\tvar propValue = from[nextKey]; // step 3.a.iii.2.a\n\t\t\t\tto[nextKey] = propValue; // step 3.a.iii.2.b\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to; // step 4\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nvar lacksProperEnumerationOrder = function () {\n\tif (!Object.assign) {\n\t\treturn false;\n\t}\n\t/*\n\t * v8, specifically in node 4.x, has a bug with incorrect property enumeration order\n\t * note: this does not detect the bug unless there's 20 characters\n\t */\n\tvar str = 'abcdefghijklmnopqrst';\n\tvar letters = str.split('');\n\tvar map = {};\n\tfor (var i = 0; i < letters.length; ++i) {\n\t\tmap[letters[i]] = letters[i];\n\t}\n\tvar obj = Object.assign({}, map);\n\tvar actual = '';\n\tfor (var k in obj) {\n\t\tactual += k;\n\t}\n\treturn str !== actual;\n};\n\nvar assignHasPendingExceptions = function () {\n\tif (!Object.assign || !Object.preventExtensions) {\n\t\treturn false;\n\t}\n\t/*\n\t * Firefox 37 still has \"pending exception\" logic in its Object.assign implementation,\n\t * which is 72% slower than our shim, and Firefox 40's native implementation.\n\t */\n\tvar thrower = Object.preventExtensions({ 1: 2 });\n\ttry {\n\t\tObject.assign(thrower, 'xy');\n\t} catch (e) {\n\t\treturn thrower[1] === 'y';\n\t}\n\treturn false;\n};\n\nmodule.exports = function getPolyfill() {\n\tif (!Object.assign) {\n\t\treturn implementation;\n\t}\n\tif (lacksProperEnumerationOrder()) {\n\t\treturn implementation;\n\t}\n\tif (assignHasPendingExceptions()) {\n\t\treturn implementation;\n\t}\n\treturn Object.assign;\n};\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = [\n\t'Float32Array',\n\t'Float64Array',\n\t'Int8Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'BigInt64Array',\n\t'BigUint64Array'\n];\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar gOPD = require('gopd');\n\nvar $TypeError = require('es-errors/type');\nvar $floor = GetIntrinsic('%Math.floor%');\n\n/** @type {import('.')} */\nmodule.exports = function setFunctionLength(fn, length) {\n\tif (typeof fn !== 'function') {\n\t\tthrow new $TypeError('`fn` is not a function');\n\t}\n\tif (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {\n\t\tthrow new $TypeError('`length` must be a positive 32-bit integer');\n\t}\n\n\tvar loose = arguments.length > 2 && !!arguments[2];\n\n\tvar functionLengthIsConfigurable = true;\n\tvar functionLengthIsWritable = true;\n\tif ('length' in fn && gOPD) {\n\t\tvar desc = gOPD(fn, 'length');\n\t\tif (desc && !desc.configurable) {\n\t\t\tfunctionLengthIsConfigurable = false;\n\t\t}\n\t\tif (desc && !desc.writable) {\n\t\t\tfunctionLengthIsWritable = false;\n\t\t}\n\t}\n\n\tif (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\n\t\tif (hasDescriptors) {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length, true, true);\n\t\t} else {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length);\n\t\t}\n\t}\n\treturn fn;\n};\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = require('./sha')\nexports.sha1 = require('./sha1')\nexports.sha224 = require('./sha224')\nexports.sha256 = require('./sha256')\nexports.sha384 = require('./sha384')\nexports.sha512 = require('./sha512')\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Sha256 = require('./sha256')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","var inherits = require('inherits')\nvar SHA512 = require('./sha512')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n","var inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\nvar whichTypedArray = require('which-typed-array');\nvar isTypedArray = require('is-typed-array');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').slice(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.slice(1, -1);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = require('./support/types');\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBind = require('call-bind');\nvar callBound = require('call-bind/callBound');\nvar gOPD = require('gopd');\n\n/** @type {(O: object) => string} */\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\n\n/** @type {<T = unknown>(array: readonly T[], value: unknown) => number} */\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\n\n/** @typedef {(receiver: import('.').TypedArray) => string | typeof Uint8Array.prototype.slice.call | typeof Uint8Array.prototype.set.call} Getter */\n/** @type {{ [k in `\\$${import('.').TypedArrayName}`]?: Getter } & { __proto__: null }} */\nvar cache = { __proto__: null };\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\t// @ts-expect-error TS won't narrow inside a closure\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\t// @ts-expect-error TS won't narrow inside a closure\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\t// @ts-expect-error TODO: fix\n\t\t\tcache['$' + typedArray] = callBind(descriptor.get);\n\t\t}\n\t});\n} else {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tvar fn = arr.slice || arr.set;\n\t\tif (fn) {\n\t\t\t// @ts-expect-error TODO: fix\n\t\t\tcache['$' + typedArray] = callBind(fn);\n\t\t}\n\t});\n}\n\n/** @type {(value: object) => false | import('.').TypedArrayName} */\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\t/** @type {ReturnType<typeof tryAllTypedArrays>} */ var found = false;\n\tforEach(\n\t\t// eslint-disable-next-line no-extra-parens\n\t\t/** @type {Record<`\\$${TypedArrayName}`, Getter>} */ /** @type {any} */ (cache),\n\t\t/** @type {(getter: Getter, name: `\\$${import('.').TypedArrayName}`) => void} */\n\t\tfunction (getter, typedArray) {\n\t\t\tif (!found) {\n\t\t\t\ttry {\n\t\t\t\t// @ts-expect-error TODO: fix\n\t\t\t\t\tif ('$' + getter(value) === typedArray) {\n\t\t\t\t\t\tfound = $slice(typedArray, 1);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t}\n\t);\n\treturn found;\n};\n\n/** @type {(value: object) => false | import('.').TypedArrayName} */\nvar trySlices = function tryAllSlices(value) {\n\t/** @type {ReturnType<typeof tryAllSlices>} */ var found = false;\n\tforEach(\n\t\t// eslint-disable-next-line no-extra-parens\n\t\t/** @type {Record<`\\$${TypedArrayName}`, Getter>} */ /** @type {any} */ (cache),\n\t\t/** @type {(getter: typeof cache, name: `\\$${import('.').TypedArrayName}`) => void} */ function (getter, name) {\n\t\t\tif (!found) {\n\t\t\t\ttry {\n\t\t\t\t\t// @ts-expect-error TODO: fix\n\t\t\t\t\tgetter(value);\n\t\t\t\t\tfound = $slice(name, 1);\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t}\n\t);\n\treturn found;\n};\n\n/** @type {import('.')} */\nmodule.exports = function whichTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag) {\n\t\t/** @type {string} */\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\tif ($indexOf(typedArrays, tag) > -1) {\n\t\t\treturn tag;\n\t\t}\n\t\tif (tag !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\t// node < 0.6 hits here on real Typed Arrays\n\t\treturn trySlices(value);\n\t}\n\tif (!gOPD) { return null; } // unknown engine\n\treturn tryTypedArrays(value);\n};\n","'use strict';\n\nvar possibleNames = require('possible-typed-array-names');\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\n\n/** @type {import('.')} */\nmodule.exports = function availableTypedArrays() {\n\tvar /** @type {ReturnType<typeof availableTypedArrays>} */ out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\t// @ts-expect-error\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\n// copied from utils\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(h.outputLen);\n    number(h.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapXOFConstructorWithOpts, isLE, byteSwap32, } from './utils.js';\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        if (!isLE)\n            byteSwap32(this.state32);\n        keccakP(this.state32, this.rounds);\n        if (!isLE)\n            byteSwap32(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        exists(this, false);\n        bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n) => n : (n) => byteSwap(n);\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","/*! noble-post-quantum - MIT License (c) 2024 Paul Miller (paulmillr.com) */\nimport { shake128, shake256 } from '@noble/hashes/sha3';\nimport { getMask } from './utils.js';\n// TODO: benchmark\nfunction bitReversal(n, bits = 8) {\n    const padded = n.toString(2).padStart(8, '0');\n    const sliced = padded.slice(-bits).padStart(7, '0');\n    const revrsd = sliced.split('').reverse().join('');\n    return Number.parseInt(revrsd, 2);\n}\nexport const genCrystals = (opts) => {\n    // isKyber: true means Kyber, false means Dilithium\n    const { newPoly, N, Q, F, ROOT_OF_UNITY, brvBits, isKyber } = opts;\n    const mod = (a, modulo = Q) => {\n        const result = a % modulo | 0;\n        return (result >= 0 ? result | 0 : (modulo + result) | 0) | 0;\n    };\n    // -(Q-1)/2 < a <= (Q-1)/2\n    const smod = (a, modulo = Q) => {\n        const r = mod(a, modulo) | 0;\n        return (r > modulo >> 1 ? (r - modulo) | 0 : r) | 0;\n    };\n    // Generate zettas\n    function getZettas() {\n        const out = newPoly(N);\n        for (let i = 0; i < N; i++) {\n            const b = bitReversal(i, brvBits);\n            const p = BigInt(ROOT_OF_UNITY) ** BigInt(b) % BigInt(Q);\n            out[i] = Number(p) | 0;\n        }\n        return out;\n    }\n    const nttZetas = getZettas();\n    // Number-Theoretic Transform\n    // Explained: https://electricdusk.com/ntt.html\n    // Kyber has slightly different params, since there is no 512th primitive root of unity mod q,\n    // only 256th primitive root of unity mod. Which also complicates MultiplyNTT.\n    // TODO: there should be less ugly way to define this.\n    const LEN1 = isKyber ? 128 : N;\n    const LEN2 = isKyber ? 1 : 0;\n    const NTT = {\n        encode: (r) => {\n            for (let k = 1, len = 128; len > LEN2; len >>= 1) {\n                for (let start = 0; start < N; start += 2 * len) {\n                    const zeta = nttZetas[k++];\n                    for (let j = start; j < start + len; j++) {\n                        const t = mod(zeta * r[j + len]);\n                        r[j + len] = mod(r[j] - t) | 0;\n                        r[j] = mod(r[j] + t) | 0;\n                    }\n                }\n            }\n            return r;\n        },\n        decode: (r) => {\n            for (let k = LEN1 - 1, len = 1 + LEN2; len < LEN1 + LEN2; len <<= 1) {\n                for (let start = 0; start < N; start += 2 * len) {\n                    const zeta = nttZetas[k--];\n                    for (let j = start; j < start + len; j++) {\n                        const t = r[j];\n                        r[j] = mod(t + r[j + len]);\n                        r[j + len] = mod(zeta * (r[j + len] - t));\n                    }\n                }\n            }\n            for (let i = 0; i < r.length; i++)\n                r[i] = mod(F * r[i]);\n            return r;\n        },\n    };\n    // Encode polynominal as bits\n    const bitsCoder = (d, c) => {\n        const mask = getMask(d);\n        const bytesLen = d * (N / 8);\n        return {\n            bytesLen,\n            encode: (poly) => {\n                const r = new Uint8Array(bytesLen);\n                for (let i = 0, buf = 0, bufLen = 0, pos = 0; i < poly.length; i++) {\n                    buf |= (c.encode(poly[i]) & mask) << bufLen;\n                    bufLen += d;\n                    for (; bufLen >= 8; bufLen -= 8, buf >>= 8)\n                        r[pos++] = buf & getMask(bufLen);\n                }\n                return r;\n            },\n            decode: (bytes) => {\n                const r = newPoly(N);\n                for (let i = 0, buf = 0, bufLen = 0, pos = 0; i < bytes.length; i++) {\n                    buf |= bytes[i] << bufLen;\n                    bufLen += 8;\n                    for (; bufLen >= d; bufLen -= d, buf >>= d)\n                        r[pos++] = c.decode(buf & mask);\n                }\n                return r;\n            },\n        };\n    };\n    return { mod, smod, nttZetas, NTT, bitsCoder };\n};\nconst createXofShake = (shake) => (seed, blockLen) => {\n    if (!blockLen)\n        blockLen = shake.blockLen;\n    // Optimizations that won't mater:\n    // - cached seed update (two .update(), on start and on the end)\n    // - another cache which cloned into working copy\n    // Faster than multiple updates, since seed less than blockLen\n    const _seed = new Uint8Array(seed.length + 2);\n    _seed.set(seed);\n    const seedLen = seed.length;\n    const buf = new Uint8Array(blockLen); // == shake128.blockLen\n    let h = shake.create({});\n    let calls = 0;\n    let xofs = 0;\n    return {\n        stats: () => ({ calls, xofs }),\n        get: (x, y) => {\n            _seed[seedLen + 0] = x;\n            _seed[seedLen + 1] = y;\n            h.destroy();\n            h = shake.create({}).update(_seed);\n            calls++;\n            return () => {\n                xofs++;\n                return h.xofInto(buf);\n            };\n        },\n        clean: () => {\n            h.destroy();\n            buf.fill(0);\n            _seed.fill(0);\n        },\n    };\n};\nexport const XOF128 = /* @__PURE__ */ createXofShake(shake128);\nexport const XOF256 = /* @__PURE__ */ createXofShake(shake256);\n//# sourceMappingURL=_crystals.js.map","/*! noble-post-quantum - MIT License (c) 2024 Paul Miller (paulmillr.com) */\nimport { shake256 } from '@noble/hashes/sha3';\nimport { genCrystals, XOF128, XOF256 } from './_crystals.js';\nimport { cleanBytes, ensureBytes, equalBytes, randomBytes, splitCoder, vecCoder, } from './utils.js';\n/*\nLattice-based digital signature algorithm. See\n[official site](https://www.pq-crystals.org/dilithium/index.shtml),\n[repo](https://github.com/pq-crystals/dilithium).\nDilithium has similar internals to Kyber, but their keys and params are different.\n\n*/\n// Constants\nconst N = 256;\n// 2**23 − 2**13 + 1, 23 bits: multiply will be 46. We have enough precision in JS to avoid bigints\nconst Q = 8380417;\nconst ROOT_OF_UNITY = 1753;\n// f = 256**−1 mod q, pow(256, -1, q) = 8347681 (python3)\nconst F = 8347681;\nconst D = 13;\n// Dilithium is kinda parametrized over GAMMA2, but everything will break with any other value.\nconst GAMMA2_1 = Math.floor((Q - 1) / 88) | 0;\nconst GAMMA2_2 = Math.floor((Q - 1) / 32) | 0;\n// prettier-ignore\nexport const PARAMS = {\n    2: { K: 4, L: 4, D, GAMMA1: 2 ** 17, GAMMA2: GAMMA2_1, TAU: 39, ETA: 2, OMEGA: 80 },\n    3: { K: 6, L: 5, D, GAMMA1: 2 ** 19, GAMMA2: GAMMA2_2, TAU: 49, ETA: 4, OMEGA: 55 },\n    5: { K: 8, L: 7, D, GAMMA1: 2 ** 19, GAMMA2: GAMMA2_2, TAU: 60, ETA: 2, OMEGA: 75 },\n};\nconst newPoly = (n) => new Int32Array(n);\nconst { mod, smod, NTT, bitsCoder } = genCrystals({\n    N,\n    Q,\n    F,\n    ROOT_OF_UNITY,\n    newPoly,\n    isKyber: false,\n    brvBits: 8,\n});\nconst polyCoder = (d, compress) => bitsCoder(d, {\n    encode: (i) => (compress ? compress(i) : i),\n    decode: (i) => (compress ? compress(i) : i),\n});\nconst polyAdd = (a, b) => {\n    for (let i = 0; i < a.length; i++)\n        a[i] = mod(a[i] + b[i]);\n    return a;\n};\nconst polySub = (a, b) => {\n    for (let i = 0; i < a.length; i++)\n        a[i] = mod(a[i] - b[i]);\n    return a;\n};\nconst polyShiftl = (p) => {\n    for (let i = 0; i < N; i++)\n        p[i] <<= D;\n    return p;\n};\nconst polyChknorm = (p, B) => {\n    // Not very sure about this, but FIPS204 doesn't provide any function for that :(\n    for (let i = 0; i < N; i++)\n        if (Math.abs(smod(p[i])) >= B)\n            return true;\n    return false;\n};\nconst MultiplyNTTs = (a, b) => {\n    // NOTE: we don't use montgomery reduction in code, since it requires 64 bit ints,\n    // which is not available in JS. mod(a[i] * b[i]) is ok, since Q is 23 bit,\n    // which means a[i] * b[i] is 46 bit, which is safe to use in JS. (number is 53 bits).\n    // Barrett reduction is slower than mod :(\n    const c = newPoly(N);\n    for (let i = 0; i < a.length; i++)\n        c[i] = mod(a[i] * b[i]);\n    return c;\n};\n// Return poly in NTT representation\nfunction RejNTTPoly(xof) {\n    // Samples a polynomial ∈ Tq.\n    const r = newPoly(N);\n    // NOTE: we can represent 3xu24 as 4xu32, but it doesn't improve perf :(\n    for (let j = 0; j < N;) {\n        const b = xof();\n        if (b.length % 3)\n            throw new Error('RejNTTPoly: unaligned block');\n        for (let i = 0; j < N && i <= b.length - 3; i += 3) {\n            const t = (b[i + 0] | (b[i + 1] << 8) | (b[i + 2] << 16)) & 0x7fffff; // 3 bytes\n            if (t < Q)\n                r[j++] = t;\n        }\n    }\n    return r;\n}\nfunction getDilithium(opts) {\n    const { K, L, GAMMA1, GAMMA2, TAU, ETA, OMEGA } = opts;\n    const { CRH_BYTES, TR_BYTES, C_TILDE_BYTES, XOF128, XOF256 } = opts;\n    if (![2, 4].includes(ETA))\n        throw new Error('Wrong ETA');\n    if (![1 << 17, 1 << 19].includes(GAMMA1))\n        throw new Error('Wrong GAMMA1');\n    if (![GAMMA2_1, GAMMA2_2].includes(GAMMA2))\n        throw new Error('Wrong GAMMA2');\n    const BETA = TAU * ETA;\n    const decompose = (r) => {\n        // Decomposes r into (r1, r0) such that r ≡ r1(2γ2) + r0 mod q.\n        const rPlus = mod(r);\n        const r0 = smod(rPlus, 2 * GAMMA2) | 0;\n        if (rPlus - r0 === Q - 1)\n            return { r1: 0 | 0, r0: (r0 - 1) | 0 };\n        const r1 = Math.floor((rPlus - r0) / (2 * GAMMA2)) | 0;\n        return { r1, r0 }; // r1 = HighBits, r0 = LowBits\n    };\n    const HighBits = (r) => decompose(r).r1;\n    const LowBits = (r) => decompose(r).r0;\n    const MakeHint = (z, r) => {\n        // Compute hint bit indicating whether adding z to r alters the high bits of r.\n        // From dilithium code\n        const res0 = z <= GAMMA2 || z > Q - GAMMA2 || (z === Q - GAMMA2 && r === 0) ? 0 : 1;\n        // from FIPS204:\n        // // const r1 = HighBits(r);\n        // // const v1 = HighBits(r + z);\n        // // const res1 = +(r1 !== v1);\n        // But they return different results! However, decompose is same.\n        // So, either there is a bug in Dilithium ref implementation or in FIPS204.\n        // For now, lets use dilithium one, so test vectors can be passed.\n        // See\n        // https://github.com/GiacomoPope/dilithium-py?tab=readme-ov-file#optimising-decomposition-and-making-hints\n        return res0;\n    };\n    const UseHint = (h, r) => {\n        // Returns the high bits of r adjusted according to hint h\n        const m = Math.floor((Q - 1) / (2 * GAMMA2));\n        const { r1, r0 } = decompose(r);\n        // 3: if h = 1 and r0 > 0 return (r1 + 1) mod m\n        // 4: if h = 1 and r0 ≤ 0 return (r1 − 1) mod m\n        if (h === 1)\n            return r0 > 0 ? mod(r1 + 1, m) | 0 : mod(r1 - 1, m) | 0;\n        return r1 | 0;\n    };\n    const Power2Round = (r) => {\n        // Decomposes r into (r1, r0) such that r ≡ r1*(2**d) + r0 mod q.\n        const rPlus = mod(r);\n        const r0 = smod(rPlus, 2 ** D) | 0;\n        return { r1: Math.floor((rPlus - r0) / 2 ** D) | 0, r0 };\n    };\n    const hintCoder = {\n        bytesLen: OMEGA + K,\n        encode: (h) => {\n            if (h === false)\n                throw new Error('hint.encode: hint is false'); // should never happen\n            const res = new Uint8Array(OMEGA + K);\n            for (let i = 0, k = 0; i < K; i++) {\n                for (let j = 0; j < N; j++)\n                    if (h[i][j] !== 0)\n                        res[k++] = j;\n                res[OMEGA + i] = k;\n            }\n            return res;\n        },\n        decode: (buf) => {\n            const h = [];\n            let k = 0;\n            for (let i = 0; i < K; i++) {\n                const hi = newPoly(N);\n                if (buf[OMEGA + i] < k || buf[OMEGA + i] > OMEGA)\n                    return false;\n                for (let j = k; j < buf[OMEGA + i]; j++) {\n                    if (j > k && buf[j] <= buf[j - 1])\n                        return false;\n                    hi[buf[j]] = 1;\n                }\n                k = buf[OMEGA + i];\n                h.push(hi);\n            }\n            for (let j = k; j < OMEGA; j++)\n                if (buf[j] !== 0)\n                    return false;\n            return h;\n        },\n    };\n    const ETACoder = polyCoder(ETA === 2 ? 3 : 4, (i) => ETA - i);\n    const T0Coder = polyCoder(13, (i) => (1 << (D - 1)) - i);\n    const T1Coder = polyCoder(10);\n    // Requires smod. Need to fix!\n    const ZCoder = polyCoder(GAMMA1 === 1 << 17 ? 18 : 20, (i) => smod(GAMMA1 - i));\n    const W1Coder = polyCoder(GAMMA2 === GAMMA2_1 ? 6 : 4);\n    const W1Vec = vecCoder(W1Coder, K);\n    // Main structures\n    const publicCoder = splitCoder(32, vecCoder(T1Coder, K));\n    const secretCoder = splitCoder(32, 32, TR_BYTES, vecCoder(ETACoder, L), vecCoder(ETACoder, K), vecCoder(T0Coder, K));\n    const sigCoder = splitCoder(C_TILDE_BYTES, vecCoder(ZCoder, L), hintCoder);\n    const CoefFromHalfByte = ETA === 2\n        ? (n) => (n < 15 ? 2 - (n % 5) : false)\n        : (n) => (n < 9 ? 4 - n : false);\n    // Return poly in NTT representation\n    function RejBoundedPoly(xof) {\n        // Samples an element a ∈ Rq with coeffcients in [−η, η] computed via rejection sampling from ρ.\n        const r = newPoly(N);\n        for (let j = 0; j < N;) {\n            const b = xof();\n            for (let i = 0; j < N && i < b.length; i += 1) {\n                // half byte. Should be superfast with vector instructions. But very slow with js :(\n                const d1 = CoefFromHalfByte(b[i] & 0x0f);\n                const d2 = CoefFromHalfByte((b[i] >> 4) & 0x0f);\n                if (d1 !== false)\n                    r[j++] = d1;\n                if (j < N && d2 !== false)\n                    r[j++] = d2;\n            }\n        }\n        return r;\n    }\n    const SampleInBall = (seed) => {\n        // Samples a polynomial c ∈ Rq with coeffcients from {−1, 0, 1} and Hamming weight τ\n        const pre = newPoly(N);\n        const s = shake256.create({}).update(seed);\n        const buf = new Uint8Array(shake256.blockLen);\n        s.xofInto(buf);\n        const masks = buf.slice(0, 8);\n        for (let i = N - TAU, pos = 8, maskPos = 0, maskBit = 0; i < N; i++) {\n            let b = i + 1;\n            for (; b > i;) {\n                b = buf[pos++];\n                if (pos < shake256.blockLen)\n                    continue;\n                s.xofInto(buf);\n                pos = 0;\n            }\n            pre[i] = pre[b];\n            pre[b] = 1 - (((masks[maskPos] >> maskBit++) & 1) << 1);\n            if (maskBit >= 8) {\n                maskPos++;\n                maskBit = 0;\n            }\n        }\n        return pre;\n    };\n    const polyPowerRound = (p) => {\n        const res0 = newPoly(N);\n        const res1 = newPoly(N);\n        for (let i = 0; i < p.length; i++) {\n            const { r0, r1 } = Power2Round(p[i]);\n            res0[i] = r0;\n            res1[i] = r1;\n        }\n        return { r0: res0, r1: res1 };\n    };\n    const polyUseHint = (u, h) => {\n        for (let i = 0; i < N; i++)\n            u[i] = UseHint(h[i], u[i]);\n        return u;\n    };\n    const polyMakeHint = (a, b) => {\n        const v = newPoly(N);\n        let cnt = 0;\n        for (let i = 0; i < N; i++) {\n            const h = MakeHint(a[i], b[i]);\n            v[i] = h;\n            cnt += h;\n        }\n        return { v, cnt };\n    };\n    const signRandBytes = 32;\n    const seedCoder = splitCoder(32, 64, 32);\n    // API & argument positions are exactly as in FIPS204.\n    return {\n        signRandBytes,\n        keygen: (seed = randomBytes(32)) => {\n            // H(𝜉||IntegerToBytes(𝑘, 1)||IntegerToBytes(ℓ, 1), 128) 2: ▷ expand seed\n            const seedDst = new Uint8Array(32 + 2);\n            seedDst.set(seed);\n            seedDst[32] = K;\n            seedDst[33] = L;\n            const [rho, rhoPrime, K_] = seedCoder.decode(shake256(seedDst, { dkLen: seedCoder.bytesLen }));\n            const xofPrime = XOF256(rhoPrime);\n            const s1 = [];\n            for (let i = 0; i < L; i++)\n                s1.push(RejBoundedPoly(xofPrime.get(i & 0xff, (i >> 8) & 0xff)));\n            const s2 = [];\n            for (let i = L; i < L + K; i++)\n                s2.push(RejBoundedPoly(xofPrime.get(i & 0xff, (i >> 8) & 0xff)));\n            const s1Hat = s1.map((i) => NTT.encode(i.slice()));\n            const t0 = [];\n            const t1 = [];\n            const xof = XOF128(rho);\n            const t = newPoly(N);\n            for (let i = 0; i < K; i++) {\n                // t ← NTT−1(A*NTT(s1)) + s2\n                t.fill(0); // don't-reallocate\n                for (let j = 0; j < L; j++) {\n                    const aij = RejNTTPoly(xof.get(j, i)); // super slow!\n                    polyAdd(t, MultiplyNTTs(aij, s1Hat[j]));\n                }\n                NTT.decode(t);\n                const { r0, r1 } = polyPowerRound(polyAdd(t, s2[i])); // (t1, t0) ← Power2Round(t, d)\n                t0.push(r0);\n                t1.push(r1);\n            }\n            const publicKey = publicCoder.encode([rho, t1]); // pk ← pkEncode(ρ, t1)\n            const tr = shake256(publicKey, { dkLen: TR_BYTES }); // tr ← H(BytesToBits(pk), 512)\n            const secretKey = secretCoder.encode([rho, K_, tr, s1, s2, t0]); // sk ← skEncode(ρ, K,tr, s1, s2, t0)\n            xof.clean();\n            xofPrime.clean();\n            // STATS\n            // Kyber512:  { calls: 4, xofs: 12 }, Kyber768: { calls: 9, xofs: 27 }, Kyber1024: { calls: 16, xofs: 48 }\n            // DSA44:    { calls: 24, xofs: 24 }, DSA65:    { calls: 41, xofs: 41 }, DSA87:    { calls: 71, xofs: 71 }\n            cleanBytes(rho, rhoPrime, K_, s1, s2, s1Hat, t, t0, t1, tr, seedDst);\n            return { publicKey, secretKey };\n        },\n        // NOTE: random is optional.\n        sign: (secretKey, msg, random) => {\n            // This part can be pre-cached per secretKey, but there is only minor performance improvement,\n            // since we re-use a lot of variables to computation.\n            const [rho, _K, tr, s1, s2, t0] = secretCoder.decode(secretKey); // (ρ, K,tr, s1, s2, t0) ← skDecode(sk)\n            // Cache matrix to avoid re-compute later\n            const A = []; // A ← ExpandA(ρ)\n            const xof = XOF128(rho);\n            for (let i = 0; i < K; i++) {\n                const pv = [];\n                for (let j = 0; j < L; j++)\n                    pv.push(RejNTTPoly(xof.get(j, i)));\n                A.push(pv);\n            }\n            xof.clean();\n            for (let i = 0; i < L; i++)\n                NTT.encode(s1[i]); // sˆ1 ← NTT(s1)\n            for (let i = 0; i < K; i++) {\n                NTT.encode(s2[i]); // sˆ2 ← NTT(s2)\n                NTT.encode(t0[i]); // tˆ0 ← NTT(t0)\n            }\n            // This part is per msg\n            const mu = shake256.create({ dkLen: CRH_BYTES }).update(tr).update(msg).digest(); // 6: µ ← H(tr||M, 512) ▷ Compute message representative µ\n            // Compute private random seed\n            const rnd = random ? random : new Uint8Array(32);\n            ensureBytes(rnd);\n            const rhoprime = shake256\n                .create({ dkLen: CRH_BYTES })\n                .update(_K)\n                .update(rnd)\n                .update(mu)\n                .digest(); // ρ′← H(K||rnd||µ, 512)\n            ensureBytes(rhoprime, CRH_BYTES);\n            const x256 = XOF256(rhoprime, ZCoder.bytesLen);\n            //  Rejection sampling loop\n            main_loop: for (let kappa = 0;;) {\n                const y = [];\n                // y ← ExpandMask(ρ , κ)\n                for (let i = 0; i < L; i++, kappa++)\n                    y.push(ZCoder.decode(x256.get(kappa & 0xff, kappa >> 8)()));\n                const z = y.map((i) => NTT.encode(i.slice()));\n                const w = [];\n                for (let i = 0; i < K; i++) {\n                    // w ← NTT−1(A ◦ NTT(y))\n                    const wi = newPoly(N);\n                    for (let j = 0; j < L; j++)\n                        polyAdd(wi, MultiplyNTTs(A[i][j], z[j]));\n                    NTT.decode(wi);\n                    w.push(wi);\n                }\n                const w1 = w.map((j) => j.map(HighBits)); // w1 ← HighBits(w)\n                // Commitment hash: c˜ ∈{0, 1 2λ } ← H(µ||w1Encode(w1), 2λ)\n                const cTilde = shake256\n                    .create({ dkLen: C_TILDE_BYTES })\n                    .update(mu)\n                    .update(W1Vec.encode(w1))\n                    .digest();\n                // Verifer’s challenge\n                const cHat = NTT.encode(SampleInBall(cTilde)); // c ← SampleInBall(c˜1); cˆ ← NTT(c)\n                // ⟨⟨cs1⟩⟩ ← NTT−1(cˆ◦ sˆ1)\n                const cs1 = s1.map((i) => MultiplyNTTs(i, cHat));\n                for (let i = 0; i < L; i++) {\n                    polyAdd(NTT.decode(cs1[i]), y[i]); // z ← y + ⟨⟨cs1⟩⟩\n                    if (polyChknorm(cs1[i], GAMMA1 - BETA))\n                        continue main_loop; // ||z||∞ ≥ γ1 − β\n                }\n                // cs1 is now z (▷ Signer’s response)\n                let cnt = 0;\n                const h = [];\n                for (let i = 0; i < K; i++) {\n                    const cs2 = NTT.decode(MultiplyNTTs(s2[i], cHat)); // ⟨⟨cs2⟩⟩ ← NTT−1(cˆ◦ sˆ2)\n                    const r0 = polySub(w[i], cs2).map(LowBits); // r0 ← LowBits(w − ⟨⟨cs2⟩⟩)\n                    if (polyChknorm(r0, GAMMA2 - BETA))\n                        continue main_loop; // ||r0||∞ ≥ γ2 − β\n                    const ct0 = NTT.decode(MultiplyNTTs(t0[i], cHat)); // ⟨⟨ct0⟩⟩ ← NTT−1(cˆ◦ tˆ0)\n                    if (polyChknorm(ct0, GAMMA2))\n                        continue main_loop;\n                    polyAdd(r0, ct0);\n                    // ▷ Signer’s hint\n                    const hint = polyMakeHint(r0, w1[i]); // h ← MakeHint(−⟨⟨ct0⟩⟩, w− ⟨⟨cs2⟩⟩ + ⟨⟨ct0⟩⟩)\n                    h.push(hint.v);\n                    cnt += hint.cnt;\n                }\n                if (cnt > OMEGA)\n                    continue; // the number of 1’s in h is greater than ω\n                x256.clean();\n                const res = sigCoder.encode([cTilde, cs1, h]); // σ ← sigEncode(c˜, z mod±q, h)\n                // rho, _K, tr is subarray of secretKey, cannot clean.\n                cleanBytes(cTilde, cs1, h, cHat, w1, w, z, y, rhoprime, mu, s1, s2, t0, ...A);\n                return res;\n            }\n            // @ts-ignore\n            throw new Error('Unreachable code path reached, report this error');\n        },\n        verify: (publicKey, msg, sig) => {\n            // ML-DSA.Verify(pk, M, σ): Verifes a signature σ for a message M.\n            const [rho, t1] = publicCoder.decode(publicKey); // (ρ, t1) ← pkDecode(pk)\n            const tr = shake256(publicKey, { dkLen: TR_BYTES }); // 6: tr ← H(BytesToBits(pk), 512)\n            if (sig.length !== sigCoder.bytesLen)\n                return false; // return false instead of exception\n            const [cTilde, z, h] = sigCoder.decode(sig); // (c˜, z, h) ← sigDecode(σ), ▷ Signer’s commitment hash c ˜, response z and hint\n            if (h === false)\n                return false; // if h = ⊥ then return false\n            for (let i = 0; i < L; i++)\n                if (polyChknorm(z[i], GAMMA1 - BETA))\n                    return false;\n            const mu = shake256.create({ dkLen: CRH_BYTES }).update(tr).update(msg).digest(); // 7: µ ← H(tr||M, 512)\n            // Compute verifer’s challenge from c˜\n            const c = NTT.encode(SampleInBall(cTilde)); // c ← SampleInBall(c˜1)\n            const zNtt = z.map((i) => i.slice()); // zNtt = NTT(z)\n            for (let i = 0; i < L; i++)\n                NTT.encode(zNtt[i]);\n            const wTick1 = [];\n            const xof = XOF128(rho);\n            for (let i = 0; i < K; i++) {\n                const ct12d = MultiplyNTTs(NTT.encode(polyShiftl(t1[i])), c); //c * t1 * (2**d)\n                const Az = newPoly(N); // // A * z\n                for (let j = 0; j < L; j++) {\n                    const aij = RejNTTPoly(xof.get(j, i)); // A[i][j] inplace\n                    polyAdd(Az, MultiplyNTTs(aij, zNtt[j]));\n                }\n                // wApprox = A*z - c*t1 * (2**d)\n                const wApprox = NTT.decode(polySub(Az, ct12d));\n                // Reconstruction of signer’s commitment\n                wTick1.push(polyUseHint(wApprox, h[i])); // w ′ ← UseHint(h, w'approx )\n            }\n            xof.clean();\n            // c˜′← H (µ||w1Encode(w′1), 2λ),  Hash it; this should match c˜\n            const c2 = shake256\n                .create({ dkLen: C_TILDE_BYTES })\n                .update(mu)\n                .update(W1Vec.encode(wTick1))\n                .digest();\n            // Additional checks in FIPS-204:\n            // [[ ||z||∞ < γ1 − β ]] and [[c ˜ = c˜′]] and [[number of 1’s in h is ≤ ω]]\n            for (const t of h) {\n                const sum = t.reduce((acc, i) => acc + i, 0);\n                if (!(sum <= OMEGA))\n                    return false;\n            }\n            for (const t of z)\n                if (polyChknorm(t, GAMMA1 - BETA))\n                    return false;\n            return equalBytes(cTilde, c2);\n        },\n    };\n}\n// ML-DSA\nexport const ml_dsa44 = /* @__PURE__ */ getDilithium({\n    ...PARAMS[2],\n    CRH_BYTES: 64,\n    TR_BYTES: 64,\n    C_TILDE_BYTES: 32,\n    XOF128,\n    XOF256,\n});\nexport const ml_dsa65 = /* @__PURE__ */ getDilithium({\n    ...PARAMS[3],\n    CRH_BYTES: 64,\n    TR_BYTES: 64,\n    C_TILDE_BYTES: 48,\n    XOF128,\n    XOF256,\n});\nexport const ml_dsa87 = /* @__PURE__ */ getDilithium({\n    ...PARAMS[5],\n    CRH_BYTES: 64,\n    TR_BYTES: 64,\n    C_TILDE_BYTES: 64,\n    XOF128,\n    XOF256,\n});\n//# sourceMappingURL=ml-dsa.js.map","/*! noble-post-quantum - MIT License (c) 2024 Paul Miller (paulmillr.com) */\nimport { bytes as abytes } from '@noble/hashes/_assert';\nimport { randomBytes as randb } from '@noble/hashes/utils';\nexport const ensureBytes = abytes;\nexport const randomBytes = randb;\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\nexport function splitCoder(...lengths) {\n    const getLength = (c) => (typeof c === 'number' ? c : c.bytesLen);\n    const bytesLen = lengths.reduce((sum, a) => sum + getLength(a), 0);\n    return {\n        bytesLen,\n        encode: (bufs) => {\n            const res = new Uint8Array(bytesLen);\n            for (let i = 0, pos = 0; i < lengths.length; i++) {\n                const c = lengths[i];\n                const l = getLength(c);\n                const b = typeof c === 'number' ? bufs[i] : c.encode(bufs[i]);\n                ensureBytes(b, l);\n                res.set(b, pos);\n                if (typeof c !== 'number')\n                    b.fill(0); // clean\n                pos += l;\n            }\n            return res;\n        },\n        decode: (buf) => {\n            ensureBytes(buf, bytesLen);\n            const res = [];\n            for (const c of lengths) {\n                const l = getLength(c);\n                const b = buf.subarray(0, l);\n                res.push(typeof c === 'number' ? b : c.decode(b));\n                buf = buf.subarray(l);\n            }\n            return res;\n        },\n    };\n}\n// nano-packed.array (fixed size)\nexport function vecCoder(c, vecLen) {\n    const bytesLen = vecLen * c.bytesLen;\n    return {\n        bytesLen,\n        encode: (u) => {\n            if (u.length !== vecLen)\n                throw new Error(`vecCoder.encode: wrong length=${u.length}. Expected: ${vecLen}`);\n            const res = new Uint8Array(bytesLen);\n            for (let i = 0, pos = 0; i < u.length; i++) {\n                const b = c.encode(u[i]);\n                res.set(b, pos);\n                b.fill(0); // clean\n                pos += b.length;\n            }\n            return res;\n        },\n        decode: (a) => {\n            ensureBytes(a, bytesLen);\n            const r = [];\n            for (let i = 0; i < a.length; i += c.bytesLen)\n                r.push(c.decode(a.subarray(i, i + c.bytesLen)));\n            return r;\n        },\n    };\n}\n// cleanBytes(new Uint8Array(), [new Uint16Array(), new Uint32Array()])\nexport function cleanBytes(...list) {\n    for (const t of list) {\n        if (Array.isArray(t))\n            for (const b of t)\n                b.fill(0);\n        else\n            t.fill(0);\n    }\n}\nexport function getMask(bits) {\n    return (1 << bits) - 1; // 4 -> 0b1111\n}\n//# sourceMappingURL=utils.js.map","/*\r\n *      bignumber.js v9.1.2\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n    alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                       not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if less than two characters,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n            alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, -1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // THe index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  // If any number is NaN, return NaN.\r\n  function maxOrMin(args, n) {\r\n    var k, y,\r\n      i = 1,\r\n      x = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      y = new BigNumber(args[i]);\r\n      if (!y.s || (k = compare(x, y)) === n || k === 0 && x.s === n) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on ±Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = mathfloor(n / pows10[d - j - 1] % 10);\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : mathfloor(n / pows10[d - j - 1] % 10);\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and ±Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = ±Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return ±0, else return ±Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, ±Infinity or ±0?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return ±0 if either is ±0.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) {\r\n      zc = xc;\r\n      xc = yc;\r\n      yc = zc;\r\n      i = xcL;\r\n      xcL = ycL;\r\n      ycL = i;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return ±Infinity if either ±Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n      b = a;\r\n    }\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) {\r\n        i = g1;\r\n        g1 = g2;\r\n        g2 = i;\r\n        len -= i;\r\n      }\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nexport var BigNumber = clone();\r\n\r\nexport default BigNumber;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.js\");\n"],"names":["e","t","r","d","A","i","n","hp","alloc","subarray","prototype","Uint8Array","call","this","Object","setPrototypeOf","exports","Array","F","Bool","S","Double","L","Enum","q","Float","O","Hyper","U","Int","v","LargeInt","x","Opaque","D","Option","X","Quadruple","N","Reference","G","String","M","Struct","Y","Union","W","UnsignedHyper","T","UnsignedInt","R","VarArray","P","VarOpaque","z","Void","k","XdrReader","f","XdrWriter","c","config","it","TypeError","constructor","super","o","s","u","isBuffer","isArray","ArrayBuffer","isView","from","_buffer","_length","length","_index","eof","advance","rewind","read","readInt32BE","readUInt32BE","readBigInt64BE","readBigUInt64BE","readFloatBE","readDoubleBE","ensureInputConsumed","a","h","allocUnsafe","resize","Math","ceil","copy","finalize","toArray","write","fill","writeInt32BE","writeUInt32BE","writeBigInt64BE","writeBigUInt64BE","writeFloatBE","writeDoubleBE","static","l","p","toXDR","w","fromXDR","m","validateXDR","isValid","g","y","toString","b","_","name","getPrototypeOf","B","BigInt","asIntN","I","MAX_VALUE","MIN_VALUE","_value","RangeError","valueOf","asUintN","size","unsigned","slice","toJSON","toBigInt","reverse","fromString","defineIntBoundaries","low","Number","high","fromBits","$","V","_maxLength","readString","byteLength","C","j","_childType","value","_byValue","enumName","JSON","stringify","members","_members","values","fromName","fromValue","create","results","entries","resolve","_attributes","_fields","structName","J","set","_switchOn","_switch","armForSwitch","_arm","_armType","_arms","get","arm","armType","_switches","_defaultArm","armTypeForArm","unionName","switch","switchOn","Map","defaultArm","switches","arms","H","definitions","Q","childReference","variable","Z","K","sizedType","tt","et","rt","nt","_destination","_definitions","enum","define","struct","union","typedef","bool","int","hyper","uint","uhyper","float","double","quadruple","string","opaque","varOpaque","array","varArray","option","lookup","toByteArray","charCodeAt","fromByteArray","push","join","Error","indexOf","Symbol","for","IS","isEncoding","buffer","byteOffset","SharedArrayBuffer","type","data","toPrimitive","arguments","toLowerCase","lastIndexOf","readUInt16BE","parseInt","substr","E","min","fromCharCode","apply","TYPED_ARRAY_SUPPORT","foo","console","error","defineProperty","enumerable","poolSize","allocUnsafeSlow","_isBuffer","compare","offset","concat","swap16","swap32","swap64","toLocaleString","equals","inspect","replace","trim","includes","isFinite","_arr","readUintLE","readUIntLE","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readBigUInt64LE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readBigInt64LE","readFloatLE","readDoubleLE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeBigUInt64LE","writeIntLE","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeBigInt64LE","writeFloatLE","writeDoubleLE","copyWithin","writable","configurable","stack","code","message","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","isInteger","abs","split","NaN","isNaN","log","LN2","globalThis","Function","window","hasOwnProperty","toStringTag","module","_typeof","iterator","_defineProperties","target","props","descriptor","arg","key","input","hint","prim","undefined","res","_toPrimitive","_createClass","Constructor","protoProps","staticProps","isDeepEqual","isDeepStrictEqual","_require$codes","codes","ERR_AMBIGUOUS_ARGUMENT","ERR_INVALID_ARG_VALUE","ERR_INVALID_RETURN_VALUE","ERR_MISSING_ARGS","AssertionError","_require$types","isPromise","isRegExp","objectAssign","objectIs","RegExpPrototypeTest","lazyLoadComparison","comparison","warned","assert","ok","NO_EXCEPTION_SENTINEL","innerFail","obj","innerOk","fn","argLen","generatedMessage","err","actual","expected","operator","stackStartFn","_len","args","_key","fail","internalMessage","argsLen","process","emitWarning","warn","bind","errArgs","equal","notEqual","deepEqual","notDeepEqual","deepStrictEqual","notDeepStrictEqual","strictEqual","notStrictEqual","Comparison","keys","_this","instance","_classCallCheck","forEach","expectedException","msg","compareExceptionKey","isPrototypeOf","getActual","checkIsPromise","then","catch","waitForActual","promiseFn","Promise","resultPromise","expectsError","details","fnType","expectsNoError","internalMatch","regexp","fnName","match","strict","_len6","_key6","throws","_len2","_key2","rejects","_len3","_key3","result","doesNotThrow","_len4","_key4","doesNotReject","_len5","_key5","ifError","newErr","origStack","tmp2","shift","tmp1","pos","doesNotMatch","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","_cache","has","Wrapper","_construct","_getPrototypeOf","_setPrototypeOf","Parent","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","__proto__","endsWith","str","search","this_len","substring","blue","green","red","white","kReadableOperator","strictEqualObject","notStrictEqualObject","notIdentical","copyError","source","inspectValue","val","compact","customInspect","depth","maxArrayLength","Infinity","showHidden","breakLength","showProxy","sorted","getters","createErrDiff","other","lastPos","end","skipped","actualInspected","actualLines","expectedLines","indicator","inputLength","stderr","isTTY","columns","count","maxCount","repeat","pop","maxLines","max","_actualLines","printedLines","skippedMsg","cur","expectedLine","actualLine","divergingLines","_Error","_inspect$custom","subClass","superClass","_inherits","Derived","hasNativeReflectConstruct","_super","Super","NewTarget","options","limit","stackTraceLimit","getColorDepth","base","_res","knownOperators","captureStackTrace","recurseTimes","ctx","custom","_createSuper","util","createErrorType","Base","NodeError","_Base","arg1","arg2","arg3","getMessage","oneOf","thing","len","map","determiner","start","reason","inspected","_slicedToArray","arr","_arrayWithHoles","next","done","return","_iterableToArrayLimit","minLen","_arrayLikeToArray","test","_unsupportedIterableToArray","_nonIterableRest","arr2","regexFlagsSupported","flags","arrayFromSet","arrayFromMap","is","objectGetOwnPropertySymbols","numberIsNaN","uncurryThis","propertyIsEnumerable","objectToString","isAnyArrayBuffer","isArrayBufferView","isDate","isMap","isSet","isNativeError","isBoxedPrimitive","isNumberObject","isStringObject","isBooleanObject","isBigIntObject","isSymbolObject","isFloat32Array","isFloat64Array","isNonIndex","getOwnNonIndexProperties","kNoIterator","kIsArray","kIsSet","kIsMap","innerDeepEqual","val1","val2","memos","buf1","buf2","val1Tag","keys1","keys2","keyCheck","Date","getTime","RegExp","areSimilarTypedArrays","areSimilarFloatArrays","_keys","_keys2","isEqualBoxedPrimitive","getEnumerables","iterationType","aKeys","bKeys","symbolKeysA","symbolKeysB","_symbolKeysB","position","val2MemoA","val2MemoB","areEq","memo","aValues","Set","add","setMightHaveLoosePrim","bValues","_i","_val","setHasEqualElement","setEquiv","aEntries","_aEntries$i","item1","item2","mapMightHaveLoosePrim","bEntries","_i2","_bEntries$_i","item","mapHasEqualEntry","mapEquiv","keysA","objEquiv","delete","setValues","findLooseMatchingPrimitives","altValue","curB","key1","key2","cov_bdrq1q43a","actualCoverage","Buffer","cov_290tl2xvzd","Account","accountId","sequence","StrKey","isValidMdilithium2PublicKey","isValidDilithium2PublicKey","_accountId","BigNumber","plus","cov_1slm80zu91","Address","address","_type","decodeDilithium2PublicKey","isValidContract","decodeContract","encodeDilithium2PublicKey","encodeContract","scVal","fromScAddress","scAddress","xdr","ScAddressType","scAddressTypeAccount","account","dilithium2","scAddressTypeContract","contract","contractId","ScVal","scvAddress","toScAddress","ScAddress","PublicKey","publicKeyTypeDilithium2","cov_26qmmq3po1","Asset","issuer","_toXDRObject","ChangeTrustAsset","TrustLineAsset","networkPassphrase","networkId","hash","preimage","HashIdPreimage","envelopeTypeContractId","HashIdPreimageContractId","contractIdPreimage","ContractIdPreimage","contractIdPreimageFromAsset","toXDRObject","xdrType","xdrTypeString","xdrAsset","isNative","assetTypeNative","AlphaNum4","AlphaNum12","padLength","paddedCode","padEnd","assetType","assetCode","Keypair","fromPublicKey","xdrAccountId","getRawAssetType","AssetType","assetTypeCreditAlphanum4","assetTypeCreditAlphanum12","asset","getCode","getIssuer","assetXdr","anum","alphaNum4","alphaNum12","trimEnd","assetA","assetB","xdrAtype","xdrBtype","asciiCompare","cov_1ro8haigpy","_regeneratorRuntime","asyncIterator","wrap","Generator","Context","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","mark","awrap","async","prev","charAt","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","authorizeEntry","_x","_x2","_x3","_authorizeEntry","_callee","entry","signer","validUntilLedgerSeq","clone","addrAuth","payload","signature","publicKey","sigScVal","_args","_context","Networks","FUTURENET","credentials","SorobanCredentialsType","sorobanCredentialsAddress","SorobanAuthorizationEntry","signatureExpirationLedger","envelopeTypeSorobanAuthorization","HashIdPreimageSorobanAuthorization","nonce","invocation","rootInvocation","t0","t1","sign","verify","nativeToScVal","public_key","scvVec","_next","_throw","authorizeInvocation","bytes","kp","random","rawPublicKey","Int64","reduce","accum","pk","SorobanCredentials","SorobanAddressCredentials","cov_niyjt30e8","Claimant","destination","predicate","ClaimPredicate","_predicate","claimPredicateUnconditional","left","right","claimPredicateAnd","claimPredicateOr","claimPredicateNot","absBefore","claimPredicateBeforeAbsoluteTime","seconds","claimPredicateBeforeRelativeTime","claimantXdr","ClaimantType","claimantTypeV0","v0","claimant","ClaimantV0","cov_1b85vzw7jk","Contract","_id","params","Operation","invokeContractFunction","function","LedgerKey","contractData","LedgerKeyContractData","scvLedgerKeyContractInstance","durability","ContractDataDurability","persistent","cov_2rrsl2n4hs","humanizeEvents","events","inSuccessfulContractCall","extractEvent","event","topics","body","scValToNative","cov_hvs0rev22","_callSuper","FeeBumpTransaction","_TransactionBase","envelope","TransactionEnvelope","envelopeType","EnvelopeType","envelopeTypeTxFeeBump","txEnvelope","tx","fee","signatures","innerTxEnvelope","envelopeTypeTx","innerTx","v1","_feeSource","encodeMuxedAccountToAddress","feeSource","_innerTransaction","Transaction","operations","taggedTransaction","TransactionSignaturePayloadTaggedTransaction","txSignature","TransactionSignaturePayload","Hash","FeeBumpTransactionEnvelope","TransactionBase","cov_1aoyszgkls","XDR","SCSYMBOL_LIMIT","SC_SPEC_DOC_LIMIT","scpStPrepare","scpStConfirm","scpStExternalize","scpStNominate","switchName","prepare","confirm","externalize","nominate","assetTypePoolShare","assetCode4","assetCode12","thresholdMasterWeight","thresholdLow","thresholdMed","thresholdHigh","trustline","offer","claimableBalance","liquidityPool","contractCode","configSetting","ttl","authRequiredFlag","authRevocableFlag","authImmutableFlag","authClawbackEnabledFlag","v3","v2","authorizedFlag","authorizedToMaintainLiabilitiesFlag","trustlineClawbackEnabledFlag","liquidityPoolConstantProduct","liquidityPoolId","passiveFlag","andPredicates","orPredicates","notPredicate","relBefore","claimableBalanceIdTypeV0","claimableBalanceClawbackEnabledFlag","constantProduct","temporary","trustLine","envelopeTypeTxV0","envelopeTypeScp","envelopeTypeAuth","envelopeTypeScpvalue","envelopeTypeOpId","envelopeTypePoolRevokeOpId","stellarValueBasic","stellarValueSigned","lcValueSignature","disableLiquidityPoolTradingFlag","disableLiquidityPoolDepositFlag","disableLiquidityPoolWithdrawalFlag","ledgerUpgradeVersion","ledgerUpgradeBaseFee","ledgerUpgradeMaxTxSetSize","ledgerUpgradeBaseReserve","ledgerUpgradeFlags","ledgerUpgradeConfig","ledgerUpgradeMaxSorobanTxSetSize","newLedgerVersion","newBaseFee","newMaxTxSetSize","newBaseReserve","newFlags","newConfig","newMaxSorobanTxSetSize","metaentry","liveentry","deadentry","initentry","liveEntry","deadEntry","metaEntry","txsetCompTxsMaybeDiscountedFee","txsMaybeDiscountedFee","v0Components","v1TxSet","generalizedTxSet","ledgerEntryCreated","ledgerEntryUpdated","ledgerEntryRemoved","ledgerEntryState","created","updated","removed","state","system","diagnostic","errMisc","errData","errConf","errAuth","errLoad","iPv4","iPv6","ipv4","ipv6","errorMsg","auth","dontHave","getPeers","peers","getTxSet","txSet","transaction","getScpQuorumset","scpQuorumset","scpMessage","getScpState","hello","surveyRequest","surveyResponse","sendMore","sendMoreExtended","floodAdvert","floodDemand","surveyTopology","surveyTopologyResponseV0","surveyTopologyResponseV1","topologyResponseBodyV0","topologyResponseBodyV1","txSetHash","signedSurveyRequestMessage","signedSurveyResponseMessage","qSetHash","qSet","getScpLedgerSeq","sendMoreMessage","sendMoreExtendedMessage","mdilithium2","createAccount","payment","pathPaymentStrictReceive","manageSellOffer","createPassiveSellOffer","setOptions","changeTrust","allowTrust","accountMerge","inflation","manageData","bumpSequence","manageBuyOffer","pathPaymentStrictSend","createClaimableBalance","claimClaimableBalance","beginSponsoringFutureReserves","endSponsoringFutureReserves","revokeSponsorship","clawback","clawbackClaimableBalance","setTrustLineFlags","liquidityPoolDeposit","liquidityPoolWithdraw","invokeHostFunction","extendFootprintTtl","restoreFootprint","revokeSponsorshipLedgerEntry","revokeSponsorshipSigner","ledgerKey","hostFunctionTypeInvokeContract","hostFunctionTypeCreateContract","hostFunctionTypeUploadContractWasm","contractIdPreimageFromAddress","fromAddress","fromAsset","invokeContract","createContract","wasm","sorobanAuthorizedFunctionTypeContractFn","sorobanAuthorizedFunctionTypeCreateContractHostFn","contractFn","createContractHostFn","sorobanCredentialsSourceAccount","createAccountOp","paymentOp","pathPaymentStrictReceiveOp","manageSellOfferOp","createPassiveSellOfferOp","setOptionsOp","changeTrustOp","allowTrustOp","manageDataOp","bumpSequenceOp","manageBuyOfferOp","pathPaymentStrictSendOp","createClaimableBalanceOp","claimClaimableBalanceOp","beginSponsoringFutureReservesOp","revokeSponsorshipOp","clawbackOp","clawbackClaimableBalanceOp","setTrustLineFlagsOp","liquidityPoolDepositOp","liquidityPoolWithdrawOp","invokeHostFunctionOp","extendFootprintTtlOp","restoreFootprintOp","operationId","revokeId","sorobanAuthorization","memoNone","memoText","memoId","memoHash","memoReturn","text","id","retHash","precondNone","precondTime","precondV2","timeBounds","sorobanData","feeBump","claimAtomTypeV0","claimAtomTypeOrderBook","claimAtomTypeLiquidityPool","orderBook","createAccountSuccess","createAccountMalformed","createAccountUnderfunded","createAccountLowReserve","createAccountAlreadyExist","paymentSuccess","paymentMalformed","paymentUnderfunded","paymentSrcNoTrust","paymentSrcNotAuthorized","paymentNoDestination","paymentNoTrust","paymentNotAuthorized","paymentLineFull","paymentNoIssuer","pathPaymentStrictReceiveSuccess","pathPaymentStrictReceiveMalformed","pathPaymentStrictReceiveUnderfunded","pathPaymentStrictReceiveSrcNoTrust","pathPaymentStrictReceiveSrcNotAuthorized","pathPaymentStrictReceiveNoDestination","pathPaymentStrictReceiveNoTrust","pathPaymentStrictReceiveNotAuthorized","pathPaymentStrictReceiveLineFull","pathPaymentStrictReceiveNoIssuer","pathPaymentStrictReceiveTooFewOffers","pathPaymentStrictReceiveOfferCrossSelf","pathPaymentStrictReceiveOverSendmax","success","noIssuer","pathPaymentStrictSendSuccess","pathPaymentStrictSendMalformed","pathPaymentStrictSendUnderfunded","pathPaymentStrictSendSrcNoTrust","pathPaymentStrictSendSrcNotAuthorized","pathPaymentStrictSendNoDestination","pathPaymentStrictSendNoTrust","pathPaymentStrictSendNotAuthorized","pathPaymentStrictSendLineFull","pathPaymentStrictSendNoIssuer","pathPaymentStrictSendTooFewOffers","pathPaymentStrictSendOfferCrossSelf","pathPaymentStrictSendUnderDestmin","manageSellOfferSuccess","manageSellOfferMalformed","manageSellOfferSellNoTrust","manageSellOfferBuyNoTrust","manageSellOfferSellNotAuthorized","manageSellOfferBuyNotAuthorized","manageSellOfferLineFull","manageSellOfferUnderfunded","manageSellOfferCrossSelf","manageSellOfferSellNoIssuer","manageSellOfferBuyNoIssuer","manageSellOfferNotFound","manageSellOfferLowReserve","manageOfferCreated","manageOfferUpdated","manageOfferDeleted","manageBuyOfferSuccess","manageBuyOfferMalformed","manageBuyOfferSellNoTrust","manageBuyOfferBuyNoTrust","manageBuyOfferSellNotAuthorized","manageBuyOfferBuyNotAuthorized","manageBuyOfferLineFull","manageBuyOfferUnderfunded","manageBuyOfferCrossSelf","manageBuyOfferSellNoIssuer","manageBuyOfferBuyNoIssuer","manageBuyOfferNotFound","manageBuyOfferLowReserve","setOptionsSuccess","setOptionsLowReserve","setOptionsTooManySigners","setOptionsBadFlags","setOptionsInvalidInflation","setOptionsCantChange","setOptionsUnknownFlag","setOptionsThresholdOutOfRange","setOptionsBadSigner","setOptionsInvalidHomeDomain","setOptionsAuthRevocableRequired","changeTrustSuccess","changeTrustMalformed","changeTrustNoIssuer","changeTrustInvalidLimit","changeTrustLowReserve","changeTrustSelfNotAllowed","changeTrustTrustLineMissing","changeTrustCannotDelete","changeTrustNotAuthMaintainLiabilities","allowTrustSuccess","allowTrustMalformed","allowTrustNoTrustLine","allowTrustTrustNotRequired","allowTrustCantRevoke","allowTrustSelfNotAllowed","allowTrustLowReserve","accountMergeSuccess","accountMergeMalformed","accountMergeNoAccount","accountMergeImmutableSet","accountMergeHasSubEntries","accountMergeSeqnumTooFar","accountMergeDestFull","accountMergeIsSponsor","sourceAccountBalance","inflationSuccess","inflationNotTime","payouts","manageDataSuccess","manageDataNotSupportedYet","manageDataNameNotFound","manageDataLowReserve","manageDataInvalidName","bumpSequenceSuccess","bumpSequenceBadSeq","createClaimableBalanceSuccess","createClaimableBalanceMalformed","createClaimableBalanceLowReserve","createClaimableBalanceNoTrust","createClaimableBalanceNotAuthorized","createClaimableBalanceUnderfunded","balanceId","claimClaimableBalanceSuccess","claimClaimableBalanceDoesNotExist","claimClaimableBalanceCannotClaim","claimClaimableBalanceLineFull","claimClaimableBalanceNoTrust","claimClaimableBalanceNotAuthorized","beginSponsoringFutureReservesSuccess","beginSponsoringFutureReservesMalformed","beginSponsoringFutureReservesAlreadySponsored","beginSponsoringFutureReservesRecursive","endSponsoringFutureReservesSuccess","endSponsoringFutureReservesNotSponsored","revokeSponsorshipSuccess","revokeSponsorshipDoesNotExist","revokeSponsorshipNotSponsor","revokeSponsorshipLowReserve","revokeSponsorshipOnlyTransferable","revokeSponsorshipMalformed","clawbackSuccess","clawbackMalformed","clawbackNotClawbackEnabled","clawbackNoTrust","clawbackUnderfunded","clawbackClaimableBalanceSuccess","clawbackClaimableBalanceDoesNotExist","clawbackClaimableBalanceNotIssuer","clawbackClaimableBalanceNotClawbackEnabled","setTrustLineFlagsSuccess","setTrustLineFlagsMalformed","setTrustLineFlagsNoTrustLine","setTrustLineFlagsCantRevoke","setTrustLineFlagsInvalidState","setTrustLineFlagsLowReserve","liquidityPoolDepositSuccess","liquidityPoolDepositMalformed","liquidityPoolDepositNoTrust","liquidityPoolDepositNotAuthorized","liquidityPoolDepositUnderfunded","liquidityPoolDepositLineFull","liquidityPoolDepositBadPrice","liquidityPoolDepositPoolFull","liquidityPoolWithdrawSuccess","liquidityPoolWithdrawMalformed","liquidityPoolWithdrawNoTrust","liquidityPoolWithdrawUnderfunded","liquidityPoolWithdrawLineFull","liquidityPoolWithdrawUnderMinimum","invokeHostFunctionSuccess","invokeHostFunctionMalformed","invokeHostFunctionTrapped","invokeHostFunctionResourceLimitExceeded","invokeHostFunctionEntryArchived","invokeHostFunctionInsufficientRefundableFee","extendFootprintTtlSuccess","extendFootprintTtlMalformed","extendFootprintTtlResourceLimitExceeded","extendFootprintTtlInsufficientRefundableFee","restoreFootprintSuccess","restoreFootprintMalformed","restoreFootprintResourceLimitExceeded","restoreFootprintInsufficientRefundableFee","opInner","opBadAuth","opNoAccount","opNotSupported","opTooManySubentries","opExceededWorkLimit","opTooManySponsoring","createAccountResult","paymentResult","pathPaymentStrictReceiveResult","manageSellOfferResult","createPassiveSellOfferResult","setOptionsResult","changeTrustResult","allowTrustResult","accountMergeResult","inflationResult","manageDataResult","bumpSeqResult","manageBuyOfferResult","pathPaymentStrictSendResult","createClaimableBalanceResult","claimClaimableBalanceResult","beginSponsoringFutureReservesResult","endSponsoringFutureReservesResult","revokeSponsorshipResult","clawbackResult","clawbackClaimableBalanceResult","setTrustLineFlagsResult","liquidityPoolDepositResult","liquidityPoolWithdrawResult","invokeHostFunctionResult","extendFootprintTtlResult","restoreFootprintResult","tr","txFeeBumpInnerSuccess","txSuccess","txFailed","txTooEarly","txTooLate","txMissingOperation","txBadSeq","txBadAuth","txInsufficientBalance","txNoAccount","txInsufficientFee","txBadAuthExtra","txInternalError","txNotSupported","txFeeBumpInnerFailed","txBadSponsorship","txBadMinSeqAgeOrGap","txMalformed","txSorobanInvalid","innerResultPair","keyTypeDilithium2","keyTypePreAuthTx","keyTypeHashX","keyTypeDilithium2SignedPayload","keyTypeMuxedDilithium2","signerKeyTypeDilithium2","signerKeyTypePreAuthTx","signerKeyTypeHashX","signerKeyTypeDilithium2SignedPayload","preAuthTx","hashX","dilithium2SignedPayload","scvBool","scvVoid","scvError","scvU32","scvI32","scvU64","scvI64","scvTimepoint","scvDuration","scvU128","scvI128","scvU256","scvI256","scvBytes","scvString","scvSymbol","scvMap","scvContractInstance","scvLedgerKeyNonce","sceContract","sceWasmVm","sceContext","sceStorage","sceObject","sceCrypto","sceEvents","sceBudget","sceValue","sceAuth","scecArithDomain","scecIndexBounds","scecInvalidInput","scecMissingValue","scecExistingValue","scecExceededLimit","scecInvalidAction","scecInternalError","scecUnexpectedType","scecUnexpectedSize","contractExecutableWasm","contractExecutableStellarAsset","wasmHash","u32","i32","u64","i64","timepoint","duration","u128","i128","u256","i256","sym","vec","nonceKey","scEnvMetaKindInterfaceVersion","interfaceVersion","scMetaV0","scSpecTypeVal","scSpecTypeBool","scSpecTypeVoid","scSpecTypeError","scSpecTypeU32","scSpecTypeI32","scSpecTypeU64","scSpecTypeI64","scSpecTypeTimepoint","scSpecTypeDuration","scSpecTypeU128","scSpecTypeI128","scSpecTypeU256","scSpecTypeI256","scSpecTypeBytes","scSpecTypeString","scSpecTypeSymbol","scSpecTypeAddress","scSpecTypeOption","scSpecTypeResult","scSpecTypeVec","scSpecTypeMap","scSpecTypeTuple","scSpecTypeBytesN","scSpecTypeUdt","tuple","bytesN","udt","scSpecUdtUnionCaseVoidV0","scSpecUdtUnionCaseTupleV0","voidCase","tupleCase","scSpecEntryFunctionV0","scSpecEntryUdtStructV0","scSpecEntryUdtUnionV0","scSpecEntryUdtEnumV0","scSpecEntryUdtErrorEnumV0","functionV0","udtStructV0","udtUnionV0","udtEnumV0","udtErrorEnumV0","wasmInsnExec","memAlloc","memCpy","memCmp","dispatchHostFunction","visitObject","valSer","valDeser","computeSha256Hash","computeDilithium2PubKey","verifyDilithium2Sig","vmInstantiation","vmCachedInstantiation","invokeVmFunction","computeKeccak256Hash","decodeEcdsaCurve256Sig","recoverEcdsaSecp256k1Key","int256AddSub","int256Mul","int256Div","int256Pow","int256Shift","chaCha20DrawBytes","parseWasmInstructions","parseWasmFunctions","parseWasmGlobals","parseWasmTableEntries","parseWasmTypes","parseWasmDataSegments","parseWasmElemSegments","parseWasmImports","parseWasmExports","parseWasmDataSegmentBytes","instantiateWasmInstructions","instantiateWasmFunctions","instantiateWasmGlobals","instantiateWasmTableEntries","instantiateWasmTypes","instantiateWasmDataSegments","instantiateWasmElemSegments","instantiateWasmImports","instantiateWasmExports","instantiateWasmDataSegmentBytes","sec1DecodePointUncompressed","verifyEcdsaSecp256r1Sig","configSettingContractMaxSizeBytes","configSettingContractComputeV0","configSettingContractLedgerCostV0","configSettingContractHistoricalDataV0","configSettingContractEventsV0","configSettingContractBandwidthV0","configSettingContractCostParamsCpuInstructions","configSettingContractCostParamsMemoryBytes","configSettingContractDataKeySizeBytes","configSettingContractDataEntrySizeBytes","configSettingStateArchival","configSettingContractExecutionLanes","configSettingBucketlistSizeWindow","configSettingEvictionIterator","contractMaxSizeBytes","contractCompute","contractLedgerCost","contractHistoricalData","contractEvents","contractBandwidth","contractCostParamsCpuInsns","contractCostParamsMemBytes","contractDataKeySizeBytes","contractDataEntrySizeBytes","stateArchivalSettings","contractExecutionLanes","bucketListSizeWindow","evictionIterator","cov_u3wxpzh00","LiquidityPoolFeeV18","getLiquidityPoolId","liquidityPoolType","liquidityPoolParameters","_ref","lpTypeData","LiquidityPoolType","lpParamsData","LiquidityPoolConstantProductParameters","cov_2q5c0ab9ss","hasher","sha256","update","digest","cov_2fioy1554y","cov_1in89alp1b","buildInvocationTree","root","output","inner","contractAddress","functionName","_ref2","executable","exec","salt","fromOperation","invocations","subInvocations","walkInvocationTree","callback","walkHelper","node","parent","cov_1idv3eed35","cov_19gmyzfjy0","secretKey","_secretSeed","_publicKey","generate","_secretKey","generateSK","secret","rawSecret","decodeDilithium2SecretSeed","fromRawDilithium2Seed","rawSeed","nacl","AccountId","MuxedAccount","MuxedAccountMdilithium2","Uint64","encodeDilithium2SecretSeed","canSign","signatureHint","DecoratedSignature","keyHint","byte","cov_25bav6nmc1","LiquidityPoolAsset","ctAssetXdr","lpConstantProductParamsXdr","lpParamsXdr","LiquidityPoolParameters","poolId","getLiquidityPoolParameters","cov_xwwe9nbmg","LiquidityPoolId","tlAssetXdr","xdrPoolId","PoolId","cov_1noe2lbhxq","MemoNone","MemoID","MemoText","MemoHash","MemoReturn","Memo","_validateIdValue","_validateTextValue","_validateHashValue","number","valueBuffer","object","none","cov_6a4em8p1","baseAccount","_muxedXdr","encodeMuxedAccount","_mAddress","mAddress","sequenceNum","muxedAccount","decodeAddressToMuxedAccount","gAddress","extractBaseAddress","sequenceNumber","incrementSequenceNumber","otherMuxedAccount","cov_6m95vx04d","PUBLIC","TESTNET","SANDBOX","STANDALONE","cov_1mcwmb1578","scValToBigInt","scv","scIntType","XdrLargeInt","getType","lo","hi","loLo","loHi","hiLo","hiHi","cov_qk64f81hi","Int128","_LargeInt","cov_2l0k4kzeic","Int256","cov_pmgq244eh","ScInt","_XdrLargeInt","opts","signed","startsWith","bitlen","bigI","find","nearestBigIntSize","cov_208pvagn0l","Uint128","cov_pqqox752f","Uint256","cov_mwupiiy3e","scvType","bi","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","_sizeCheck","hi64","lo64","Int128Parts","UInt128Parts","hiHi64","hiLo64","loHi64","loLo64","Int256Parts","UInt256Parts","toI64","toI128","toI256","toU64","toU128","toU256","bits","cov_2bzd75cz6h","ONE","MAX_INT64","AuthRequiredFlag","AuthRevocableFlag","AuthImmutableFlag","AuthClawbackEnabledFlag","opAttributes","sourceAccount","operation","attrs","operationName","accountIdtoAddress","startingBalance","_fromXDRAmount","amount","sendAsset","sendMax","destAsset","destAmount","path","pathKey","sendAmount","destMin","line","trustor","authorize","inflationDest","clearFlags","setFlags","masterWeight","lowThreshold","medThreshold","highThreshold","homeDomain","dilithium2PublicKey","sha256Hash","signedPayload","encodeSignedPayload","weight","selling","buying","price","_fromXDRPrice","offerId","buyAmount","dataName","dataValue","bumpTo","claimants","sponsoredId","LedgerEntryType","seller","sellerId","signerKey","SignerKeyType","convertXDRSignerKeyToObject","extractRevokeSponshipDetails","clears","sets","mapping","authorized","TrustLineFlags","authorizedToMaintainLiabilities","clawbackEnabled","flagName","bit","getFlagValue","maxAmountA","maxAmountB","minPrice","maxPrice","minAmountA","minAmountB","func","hostFunction","extendTo","allowZero","isZero","isNegative","times","gt","decimalPlaces","isValidFunction","parseFloat","div","toFixed","xdrObject","Price","approx","best_r","ops","revokeAccountSponsorship","revokeTrustlineSponsorship","revokeOfferSponsorship","revokeDataSponsorship","revokeClaimableBalanceSponsorship","revokeLiquidityPoolSponsorship","revokeSignerSponsorship","createStellarAssetContract","createCustomContract","uploadContractWasm","cov_2od0blool3","OperationBody","setSourceAccount","cov_2hw5860bf2","attributes","AssetCode","AllowTrustOp","cov_28tfkeepta","op","BeginSponsoringFutureReservesOp","cov_10zqg3i4x6","BumpSequenceOp","cov_uxqdomas7","toChangeTrustXDRObject","isValidAmount","constructAmountRequirementsError","_toXDRAmount","masterKeypair","changeTrustOP","ChangeTrustOp","cov_i4fl18ix8","validateClaimableBalanceId","ClaimableBalanceId","ClaimClaimableBalanceOp","cov_xyti6r0u8","ClawbackOp","cov_13xtgljlbg","ClawbackClaimableBalanceOp","cov_r3kcu336b","CreateAccountOp","cov_1zyljkp6ba","CreateClaimableBalanceOp","cov_18ok35f2j1","_toXDRPrice","CreatePassiveSellOfferOp","cov_ddzl4hh7m","cov_2ja87yiq3j","extendFootprintOp","ExtendFootprintTtlOp","ext","ExtensionPoint","cov_1otwz4a286","cov_kjwoa18hm","cov_2ho1ihsrtk","InvokeHostFunctionOp","HostFunction","InvokeContractArgs","xdrPublicKey","CreateContractArgs","ContractExecutable","ContractIdPreimageFromAddress","cov_199b2i0yie","LiquidityPoolDepositOp","cov_1b9jl1xoti","LiquidityPoolWithdrawOp","cov_2lt55pgh28","ManageBuyOfferOp","cov_wfwxnofb3","ManageDataOp","cov_29ksw8fvoo","ManageSellOfferOp","cov_4ethgiff","PathPaymentStrictReceiveOp","cov_w2zmeokzr","PathPaymentStrictSendOp","cov_20uamt47bx","PaymentOp","cov_2pkj2f0ami","RestoreFootprintOp","cov_1z5dq5mam9","LedgerKeyAccount","RevokeSponsorshipOp","toTrustLineXDRObject","LedgerKeyTrustLine","LedgerKeyOffer","LedgerKeyData","LedgerKeyClaimableBalance","LedgerKeyLiquidityPool","rawKey","SignerKey","RevokeSponsorshipOpSigner","cov_goz36s7yg","weightCheckFunction","_checkUnsignedIntValue","isValidSignedPayload","decodeSignedPayload","signedPayloadXdr","SignerKeyDilithium2SignedPayload","Signer","SetOptionsOp","cov_15xmkv08o","clearFlag","setFlag","flagValue","SetTrustLineFlagsOp","cov_9hn7pcfy","_val$constructor","_val$constructor2","toScVal","some","sort","_ref3","_ref4","localeCompare","_ref7","_ref11","_ref12","_ref8","_ref10","keyType","valType","keyOpts","valOpts","ScMapEntry","_ref13","optType","isType","_ref14","_ref15","ScValType","fromScVal","fromEntries","TextDecoder","decode","ScErrorType","cov_1mdujwvldn","signerKeyMap","vb","getVersionByteForPrefix","encoder","raw","decodeCheck","strkeyType","encodeCheck","cov_3kh2zvg3m","FastSigning","dataUint8","secretKeyUint8","ml_dsa44","signatureUint8","publicKeyUint8","aliceKeys","keygen","cov_2fza0njv0f","_toArray","_iterableToArray","Soroban","decimals","formatted","padStart","whole","fraction","rest","shifted","cov_299v0k86jj","SorobanDataBuilder","SorobanTransactionData","resources","SorobanResources","footprint","LedgerFootprint","readOnly","readWrite","instructions","readBytes","writeBytes","resourceFee","_data","cpuInstrs","setFootprint","getReadOnly","getReadWrite","setReadOnly","setReadWrite","getFootprint","cov_2mcp710y2x","versionBytes","mdilithium2PublicKey","dilithium2SecretSeed","strkeyTypes","seed","versionByteName","encoded","decoded","base32","versionByte","checksum","expectedVersion","expectedChecksum","calculateChecksum","verifyChecksum","versionBuffer","unencoded","crcTable","crc16","lookupIndex","cov_18v175hvfo","_envelopeType","_memo","_sequence","seqNum","_source","sourceAccountDilithium2","cond","PreconditionType","_timeBounds","minTime","maxTime","ledgerBounds","_ledgerBounds","minLedger","maxLedger","minSeq","minSeqNum","_minAccountSequence","_minAccountSequenceAge","minSeqAge","_minAccountSequenceLedgerGap","minSeqLedgerGap","_extraSigners","extraSigners","_operations","fromXDRObject","PublicKeyType","rawTx","TransactionV0Envelope","TransactionV0","TransactionV1Envelope","opIndex","HashIdPreimageOperationId","SequenceNumber","opNum","opIdHash","cov_1no0v22595","_networkPassphrase","_tx","_signatures","_fee","txHash","keypairs","sig","signDecorated","keypair","signatureBuffer","signatureBase","toEnvelope","cov_x4y6fyyjf","_toConsumableArray","_arrayWithoutHoles","_nonIterableSpread","BASE_FEE","TimeoutInfinite","TransactionBuilder","baseFee","timebounds","ledgerbounds","minAccountSequence","minAccountSequenceAge","minAccountSequenceLedgerGap","build","unscaledFee","builder","addOperation","innerOps","innerBaseFeeRate","lt","minBaseFee","feeSourceAccount","v0Tx","v1Tx","Preconditions","TransactionExt","xdrMuxedAccount","FeeBumpTransactionInnerTx","FeeBumpTransactionExt","feeBumpTxEnvelope","index","splice","timeoutSeconds","timeoutTimestamp","now","minEpochOrDate","maxEpochOrDate","durationInSeconds","gap","toNumber","isValidDate","TimeBounds","hasV2Preconditions","LedgerBounds","decodeAddress","PreconditionsV2","xtx","cov_mefdo5hx1","OriginBigNumber","DEBUG","cov_19lhearqga","cov_i9jans79o","MAX_INT","rawNumber","fractions","integerValue","ROUND_FLOOR","minus","eq","cov_29s9j5xz9y","rawBytes","decodeMdilithium2PublicKey","_decodeAddressFullyToMuxedAccount","CryptoKeyType","muxed","encodeMdilithium2PublicKey","_encodeMuxedAccountFullyToAddress","cov_2eihqhb8ax","char","isNumber","cov_2oy5w6fzz3","charmap","alphabet","mappings","rfc4648","crockford","base32hex","Decoder","buf","carry","Encoder","lc","toUpperCase","symbol","encode","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","num","base64","ieee754","customInspectSymbol","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","encodingOrOffset","encoding","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","checked","fromObject","assertSize","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","indexSize","arrLength","valLength","foundIndex","found","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","units","utf16leToBytes","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","kMaxLength","proto","typedArraySupport","list","thisStart","thisEnd","thisCopy","targetCopy","ret","out","hexSliceLookupTable","checkOffset","checkInt","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","mul","defineBigIntMethod","validateNumber","first","last","boundsError","sub","targetStart","errors","addNumericalSeparator","range","checkBounds","received","INVALID_BASE64_RE","leadSurrogate","base64clean","src","dst","table","i16","BufferBigIntNotDefined","GetIntrinsic","callBind","$indexOf","allowMissing","intrinsic","setFunctionLength","$TypeError","$apply","$call","$reflectApply","$defineProperty","$max","originalFunction","applyBind","functions","label","time","format","expression","$SyntaxError","gopd","property","nonEnumerable","nonWritable","nonConfigurable","loose","desc","hasSymbols","toStr","defineDataProperty","supportsDescriptors","predicates","EvalError","SyntaxError","URIError","isCallable","thisArg","receiver","forEachArray","forEachString","forEachObject","concatty","that","bound","arrLike","slicy","boundLength","boundArgs","joiner","joiny","Empty","implementation","$Error","$EvalError","$RangeError","$ReferenceError","$URIError","$Function","getEvalledConstructor","expressionSyntax","$gOPD","throwTypeError","ThrowTypeError","calleeThrows","gOPDthrows","hasProto","getProto","needsEval","TypedArray","INTRINSICS","AggregateError","Atomics","BigInt64Array","BigUint64Array","DataView","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","eval","Float32Array","Float64Array","FinalizationRegistry","Int8Array","Int16Array","Int32Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","WeakRef","WeakSet","errorProto","doEval","gen","LEGACY_ALIASES","hasOwn","$concat","$spliceApply","$replace","$strSlice","$exec","rePropName","reEscapeChar","getBaseIntrinsic","alias","intrinsicName","quote","subString","stringToPath","intrinsicBaseName","intrinsicRealName","skipFurtherCaching","isOwn","part","hasPropertyDescriptors","hasArrayLengthDefineBug","$Object","origSymbol","hasSymbolSham","symObj","getOwnPropertyNames","syms","$hasOwn","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","ctor","superCtor","super_","TempCtor","hasToStringTag","$toString","callBound","isStandardArguments","isLegacyArguments","callee","supportsStandardArguments","badArrayLike","isCallableMarker","fnToStr","reflectApply","constructorRegex","isES6ClassFn","fnStr","tryFunctionObject","isIE68","isDDA","document","all","strClass","isFnRegex","generatorFunc","getGeneratorFunc","getPolyfill","shim","polyfill","whichTypedArray","keysShim","isArgs","isEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","isObject","isFunction","isArguments","isString","theKeys","skipProto","skipConstructor","equalsConstructorPrototypeIfNotBuggy","origKeys","originalKeys","keysWorksWithArguments","objectKeys","toObject","$push","$propIsEnumerable","originalGetSymbols","source1","to","getSymbols","nextKey","propValue","assign","letters","lacksProperEnumerationOrder","preventExtensions","thrower","assignHasPendingExceptions","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","copyProps","SafeBuffer","hasDescriptors","gOPD","$floor","functionLengthIsConfigurable","functionLengthIsWritable","blockSize","finalSize","_block","_finalSize","_blockSize","enc","block","assigned","remainder","_update","rem","lowBits","highBits","_hash","algorithm","Algorithm","sha","sha1","sha224","sha384","sha512","inherits","Sha","init","_w","rotl30","ft","_a","_b","_c","_d","_e","Sha1","rotl5","Sha256","Sha224","_f","_g","_h","ch","maj","sigma0","sigma1","gamma0","T1","T2","SHA512","Sha384","_ah","_bh","_ch","_dh","_eh","_fh","_gh","_hh","_al","_bl","_cl","_dl","_el","_fl","_gl","_hl","writeInt64BE","Sha512","Ch","xl","Gamma0","Gamma0l","Gamma1","Gamma1l","getCarry","ah","bh","dh","eh","fh","gh","hh","al","bl","cl","dl","el","fl","gl","hl","xh","gamma0l","gamma1","gamma1l","Wi7h","Wi7l","Wi16h","Wi16l","Wil","Wih","majh","majl","sigma0h","sigma0l","sigma1h","sigma1l","Kih","Kil","chh","chl","t1l","t1h","t2l","t2h","gf","randombytes","_0","_9","gf0","gf1","_121665","D2","ts64","vn","xi","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","inp","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t2","t3","t4","t5","t6","t7","pad","leftover","fin","crypto_onetimeauth","outpos","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","sel25519","pack25519","neq25519","par25519","unpack25519","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","inv25519","pow2523","crypto_scalarmult","x32","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","mask","want","crypto_box_afternm","crypto_box_open_afternm","crypto_hashblocks_hl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","wh","wl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","crypto_hash","cswap","pack","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","sk","seeded","modL","crypto_sign","sm","smlen","crypto_sign_open","chk","den","den2","den4","den6","unpackneg","crypto_secretbox_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","cleanup","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","randomBytes","secretbox","open","box","keyLength","nonceLength","overheadLength","scalarMult","scalarLength","groupElementLength","before","checkBoxLengths","after","keyPair","fromSecretKey","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","mlen","detached","fromSeed","seedLength","signatureLength","hashLength","setPRNG","crypto","msCrypto","getRandomValues","isArgumentsObject","isTypedArray","BigIntSupported","SymbolSupported","ObjectToString","numberValue","stringValue","booleanValue","bigIntValue","symbolValue","checkBoxedPrimitive","prototypeValueOf","isMapToString","isSetToString","isWeakMapToString","isWeakSetToString","isArrayBufferToString","isArrayBuffer","working","isDataViewToString","isDataView","isUint8Array","isUint8ClampedArray","isUint16Array","isUint32Array","isInt8Array","isInt16Array","isInt32Array","isBigInt64Array","isBigUint64Array","isWeakMap","isWeakSet","SharedArrayBufferCopy","isSharedArrayBufferToString","isSharedArrayBuffer","isAsyncFunction","isMapIterator","isSetIterator","isGeneratorObject","isWebAssemblyCompiledModule","descriptors","formatRegExp","objects","isNull","deprecate","noDeprecation","throwDeprecation","traceDeprecation","trace","debugs","debugEnvRegex","NODE_DEBUG","debugEnv","seen","stylize","stylizeNoColor","colors","isBoolean","_extend","isUndefined","stylizeWithColor","formatValue","styleType","style","styles","primitive","simple","formatPrimitive","visibleKeys","idx","arrayToHash","isError","formatError","braces","toUTCString","formatProperty","formatArray","numLinesEst","reduceToSingleString","ar","re","debuglog","pid","types","isNullOrUndefined","isSymbol","isPrimitive","months","prop","getHours","getMinutes","getSeconds","getDate","getMonth","origin","kCustomPromisifiedSymbol","callbackifyOnRejected","cb","newReason","promisify","original","promiseResolve","promiseReject","promise","reject","callbackify","callbackified","maybeCb","rej","availableTypedArrays","typedArrays","$slice","cache","typedArray","superProto","tag","getter","trySlices","tryTypedArrays","possibleNames","isSafeInteger","isBytes","lengths","outputLen","blockLen","exists","checkFinished","destroyed","finished","U32_MASK64","_32n","fromBig","le","lst","Ah","Al","toBig","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","Bh","Bl","add3L","Cl","add3H","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","round","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","rounds","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","Keccak","suffix","enableXOF","posOut","state32","keccak","byteSwap32","toBytes","take","writeInto","bufferOut","xofInto","xof","digestInto","destroy","_cloneInto","wrapConstructor","sha3_224","sha3_256","sha3_384","sha3_512","keccak_224","keccak_256","keccak_384","keccak_512","genShake","wrapXOFConstructorWithOpts","dkLen","shake128","shake256","u8","createView","rotr","word","rotl","byteSwap","byteSwapIfBE","hexes","bytesToHex","hex","asciis","_A","_F","asciiToBase16","hexToBytes","ai","n1","n2","asyncLoop","iters","tick","ts","diff","TextEncoder","concatBytes","arrays","sum","checkOpts","defaults","hashCons","hashC","wrapConstructorWithOpts","bytesLength","bitReversal","revrsd","genCrystals","newPoly","ROOT_OF_UNITY","brvBits","isKyber","mod","modulo","nttZetas","getZettas","LEN1","LEN2","NTT","zeta","smod","bitsCoder","getMask","bytesLen","poly","bufLen","createXofShake","shake","_seed","seedLen","calls","xofs","stats","clean","XOF128","XOF256","GAMMA2_1","GAMMA2_2","PARAMS","GAMMA1","GAMMA2","TAU","ETA","OMEGA","polyCoder","compress","polyAdd","polySub","polyShiftl","polyChknorm","MultiplyNTTs","RejNTTPoly","getDilithium","CRH_BYTES","TR_BYTES","C_TILDE_BYTES","BETA","decompose","rPlus","HighBits","LowBits","UseHint","Power2Round","hintCoder","ETACoder","T0Coder","T1Coder","ZCoder","W1Coder","W1Vec","vecCoder","publicCoder","splitCoder","secretCoder","sigCoder","CoefFromHalfByte","RejBoundedPoly","SampleInBall","pre","masks","maskPos","maskBit","polyPowerRound","res0","res1","polyUseHint","polyMakeHint","cnt","seedCoder","signRandBytes","seedDst","rho","rhoPrime","K_","xofPrime","s1","s2","s1Hat","aij","cleanBytes","_K","pv","mu","rnd","ensureBytes","rhoprime","x256","main_loop","kappa","wi","w1","cTilde","cHat","cs1","cs2","ct0","zNtt","wTick1","ct12d","Az","wApprox","c2","acc","equalBytes","ml_dsa65","ml_dsa87","getLength","bufs","vecLen","isNumeric","mathceil","mathfloor","bignumberError","tooManyDigits","BASE","LOG_BASE","POWS_TEN","SQRT_BASE","MAX","bitFloor","coeffToString","xc","yc","intCheck","isOdd","toExponential","toFixedPoint","zs","configObject","convertBase","parseNumeric","pow2_53","random53bitInt","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","prefix","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","ALPHABET","alphabetHasNormalDecimalDigits","caseChanged","isNum","_isBigNumber","rm","c0","ne","maxOrMin","normalise","sd","ni","rd","pows10","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","minimum","dp","rand","decimal","toBaseOut","baseIn","baseOut","arrL","callerIsToString","multiply","temp","xlo","xhi","klo","khi","aL","bL","cmp","subtract","more","prod","prodL","qc","remL","rem0","xL","yc0","yL","yz","p1","p2","absoluteValue","comparedTo","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","isEqualTo","isGreaterThan","isGreaterThanOrEqualTo","gte","isLessThan","isLessThanOrEqualTo","lte","isPositive","xLTy","xe","ye","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFormat","g1","g2","intPart","fractionPart","isNeg","intDigits","toFraction","md","exp","n0","toPrecision","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","__esModule","definition","hmd","children","__webpack_exports__"],"sourceRoot":""}